package life.genny.rules;


import life.genny.rules.QRules;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.utils.RulesUtils;

rule "Answer"

    when
        $m : QDataAnswerMessage( QDataAnswerMessage.getData_type().equals(Answer.class.getSimpleName()) )
        rules: QRules( 	isState("STARTED") &&
						!isState("ANSWER_PROCESSED"))
    then
        rules.header();
		rules.setState("ANSWER_PROCESSED");
        Answer[] answers = $m.getItems();
        List<Answer> answersToSave = new ArrayList<Answer>();

		if(answers != null && answers.length > 0) {

			Answer firstAnswer = answers[0];
			String attributeCode = firstAnswer.getAttributeCode();
			String targetCode = firstAnswer.getTargetCode();

			if(attributeCode.contains("ADDRESS_JSON")) {
				answersToSave.addAll(rules.processAddressAnswers($m));
			}

			/* === TODO: this is channel40 specific code. should be moved to ch40 folder === */
			else if(attributeCode.contains("PRI_RATING")) {
				rules.processAnswerRating($m, "PRI_DRIVER_RATING");
			}
			else if(attributeCode.contains("PRI_LOAD_IMAGE")) {
				rules.processImageUpload($m, "PRI_IMAGE_URL");
				answersToSave.addAll(rules.processAnswer($m));
			}
			else if(attributeCode.contains("PRI_USER_PROFILE_PICTURE")) {
				rules.processImageUpload($m, "PRI_IMAGE_URL");
				answersToSave.addAll(rules.processAnswer($m));
			}
			else if(attributeCode.contains("PRI_COMPANY_LOGO")) {
				rules.processImageUpload($m, "PRI_IMAGE_URL");
				answersToSave.addAll(rules.processAnswer($m));
			}
			else if(attributeCode.equals("PRI_MESSAGE")) {
				rules.processAnswerMessage($m);
			}
			else if(attributeCode.contains("PRI_PAYMENT_METHOD") && !rules.isState("PAYMENT_ANSWER")) {
				rules.setState("PAYMENT_ANSWER");
				drools.setFocus("makepayment");
			} else {
				answersToSave.addAll(rules.processAnswer($m));
			}
		}
		
		/* If the target code of an answer is "Search", then we don't want to persist it */
		/* All other types of answers are persisted */
		if(answers != null && answers.length > 0) {
			Answer answer = answers[0];
			String targetCode = answer.getTargetCode();
			if(!targetCode.startsWith("SBE_")) {
				rules.baseEntity.saveAnswers(answersToSave);
			} else {
				rules.println("Search answer");
				rules.setState("SBE_ANSWER");
			}
		}

       rules.footer();

end
