package life.genny.rules;
global org.apache.logging.log4j.Logger log;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.FramePosition;
import life.genny.utils.FrameUtils2;
import life.genny.models.Frame3;
import life.genny.models.FramePosition;
import life.genny.models.GennyToken;
import life.genny.models.Theme;
import life.genny.models.ThemeAttributeType;
import life.genny.qwanda.VisualControlType;
import life.genny.qwanda.message.QDataAskMessage;

rule "addInternshipTemplate"
    ruleflow-group 'GenerateForms'
      no-loop true
    when
      $process : WorkflowProcessInstance() 
      rules : QRules()
      serviceToken : GennyToken()
    then
	Theme THM_COLOR_GREY = Theme.builder("THM_COLOR_RED").addAttribute().backgroundColor("red").end().build();

	Theme THM_COLOR_BLACK = Theme.builder("THM_COLOR_BLACK").addAttribute().backgroundColor("#ffffff").end().build();

	Theme THM_FORM_INPUT_DEFAULT = Theme.builder("THM_FORM_INPUT_DEFAULT").addAttribute().borderBottomWidth(1)
			.borderColor("#ddd").borderStyle("solid").placeholderColor("#888").end()
			.addAttribute(ThemeAttributeType.PRI_CONTENT_HOVER).borderColor("#aaa").end()
			.addAttribute(ThemeAttributeType.PRI_CONTENT_ACTIVE).borderColor("green").end()
			.addAttribute(ThemeAttributeType.PRI_CONTENT_ERROR).borderColor("red").color("red").end().build();

	Theme THM_FORM_LABEL_DEFAULT = Theme.builder("THM_FORM_LABEL_DEFAULT").addAttribute().end().build();

	Theme THM_FORM_WRAPPER_DEFAULT = Theme.builder("THM_FORM_WRAPPER_DEFAULT").addAttribute().marginBottom(10)
			.padding(10).end().addAttribute(ThemeAttributeType.PRI_CONTENT_ERROR).backgroundColor("#fc8e6").end().build();

	Theme THM_FORM_ERROR_DEFAULT = Theme.builder("THM_FORM_ERROR_DEFAULT").addAttribute().color("red").end().build();

	Theme THM_FORM_DEFAULT = Theme.builder("THM_FORM_DEFAULT").addAttribute().backgroundColor("none").end()
			.addAttribute(ThemeAttributeType.PRI_HAS_QUESTION_GRP_TITLE, true).end()
			.addAttribute(ThemeAttributeType.PRI_HAS_QUESTION_GRP_DESCRIPTION, true).end()
			.addAttribute(ThemeAttributeType.PRI_HAS_LABEL, true).end()
			.addAttribute(ThemeAttributeType.PRI_HAS_REQUIRED, true).end()
			.addAttribute(ThemeAttributeType.PRI_HAS_ICON, true).end().build();

	Theme THM_FORM_CONTAINER_DEFAULT = Theme.builder("THM_FORM_CONTAINER_DEFAULT").addAttribute()
			.backgroundColor("white").padding(10).maxWidth(700).width("100%").shadowColor("#000").shadowOpacity(0.4)
			.shadowRadius(5).shadowOffset().width(0).height(0).end().end()
			.addAttribute(ThemeAttributeType.PRI_HAS_QUESTION_GRP_TITLE, true).end()
			.addAttribute(ThemeAttributeType.PRI_HAS_QUESTION_GRP_DESCRIPTION, true).end()
			.addAttribute(ThemeAttributeType.PRI_IS_INHERITABLE, false).end().build();

	Theme THM_BUTTONS = Theme.builder("THM_BUTTONS")
			.addAttribute().backgroundColor("#ffffff").padding(10)
			.justifyContent("center").borderColor("#000000").margin(4).maxWidth(700).width("100%").shadowColor("#000")
			.shadowOpacity(0.8).shadowRadius(5)
			.end()
			.build();

			Theme THM_OF = Theme.builder("THM_OF")
				.addAttribute().overflowY("auto").end()
				.addAttribute(ThemeAttributeType.PRI_IS_INHERITABLE, false)
		.end()
	.build();

	Frame3 frameForm = Frame3.builder("FRM_FORM")
				.addTheme(THM_COLOR_BLACK).end()
				.addTheme(THM_OF).end()
				.question("QUE_ADD_INTERNSHIP_TEMPLATE_AGENT_GRP")
					.addTheme(THM_FORM_INPUT_DEFAULT)
					.vcl(VisualControlType.VCL_INPUT).weight(2.0).end().
					addTheme(THM_FORM_LABEL_DEFAULT)
					.vcl(VisualControlType.VCL_LABEL).end()
					.addTheme(THM_FORM_WRAPPER_DEFAULT).vcl(VisualControlType.VCL_WRAPPER).end()
					.addTheme(THM_FORM_ERROR_DEFAULT).vcl(VisualControlType.VCL_ERROR).end()
					.addTheme(THM_FORM_DEFAULT).weight(3.0).end()
					.addTheme(THM_FORM_CONTAINER_DEFAULT).weight(2.0).end()
			.end()
			.build();

	Frame3 frameCentre = Frame3.builder("FRM_CENTRE")
					.addFrame(frameForm, FramePosition.NORTH).end()
				.build();

	Frame3 frameMain = Frame3.builder("FRM_MAIN")
				.addTheme(THM_COLOR_GREY).end()
				.addFrame(frameCentre, FramePosition.CENTRE)
			.end()
			.build();

	Frame3 frameRoot = Frame3.builder("FRM_ROOT").addFrame(frameMain).end().build();

	Set<QDataAskMessage> askMsgs = new HashSet<QDataAskMessage>();

	QDataBaseEntityMessage msg = FrameUtils2.toMessage(frameRoot, serviceToken, askMsgs);

	/* send message */
	rules.publishCmd(msg);

	System.out.println("Sending Asks");
	for (QDataAskMessage askMsg : askMsgs) {
		rules.publishCmd(askMsg, serviceToken.getUserCode(), serviceToken.getUserCode());
	}

	System.out.println("Sent");
  
end
