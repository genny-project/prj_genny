package life.genny.rules;





import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;

rule "SBE_GRP_ROLES"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
    	not  SearchEntity (code == "SBE_GRP_ROLES")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate SBE_GRP_ROLES ");
 		
         SearchEntity searchBE = new SearchEntity("SBE_GRP_ROLES","All ROLES")	
	        .setSourceCode("GRP_ROLES")
	        .setPageStart(0)
	        .setPageSize(10000);
			
  	     searchBE.setRealm(serviceToken.getRealm());
  	     
 		 insert(searchBE);
  		 VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());
end
