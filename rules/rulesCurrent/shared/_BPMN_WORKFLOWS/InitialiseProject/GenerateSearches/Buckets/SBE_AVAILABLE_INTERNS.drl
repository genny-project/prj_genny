package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_AVAILABLE_INTERNS"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
       not  SearchEntity (code == "SBE_AVAILABLE_INTERNS")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate "+drools.getRule().getName() );

      SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Available")
                              .addSort("PRI_CREATED", "Created", SearchEntity.Sort.DESC)
                              .addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "PER_%")
                              .addFilter("PRI_IS_INTERN", true)
                              .addColumn("PRI_STATUS_COLOR", "Status")
                              .addColumn("PRI_INTERN_IMAGE_URL", "Image")
                              .addColumn("PRI_STATUS", "Status")
                              .addColumn("PRI_INTERN_NAME", "Name")
                              .addColumn("PRI_STUDENT_ID", "Student Id")
                              .addColumn("PRI_EDU_PROVIDER_NAME", "Edu Provider")
                              .addColumn("PRI_INTERN_EMAIL", "Email")
                              .addColumn("PRI_INTERN_MOBILE", "Mobile")
                              .addColumn("PRI_INTERN_STUDENT_ID", "Student ID").setPageStart(0).setPageSize(10);

      searchBE.setRealm(serviceToken.getRealm());

      insert(searchBE);
      VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());

end
