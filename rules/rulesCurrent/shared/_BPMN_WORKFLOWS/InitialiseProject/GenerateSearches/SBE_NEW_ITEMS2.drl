package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;

rule "SBE_NEW_ITEMS2"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
       $process : WorkflowProcessInstance( ) 
     then
     	System.out.println("Generate SBE_NEW_ITEMS2 Rule");
 
		GennyToken serviceToken = (GennyToken)$process.getVariable("serviceToken"); 
    
         SearchEntity searchBE = new SearchEntity("SBE_NEW_ITEMS2","All New Items")
  	     .addSort("PRI_CREATED","Created",SearchEntity.Sort.DESC)
  	     .setSourceCode("GRP_NEW_ITEMS")
  	     .addFilter("PRI_CODE",SearchEntity.StringFilter.LIKE,"BEG_%")
  	     .setPageStart(0)
  	     .setPageSize(10000);
  	     
  	     searchBE.setRealm(serviceToken.getRealm());

  		 VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());
  		 

end
