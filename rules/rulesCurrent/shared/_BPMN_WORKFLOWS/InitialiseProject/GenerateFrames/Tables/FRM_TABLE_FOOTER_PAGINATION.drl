package life.genny.rules;




global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.qwanda.validation.Validation;
import life.genny.qwanda.validation.ValidationList;
import life.genny.qwanda.datatype.DataType;

rule "FRM_TABLE_FOOTER_PAGINATION"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_TABLE_FOOTER_PAGINATION")
      serviceToken : GennyToken( code == "PER_SERVICE")
      
    then
        System.out.println("   Generate FRM_TABLE_FOOTER_PAGINATION Rule  "+serviceToken.getUserCode());

        Validation validation = new Validation("VLD_ANYTHING", "Anything", ".*");
        List<Validation> validations = new ArrayList<>();
        validations.add(validation);
                        
        ValidationList buttonValidationList = new ValidationList();
        buttonValidationList.setValidationList(validations);

        DataType buttonDataType = new DataType("DTT_EVENT", buttonValidationList, "Event", "");
        
        Frame3 frame = Frame3.builder("FRM_TABLE_FOOTER_PAGINATION")
                      .addTheme("THM_DISPLAY_HORIZONTAL", serviceToken).end()
                      .addTheme("THM_JUSTIFY_CONTENT_FLEX_END", ThemePosition.CENTRE, serviceToken).end()
                      .question("QUE_TABLE_FOOTER_GRP")
                        .addTheme("THM_DISPLAY_HORIZONTAL", serviceToken).end()
                        .addTheme("THM_PROJECT_COLOR_PRIMARY_VARIANT_LIGHT", serviceToken).dataType(buttonDataType).end()
                        .addTheme("THM_TABLE_HEADER_CELL_WRAPPER", serviceToken).vcl(VisualControlType.VCL_WRAPPER).end()
                        .addTheme("THM_TEXT_ALIGN_CENTER", serviceToken).vcl(VisualControlType.VCL_INPUT).end()
                      .end()
                      .build();
                                
    
        frame.setRealm(serviceToken.getRealm());
        insert (frame);
        FrameUtils2.toMessage(frame, serviceToken);
			
end
