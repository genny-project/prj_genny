package life.genny.rules;





global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;

rule "FRM_TAB_ITEM_BUCKET_VIEW"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_TAB_ITEM_BUCKET_VIEW")
      serviceToken : GennyToken( code == "PER_SERVICE")

    then
			System.out.println("   Generate FRM_TAB_ITEM_BUCKET_VIEW Rule  "+serviceToken.getUserCode());

			Frame3 frame = Frame3.builder("FRM_TAB_ITEM_BUCKET_VIEW")
										.addTheme("THM_TAB", serviceToken).end()
										.addTheme("THM_TAB_WIDTH", ThemePosition.WRAPPER, serviceToken).end()
										.question("QUE_TAB_VIEW")
										.end()
										.build();

			frame.setRealm(serviceToken.getRealm());
			insert (frame);

			/* Process and save to cache */
			FrameUtils2.toMessage(frame, serviceToken);
end
