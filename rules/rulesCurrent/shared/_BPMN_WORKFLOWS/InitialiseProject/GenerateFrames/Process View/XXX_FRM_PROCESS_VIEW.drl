/* package life.genny.rules;


global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.qwanda.validation.Validation;
import life.genny.qwanda.validation.ValidationList;
import life.genny.qwanda.datatype.DataType;
import life.genny.utils.TableUtils;
import life.genny.utils.TableUtilsTest;

rule "FRM_PROCESS_VIEW"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_PROCESS_VIEW")
      serviceToken : GennyToken( code == "PER_SERVICE")
      /* rules : QRules() */
    /* then
        System.out.println("Generating Process View");
        
        BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);
        TableUtilsTest tableUtils = new TableUtilsTest(beUtils); */
       		
   /*end */