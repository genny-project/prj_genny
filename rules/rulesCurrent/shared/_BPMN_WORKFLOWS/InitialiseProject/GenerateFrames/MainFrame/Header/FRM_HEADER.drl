package life.genny.rules;














global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.models.ThemePosition;

rule "FRM_HEADER"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_HEADER")
      serviceToken : GennyToken( code == "PER_SERVICE")
       FRM_PROJECT_NAME : Frame3 ( code == "FRM_PROJECT_NAME" ) 
      FRM_SEARCH_BAR : Frame3 ( code == "FRM_SEARCH_BAR" ) 
      FRM_HEADER_OPTIONS : Frame3 ( code == "FRM_HEADER_OPTIONS" )
      FRM_PADDING : Frame3 ( code == "FRM_PADDING" )
      FRM_HEADER_ADD_ITEMS : Frame3 ( code == "FRM_HEADER_ADD_ITEMS" ) 
      FRM_HEADER_DRAFTS : Frame3 ( code == "FRM_HEADER_DRAFTS" ) 
      FRM_HEADER_USERNAME : Frame3 ( code == "FRM_HEADER_USERNAME" ) 
      FRM_HEADER_PROFILE_PICTURE : Frame3 ( code == "FRM_HEADER_PROFILE_PICTURE" ) 
    then
      System.out.println("   Generate FRM_HEADER Rule  "+serviceToken.getUserCode());

      Frame3 frame =  Frame3.builder("FRM_HEADER")
                        .addTheme("THM_HEADER",ThemePosition.WRAPPER, serviceToken).end()
                        .addFrame(FRM_PROJECT_NAME, FramePosition.WEST).end()
                        .addFrame(FRM_SEARCH_BAR, FramePosition.CENTRE).end()
                        .addFrame(FRM_HEADER_OPTIONS, FramePosition.EAST).end()
                        .addFrame(FRM_HEADER_USERNAME, FramePosition.EAST).end()
                        .addFrame(FRM_HEADER_PROFILE_PICTURE, FramePosition.EAST).end()
                        .addFrame(FRM_HEADER_ADD_ITEMS, FramePosition.EAST).end()
                        .addFrame(FRM_HEADER_DRAFTS, FramePosition.EAST).end()
                        .addFrame(FRM_PADDING, FramePosition.EAST).end()
                        .build();
      
      frame.setRealm(serviceToken.getRealm());
      insert (frame);
      /* Process and save to cache */
      FrameUtils2.toMessage(frame, serviceToken);
end
