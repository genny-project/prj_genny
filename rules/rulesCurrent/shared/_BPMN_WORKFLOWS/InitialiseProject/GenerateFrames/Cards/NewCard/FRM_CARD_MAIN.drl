package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.qwanda.VisualControlType;

rule "FRM_CARD_MAIN"
  ruleflow-group 'GenerateFrames'

  when
    not  Frame3(code == "FRM_TAB_HEADER")
    serviceToken : GennyToken( code == "PER_SERVICE")

    FRM_CARD_LEFTS : Frame3 ( code == "FRM_CARD_LEFTS" )
    FRM_CARD_CENTRES : Frame3 ( code == "FRM_CARD_CENTRES" )
    FRM_CARD_RIGHTS : Frame3 ( code == "FRM_CARD_RIGHTS" )
    FRM_CARD_BOTTOM : Frame3 ( code == "FRM_CARD_BOTTOM" )
  then
    System.out.println(" Generate FRM_CARD_MAIN Rule  "+serviceToken.getUserCode());

    Frame3 frame = Frame3.builder("FRM_CARD_MAIN")
                  .addFrame(FRM_CARD_LEFTS, FramePosition.WEST).end()
                  .addFrame(FRM_CARD_CENTRES, FramePosition.CENTRE).end()
                  .addFrame(FRM_CARD_RIGHTS, FramePosition.EAST).end()
                  .addFrame(FRM_CARD_BOTTOM, FramePosition.SOUTH).end()
                  .build();
    frame.setRealm(serviceToken.getRealm());
    insert (frame);

    /* Process and save to cache */
    FrameUtils2.toMessage(frame, serviceToken);
end