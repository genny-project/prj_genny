package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.attribute.Attribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwandautils.GennySettings;
import life.genny.qwanda.datatype.CapabilityMode;

import org.apache.commons.lang3.text.WordUtils;

rule "ROL_AGENT"
    ruleflow-group 'GenerateCapabilities'
     no-loop true
    when
       not  BaseEntity (code == "ROL_AGENT")
        capabilityUtils : CapabilityUtils()
        user : BaseEntity (code == "ROL_USER")   
        beUtils : BaseEntityUtils()           
     then
     	System.out.println("   Generate "+drools.getRule().getName() );
 		 
   	     BaseEntity role = capabilityUtils.getBeUtils().create(drools.getRule().getName(),WordUtils.capitalize(drools.getRule().getName().substring(4)));
  
    	 beUtils.saveAnswer(new Answer(beUtils.getGennyToken().getUserCode(), role.getCode(), "PRI_COLOR", "#1183C8",false,true));
 
    	 capabilityUtils.inheritRole(role,user);
  	     
   	     capabilityUtils.addCapabilityToRole(role,"VERIFY_EMAIL",CapabilityMode.DELETE);
   	     capabilityUtils.addCapabilityToRole(role,"VIEW_AVAILABLE_INTERNS",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"APPLY",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"SHORTLIST_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"INTERVIEW_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"INTERVIEW_APPLICATION",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"OFFER",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"PLACE_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_AGREEMENT",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"VIEW_AGREEMENT",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"FINISH_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"ARCHIVE_INTERN",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"ARCHIVE_INTERNSHIP",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"UNARCHIVE_INTERNSHIP",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"DUPLICATE_INTERNSHIP",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"DELETE_INTERNSHIP",CapabilityMode.VIEW);
	     capabilityUtils.addCapabilityToRole(role,"ARCHIVE_HCR",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"ARCHIVE_EPR",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"VALIDATE_HC",CapabilityMode.VIEW);
	     capabilityUtils.addCapabilityToRole(role,"UNARCHIVE_INTERN",CapabilityMode.VIEW);
	     capabilityUtils.addCapabilityToRole(role,"POST_INTERVIEW",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"ON_HOLD_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"REJECT_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"WITHDRAW_APPLICATION",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"ACCESS_NOTES",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"VIEW_JOURNAL",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"RATE_INTERN",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"VIEW_RATING",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"START_INTERNSHIP",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_INTERNSHIP",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_INTERN",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_AGENT",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_HCR",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_EPR",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_REF_PART_REP",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_REF_PART",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_HOST_COMPANY",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_EDU_PROVIDER",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_AGENCY",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"DOWNLOAD_OHNS_AGREEMENT_DOC",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"DOWNLOAD_SERVICE_AGREEMENT_DOC",CapabilityMode.VIEW);
   	     capabilityUtils.addCapabilityToRole(role,"EDIT_APPLICATION",CapabilityMode.EDIT);
   	     capabilityUtils.addCapabilityToRole(role,"DOWNLOAD_HC_TERMS_AND_CONDITIONS_DOC",CapabilityMode.VIEW);
				capabilityUtils.addCapabilityToRole(role,"APPROVE_JOURNALS",CapabilityMode.EDIT);
				capabilityUtils.addCapabilityToRole(role,"UNAPPROVE_JOURNALS",CapabilityMode.EDIT);
 
  	     role = capabilityUtils.getBeUtils().getBaseEntityByCode(role.getCode());
  	     
  	    beUtils.saveAnswer(new Answer(capabilityUtils.getBeUtils().getServiceToken().getUserCode(), role.getCode(), "PRI_WEIGHT", 700.0,false,true));
 
 		 insert(role);
 		 		 
 		 VertxUtils.writeCachedJson(capabilityUtils.getBeUtils().getServiceToken().getRealm(), role.getCode(), JsonUtils.toJson(role), capabilityUtils.getBeUtils().getServiceToken().getToken());
 		 


end
