 package life.genny.rules;



import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Theme;
import life.genny.models.ThemeAttributeType;



rule "THM_FORM_GROUP_WRAPPER_GENNY"
   ruleflow-group 'GenerateThemes'
    no-loop true
    
    when
      not  Theme (code == "THM_FORM_GROUP_WRAPPER_GENNY")
      serviceToken : GennyToken( code == "PER_SERVICE")
      
    then
    
     	System.out.println("   Generate THM_FORM_GROUP_WRAPPER_GENNY Rule ");
 
		Theme theme = Theme.builder("THM_FORM_GROUP_WRAPPER_GENNY")
				.addAttribute()
					.backgroundColor("white")
					.padding(10)
					.maxWidth(600)
					.width("100%")
					.borderWidth(1)
					.borderColor("silver")
					.borderStyle("solid")
					.margin("auto")
					.shadowColor("silver")
					.shadowOpacity(0.8)
					.shadowRadius(1)
				.end()
				.addAttribute(ThemeAttributeType.PRI_HAS_QUESTION_GRP_TITLE, true).end()
				.addAttribute(ThemeAttributeType.PRI_HAS_QUESTION_GRP_DESCRIPTION, true).end()
				.addAttribute(ThemeAttributeType.PRI_IS_INHERITABLE, false).end()
			.build();
                        
		theme.setRealm(serviceToken.getRealm());
		
		insert(theme);

		VertxUtils.putObject(serviceToken.getRealm(), "", theme.getCode(), theme, serviceToken.getToken());
end
 