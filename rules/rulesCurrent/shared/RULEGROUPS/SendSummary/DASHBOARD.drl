package life.genny.rules;

import java.io.IOException;

global java.util.Set stringSet;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.entity.EntityEntity;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import life.genny.security.EncryptionUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import java.util.Optional;

rule "DASHBOARD"
    ruleflow-group 'SendSummary'
     salience 1000
     no-loop true
    when
 	  userToken : GennyToken ( code != "PER_SERVICE" ) 
  	/*  project : BaseEntity ( code matches "PRJ_\\S+" ) */
	  serviceToken : GennyToken ( code == "PER_SERVICE" ) 
	  beUtils : BaseEntityUtils() 
	  allowed : Allowed(code == "USER") 
    then
   		System.out.println("Rule -> "+drools.getRule().getName()+" !! :  user=" + userToken.getUserCode());
  			
  		BaseEntity user = beUtils.getBaseEntityByCode(userToken.getUserCode());	
  		BaseEntity project = beUtils.getBaseEntityByCode("PRJ_"+userToken.getRealm().toUpperCase());	
  			
	
		/* send the summary BE */
		
	
	
		
		retract(allowed);
	

end
