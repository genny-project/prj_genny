package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.attribute.AttributeText;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.BaseEntityDefinition;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "DEF_USER"
    ruleflow-group 'GenerateDefinitions'
     no-loop true
    when
       not  BaseEntityDefinition (code == "DEF_USER")
        serviceToken : GennyToken( code == "PER_SERVICE")
        beUtils : BaseEntityUtils()
     then
     	System.out.println("   Generate "+drools.getRule().getName() );

     	String projectCode = "PRJ_"+serviceToken.getRealm().toUpperCase();

 		BaseEntity project = beUtils.getBaseEntityByCode(projectCode);

        /* AttributeText attributeTextEmail = new AttributeText("PRI_EMAIL", "Email"); */
        AttributeText attributeTextFirstName = new AttributeText("PRI_EMAIL", "First Name");
        AttributeText attributeTextLastName = new AttributeText("PRI_LASTNAME", "Last Name");
        AttributeText attributeAddress = new AttributeText("PRI_ADDRESS_FULL", "Last Name");
        AttributeText attributeUsername = new AttributeText("PRI_USERNAME", "Username");
        AttributeText attributeUUID = new AttributeText("PRI_UUID", "UUID");

		if (project != null) {
         BaseEntity defBE = new BaseEntityDefinition(drools.getRule().getName(),"User","USER")
         .mandateAttribute("PRI_DOB")
         .mandateAttribute("PRI_USERNAME")
         .mandateAttribute("PRI_EMAIL");

         /* defBE.addAttribute(attributeTextEmail, 9.0); */
         defBE.addAttribute(attributeTextFirstName, 10.0);
         defBE.addAttribute(attributeTextLastName, 10.0);
         defBE.addAttribute(attributeAddress, 10.0);

  	      defBE.setRealm(serviceToken.getRealm());

 		   insert(defBE);
		   beUtils.saveBaseEntity(defBE);

   	} else {
   		System.out.println("PROJECT is not in cache "+projectCode);
   	}

end