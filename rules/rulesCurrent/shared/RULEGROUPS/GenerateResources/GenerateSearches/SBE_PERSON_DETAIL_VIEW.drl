package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;

rule "SBE_PERSON_DETAIL_VIEW"
    ruleflow-group 'GenerateSearches'
	salience 10000
    when
		not  SearchEntity (code == "SBE_PERSON_DETAIL_VIEW")
        serviceToken : GennyToken( code == "PER_SERVICE")
  		
     then
     
     	System.out.println("   Generate SBE_PERSON_DETAIL_VIEW ");
     	
         SearchEntity searchBE = new SearchEntity("SBE_PERSON_DETAIL_VIEW", "Person Search")
									/*.addFilter("PRI_CODE", SearchEntity.StringFilter.EQUAL, "PER_USER1")*/
									.addSort("PRI_CREATED", "Created", SearchEntity.Sort.DESC).addColumn("PRI_EMAIL", "Email")
									.addColumn("PRI_MOBILE", "LandLine").addColumn("PRI_ADDRESS_FULL", "Address")
									.addColumn("PRI_ABN", "Company ABN").addColumn("PRI_ACN", "Company ACN").setPageStart(0)
									.setPageSize(10);
									   	     
  	     searchBE.setRealm(serviceToken.getRealm());
  	     
 		 insert(searchBE);
  		 VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());  
  		 
end
