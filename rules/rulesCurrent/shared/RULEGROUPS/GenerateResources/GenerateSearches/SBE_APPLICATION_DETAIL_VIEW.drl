package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;

rule "SBE_APPLICATION_DETAIL_VIEW"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
	
       not  SearchEntity (code == "SBE_APPLICATION_DETAIL_VIEW")
        serviceToken : GennyToken( code == "PER_SERVICE")
        
     then
     	System.out.println("   Generate SBE_APPLICATION_DETAIL_VIEW ");
		
		SearchEntity searchBE = new SearchEntity("SBE_APPLICATION_DETAIL_VIEW", "Search")
				.addFilter("PRI_CODE", SearchEntity.StringFilter.EQUAL, "APP_APPLICATION_THREE")
				.addSort("PRI_CREATED", "Created", SearchEntity.Sort.DESC)
				.addColumn("PRI_INTERNSHIP_TITLE", "Title")
				.addColumn("PRI_INTERN_NAME", "Student")
				.setPageStart(0).setPageSize(10);
   	     
  	     searchBE.setRealm(serviceToken.getRealm());
  	     
 		 insert(searchBE);
  		 VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());
end
