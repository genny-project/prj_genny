package life.genny.rules;

import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_COMMUNICATIONS"
	ruleflow-group 'GenerateSearches'
	no-loop true
	when
		not  SearchEntity (code == "SBE_COMMUNICATIONS")
		serviceToken : GennyToken( code == "PER_SERVICE")
	then
		System.out.println("   Generate "+drools.getRule().getName() );

		SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Communications Templates")
			.addSort("PRI_CREATED", "Created", SearchEntity.Sort.DESC)

			.addFilter("PRI_CODE",SearchEntity.StringFilter.LIKE,"MSG_%")

			.addColumn("PRI_CODE", "Code")
			.addColumn("PRI_NAME", "Name")
			.addColumn("PRI_DESCRIPTION", "Description")
			.addColumn("PRI_DEFAULT_MSG_TYPE", "Default Message Type")
			.addColumn("PRI_CONTEXT_LIST", "Context List")
			.addColumn("PRI_CONTEXT_ASSOCIATIONS", "Context Associations")
			.addColumn("PRI_CC", "CC")
			.addColumn("PRI_BCC", "BCC")
			.addColumn("PRI_BODY", "Body")

		    .addAction("PRI_EVENT_EDIT_MESSAGE", "Edit")

			.setPageStart(0)
			.setPageSize(10000);


		searchBE.setRealm(serviceToken.getRealm());

		insert(searchBE);
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken);

end
