package life.genny.rules;

import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_APPOINTMENTS"
	ruleflow-group 'GenerateSearches'
	no-loop true
	when
		not  SearchEntity (code == "SBE_APPOINTMENTS")
		serviceToken : GennyToken( code == "PER_SERVICE")
	then
		System.out.println("   Generate "+drools.getRule().getName() );

		SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Appointments")
			.addSort("PRI_CREATED", "Created", SearchEntity.Sort.DESC)

			.addFilter("PRI_CODE",SearchEntity.StringFilter.LIKE,"APT_%")
            .addFilter("PRI_IS_APPOINTMENT", true)

			.addColumn("PRI_CODE", "Code")
			.addColumn("PRI_NAME", "Name")
            .addColumn("PRI_DURATION_MIN", "Minimum Duration")
            .addColumn("PRI_START_DATETIME", "Start Date")
            .addColumn("PRI_ACTUAL_START_DATETIME", "Actual Start Date")
            .addColumn("PRI_GENERIC_URL", "URL (Optional)")
            /* .addColumn("LNK_SELECT_TOOL", "Select Tool") */
			.addColumn("LNK_RESOURCES", "Resources")
            .addColumn("LNK_RESOURCES_ACCEPTED", "Accepted Resources")
            
            .addAction("EDIT", "Edit")

			.setPageStart(0)
			.setPageSize(10000);


		searchBE.setRealm(serviceToken.getRealm());

		insert(searchBE);
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken);

end
