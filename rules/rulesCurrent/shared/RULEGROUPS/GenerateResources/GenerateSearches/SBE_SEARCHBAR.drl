package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_SEARCHBAR"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
       not  SearchEntity (code == "SBE_SEARCHBAR")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate "+drools.getRule().getName() );
     	BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);
     	beUtils.setServiceToken(serviceToken);

     	String projectCode = "PRJ_"+serviceToken.getRealm().toUpperCase();

 		 BaseEntity project = beUtils.getBaseEntityByCode(projectCode);

		if (project != null) {
         SearchEntity searchBE = new SearchEntity(drools.getRule().getName(),project.getValue("PRI_NAME",projectCode)+" Search")
  	     .addSort("PRI_NAME","Name",SearchEntity.Sort.ASC)
  	    /* .addFilter("PRI_CODE",SearchEntity.StringFilter.LIKE,"PER_%") */
  	     .addFilter("PRI_NAME",SearchEntity.StringFilter.LIKE,"%") 
					.addColumn("PRI_NAME", "Name")
					.addColumn("PRI_PHONE", "Phone")
					.addColumn("PRI_EMAIL", "Email")
					.addColumn("PRI_ADDRESS_FULL","Address")
					.addAction("PRI_EVENT_VIEW", "View")
  	     .setPageStart(0)
  	     .setPageSize(GennySettings.defaultPageSize);


  	     searchBE.setRealm(serviceToken.getRealm());

 		 insert(searchBE);
		 beUtils.saveSearchEntity(searchBE);
  		/* VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken()); */

   		 } else {
   		 	System.out.println("PROJECT is not in cache "+projectCode);
   		 }

end
