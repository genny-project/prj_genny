package life.genny.rules;



global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;

rule "FRM_DETAIL_VIEW_CARD"
    ruleflow-group 'GenerateFrames'

    when
		not  Frame3(code == "FRM_DETAIL_VIEW_CARD")
		serviceToken : GennyToken( code == "PER_SERVICE")	
		
    then
    	System.out.println("   Generate FRM_DETAIL_VIEW_CARD Rule  "+serviceToken.getUserCode());

		/* Sending Ask with questioncode  QUE_DETAIL_VIEW_TOP_SUMMARY_GRP to display */
		
 	  	Frame3 frame = Frame3.builder("FRM_DETAIL_VIEW_CARD")
 	  					/* .addTheme("THM_DETAIL_VIEW_CARD_WRAPPER", ThemePosition.WRAPPER,serviceToken).end() */
 	  					/* .addTheme("THM_BOX_SHADOW_SM", ThemePosition.WRAPPER,serviceToken).end() */
						.question("QUE_DETAIL_VIEW_SUMMARY_GRP")
						.targetAlias("PER_USER1")
							/*.addTheme(THM_DETAIL_VIEW_INPUT_FIELD).vcl(VisualControlType.INPUT_FIELD).dataType(dtt_upload).end() */
							.addTheme("THM_LABEL",serviceToken).vcl(VisualControlType.VCL_LABEL).end()
							/* .addTheme("THM_FORM_BEHAVIOUR_GENNY",serviceToken).vcl(VisualControlType.GROUP).end() */
							.addTheme("THM_DETAIL_VIEW_CARD_CONTENT",serviceToken).vcl(VisualControlType.GROUP_WRAPPER).end()
							/* .addTheme("THM_DETAIL_VIEW_CONTENT_WRAPPER",serviceToken).vcl(VisualControlType.GROUP_CONTENT_WRAPPER).end() */
							.addTheme("THM_DETAIL_VIEW_VCL_WRAPPER",serviceToken).vcl(VisualControlType.VCL_WRAPPER).end()
							/* new themes */
							.addTheme("THM_DETAIL_VIEW_BEHAVIOUR",serviceToken).vcl(VisualControlType.GROUP).end()
							.addTheme("THM_PROJECT_COLOR_SURFACE",serviceToken).vcl(VisualControlType.INPUT_ITEM_WRAPPER).end()
						.end()
						.build();


			frame.setRealm(serviceToken.getRealm());
			insert (frame);
			/* Process and save to cache */
			
			FrameUtils2.toMessage(frame, serviceToken);
	end
