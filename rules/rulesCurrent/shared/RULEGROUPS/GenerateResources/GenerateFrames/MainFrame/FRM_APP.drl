package life.genny.rules;


/* global org.apache.logging.log4j.Logger log; */

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.models.ThemePosition;

rule "FRM_APP"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_APP")
      serviceToken : GennyToken( code == "PER_SERVICE")
      FRM_HEADER : Frame3 ( code == "FRM_HEADER" ) 
      FRM_CONTENT_WRAPPER : Frame3 ( code == "FRM_CONTENT_WRAPPER" ) 
      FRM_FOOTER : Frame3 ( code == "FRM_FOOTER" ) 
      FRM_SIDEBAR : Frame3 ( code == "FRM_SIDEBAR" ) 
 
    then
			System.out.println("    Generateing FRM_APP_CONTENT Rule  "+serviceToken.getUserCode());

		  /* frame-root */
      		Frame3 frame = Frame3.builder("FRM_APP_CONTENT")
                      .addTheme("THM_PROJECT", ThemePosition.FRAME, serviceToken).end()
                      .addTheme("THM_FONT_FAMILY_ROBOTO", ThemePosition.FRAME, serviceToken).end()
                      .addFrame(FRM_HEADER, FramePosition.NORTH).end() 
                      .addFrame(FRM_SIDEBAR, FramePosition.WEST).end() 
                      .addFrame(FRM_CONTENT_WRAPPER, FramePosition.CENTRE).end() 
                      .addFrame(FRM_FOOTER, FramePosition.SOUTH).end()
                      .build();
			System.out.println(" Generatefdfdfdfdf FRM_APP_CONTENT Rule  "+serviceToken.getUserCode());

			frame.setRealm(serviceToken.getRealm());
			
			System.out.println("   Generating FRM_APP Rule  "+serviceToken.getUserCode());
			
			Frame3 frame2 = Frame3.builder("FRM_APP")
							.addFrame(frame,FramePosition.CENTRE)
							.end()
							.build();
							
			insert (frame2);
			System.out.println("   Generate FRM_APP Rule INSERTED  "+serviceToken.getUserCode());

			/* Process and save to cache */
			FrameUtils2.toMessage(frame2, serviceToken);
			System.out.println("   Generated FRM_APP Rule MSG "+serviceToken.getUserCode());
			
end