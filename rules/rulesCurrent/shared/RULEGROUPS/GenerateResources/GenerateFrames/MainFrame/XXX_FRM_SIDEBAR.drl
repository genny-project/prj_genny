package life.genny.rules;

global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.models.ThemePosition;

rule "FRM_SIDEBAR"

    ruleflow-group 'GenerateFrames'

    when
    
      not  Frame3(code == "FRM_SIDEBAR")
      serviceToken : GennyToken( code == "PER_SERVICE")
      FRM_LOGO : Frame3 ( code == "FRM_LOGO" )
      FRM_TREE_ITEM_DASHBOARD_VIEW  : Frame3 ( code == "FRM_TREE_ITEM_DASHBOARD_VIEW" )
      FRM_TREE_ITEM_TAB_VIEW : Frame3 ( code == "FRM_TREE_ITEM_TAB_VIEW" )
      FRM_TREE_ITEM_FORM_VIEW : Frame3 ( code == "FRM_TREE_ITEM_FORM_VIEW" )
      FRM_TREE_ITEM_DETAIL_VIEW : Frame3 ( code == "FRM_TREE_ITEM_DETAIL_VIEW" )
    then
    
      System.out.println("   Generate FRM_SIDEBAR Rule  "+serviceToken.getUserCode());

      Frame3 frame = Frame3.builder("FRM_SIDEBAR")
                      .addFrame(FRM_LOGO, FramePosition.NORTH).end()
                      .addFrame(FRM_TREE_ITEM_DASHBOARD_VIEW, FramePosition.NORTH).end()
                      .addFrame(FRM_TREE_ITEM_TAB_VIEW, FramePosition.NORTH).end()
                      .addFrame(FRM_TREE_ITEM_FORM_VIEW, FramePosition.NORTH).end()
                      .addFrame(FRM_TREE_ITEM_DETAIL_VIEW, FramePosition.NORTH).end()
                      .build();

      frame.setRealm(serviceToken.getRealm());

      insert (frame);

      /* Process and save to cache */
      FrameUtils2.toMessage(frame, serviceToken);

end
