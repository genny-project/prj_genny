package life.genny.rules;



import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Theme;



rule "THM_FORM_VCL_INPUT_GENNY"
   ruleflow-group 'GenerateThemes'
    no-loop true
    
    when
      not  Theme (code == "THM_FORM_VCL_INPUT_GENNY")
      serviceToken : GennyToken( code == "PER_SERVICE")
      
    then
    
     	System.out.println("   Generates THM_FORM_VCL_INPUT_GENNY Rule ");
 
		Theme theme = Theme.builder("THM_FORM_VCL_INPUT_GENNY")
										.addAttribute()
											/* .borderBottomWidth(1)
											.borderColor("#ddd")
											.borderStyle("solid") */
											.placeholderColor("#888")
										.end()
										.addAttribute(ThemeAttributeType.PRI_CONTENT_HOVER).borderColor("#aaa").end()
										/* .addAttribute(ThemeAttributeType.PRI_CONTENT_ACTIVE).borderColor("green").end() */
										.addAttribute(ThemeAttributeType.PRI_CONTENT_ERROR).borderColor("red").end()
										.addAttribute().end()
									.build();
                        
		theme.setRealm(serviceToken.getRealm());
		
		insert(theme);

		VertxUtils.putObject(serviceToken.getRealm(), "", theme.getCode(), theme, serviceToken.getToken());
end
