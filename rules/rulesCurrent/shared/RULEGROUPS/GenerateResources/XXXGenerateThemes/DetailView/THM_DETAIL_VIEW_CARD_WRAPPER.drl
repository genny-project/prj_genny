package life.genny.rules;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Theme;
import life.genny.models.ThemeAttributeType;



rule "THM_DETAIL_VIEW_CARD_WRAPPER"
   ruleflow-group 'GenerateThemes'
    no-loop true

    when
      not  Theme (code == "THM_DETAIL_VIEW_CARD_WRAPPER")
      serviceToken : GennyToken( code == "PER_SERVICE")

    then

     	System.out.println("   Generate THM_DETAIL_VIEW_CARD_WRAPPER Rule ");

		Theme theme = Theme.builder("THM_DETAIL_VIEW_CARD_WRAPPER")
						.addAttribute()
							/* .backgroundColor("#faf9fa") */
							.justifyContent("flex-start")
							/* .flexShrink(0) */
							/* .flexBasis("auto") */
							/* .flexGrow(0) */
							.height("initial")
							.marginBottom(20)
							.padding(10)
							.maxWidth(700)
							.borderRadius(8)
							.backgroundColor("white")
							.flexGrow(0)
							.flexShrink(0)
							.flexBasis("auto")
						.end()
						.addAttribute(ThemeAttributeType.PRI_IS_INHERITABLE, false)
						.end()
						.build();

		theme.setRealm(serviceToken.getRealm());
		insert(theme);

		VertxUtils.putObject(serviceToken.getRealm(), "", theme.getCode(), theme, serviceToken);
	end
