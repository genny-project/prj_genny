package life.genny.rules;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import com.google.gson.reflect.TypeToken;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.VertxUtils;
import life.genny.utils.TableUtils;
import life.genny.models.TableData;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.Ask;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.utils.OutputParam;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;

import java.util.List;
import java.util.ArrayList;

import java.util.concurrent.Callable;
import java.util.concurrent.CompletionService;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import life.genny.utils.SearchCallable;
import life.genny.utils.TableFrameCallable;
import life.genny.utils.CacheSearchUtils;

rule "ADD_PCM"
    ruleflow-group 'GeneratePCMs'
		salience 5000 
        no-loop true
    when
			beUtils : BaseEntityUtils()
			serviceToken : GennyToken( code == "PER_SERVICE")
			ruleDetails : RuleDetails()
    then
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processings : " );

			System.out.println("Adding PCM...");

			BaseEntity defBE = beUtils.getDEFByCode("DEF_PCM");

			BaseEntity newBe = beUtils.create(defBE, "PCM_HEADER", "PCM Header");

			beUtils.saveAnswer(new Answer(userToken.getUserCode(), "PCM_HEADER", "PRI_IS_PCM", "TRUE"));
			beUtils.saveAnswer(new Answer(userToken.getUserCode(), "PCM_HEADER", "PRI_TEMPLATE_CODE", "TPL_NORTH"));
			beUtils.saveAnswer(new Answer(userToken.getUserCode(), "PCM_HEADER", "PRI_LOC1", "QUE_PROJECT_SIDEBAR_GRP"));
			beUtils.saveAnswer(new Answer(userToken.getUserCode(), "PCM_HEADER", "PRI_LOC2", "QUE_ADD_ITEMS_GRP"));
			beUtils.saveAnswer(new Answer(userToken.getUserCode(), "PCM_HEADER", "PRI_LOC3", "QUE_AVATAR_GRP"));

		end
