package life.genny.rules;


global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.qwanda.VisualControlType;
import life.genny.utils.RulesUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.attribute.Attribute;

rule "PCM_TEST1"
    ruleflow-group 'GeneratePCMs'
       salience 5000 
        no-loop true
    when
      	beUtils : BaseEntityUtils()
	  	serviceToken : GennyToken( code == "PER_SERVICE")
	  	ruleDetails : RuleDetails()
    then
		System.out.println(ruleDetails+" "+drools.getRule().getName()); 
		
		BaseEntity defBe = beUtils.getDEFByCode("DEF_PCM");
		
		BaseEntity pcmTest1 = beUtils.create(defBe,"PCM Test1","PCM_TEST1");

		Answer answer =  new Answer(serviceToken.getUserCode(), pcmTest1.getCode(), "PRI_TEMPLATE_CODE", "TPL_CARD1",false,true);
		Attribute attribute = RulesUtils.getAttribute("PRI_TEMPLATE_CODE", serviceToken);
		answer.setAttribute(attribute);
		pcmTest1.addAnswer(answer);

		answer = new Answer(serviceToken.getUserCode(), pcmTest1.getCode(), "PRI_LOC1", "PRI_FIRSTNAME",false,true);
		attribute = RulesUtils.getAttribute("PRI_LOC1", serviceToken);
		answer.setAttribute(attribute);
		pcmTest1.addAnswer(answer);

		answer = new Answer(serviceToken.getUserCode(), pcmTest1.getCode(), "PRI_LOC2", "PRI_LASTNAME",false,true);
		attribute = RulesUtils.getAttribute("PRI_LOC2", serviceToken);
		answer.setAttribute(attribute);
		pcmTest1.addAnswer(answer);

		beUtils.saveBaseEntity(defBe,pcmTest1);
		
		BaseEntity pcmTest2 = beUtils.create(defBe,"PCM Test2","PCM_TEST2");

		answer = new Answer(serviceToken.getUserCode(), pcmTest2.getCode(), "PRI_TEMPLATE_CODE", "TPL_CARD1",false,true);
		attribute = RulesUtils.getAttribute("PRI_TEMPLATE_CODE", serviceToken);
		answer.setAttribute(attribute);
		pcmTest2.addAnswer(answer);


		answer = new Answer(serviceToken.getUserCode(), pcmTest2.getCode(), "PRI_LOC1", "PRI_LASTNAME",false,true);
		attribute = RulesUtils.getAttribute("PRI_LOC1", serviceToken);
		answer.setAttribute(attribute);
		pcmTest2.addAnswer(answer);

		answer = new Answer(serviceToken.getUserCode(), pcmTest2.getCode(), "PRI_LOC2", "PRI_FIRSTNAME",false,true);
		attribute = RulesUtils.getAttribute("PRI_LOC2", serviceToken);
		answer.setAttribute(attribute);
		pcmTest2.addAnswer(answer);

		beUtils.saveBaseEntity(defBe,pcmTest2);
		
 
end
