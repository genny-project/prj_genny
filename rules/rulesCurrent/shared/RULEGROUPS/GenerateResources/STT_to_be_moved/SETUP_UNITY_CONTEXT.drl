package life.genny.rules;
import io.vertx.core.json.JsonObject;
<<<<<<< Updated upstream
=======
import org.json.JSONObject;
>>>>>>> Stashed changes
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.QwandaMessage;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.utils.SessionFacts;
import life.genny.qwanda.Context;
import life.genny.qwanda.ContextList;
import life.genny.qwanda.ContextType;

rule "SETUP_UNITY_CONTEXT"
    ruleflow-group 'GenerateThemes'
	salience 10000
    when
  		serviceToken : GennyToken (code == "PER_SERVICE")
  		
     then
     	System.out.println("   Initialise Unity Context Setup");

		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);

		BaseEntity unityBe = beUtils.getBaseEntityByCode("UNT_S1_DATA");

		System.out.println("UnityBE: " + unityBe);
     	
		
		/* construct the Context */
		System.out.println("Creating new Context object");
		Context context = new Context(ContextType.UNITY, unityBe);
		System.out.println("Context object: " + context);
		System.out.println("Context enitity: " + context.getEntity());

		System.out.println("SETUP_UNITY_CONTEXT - Caching Context: CTX_UNITY_CONTEXT");
		/*VertxUtils.writeCachedJson(serviceToken.getRealm(), "CTX_UNITY_CONTEXT", ctxString, serviceToken.getToken());*/
		VertxUtils.putObject(serviceToken.getRealm(), "", "CTX_UNITY_CONTEXT", context, serviceToken.getToken());


		System.out.println("Finished running rule: SETUP_UNITY_CONTEXT");
	end
