package life.genny.rules;

import life.genny.models.GennyToken;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.GennySettings;
import java.util.List;
import java.util.ArrayList;

rule "IS_QA_EDU_PRO_REP"
    ruleflow-group 'IsQuickAdd'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		baseEntityType : String(baseEntityType.equals("QA_EDU_PRO_REP"))
		newBe : BaseEntity()
		beUtils : BaseEntityUtils()
	  
     then
 		System.out.println(drools.getRule().getName() + ": Rule fired :: newBe = " + newBe.getCode()); 
 		
		List<Answer> answers = new ArrayList<>();
    
		BaseEntity eduPro = beUtils.getBaseEntityFromLNKAttr(newBe, "LNK_EDU_PROVIDER");
		if (eduPro != null) {
			String assocEP = eduPro.getValue("PRI_NAME", null);
			System.out.println("assocEP: " + assocEP);
			answers.add(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_ASSOC_EP", assocEP));
			
			beUtils.createLink(eduPro.getCode(), newBe.getCode(), "LNK_CPY", "EDU_PRO_REP", 1.0);
			
		}

		/* Save Data */
		beUtils.saveAnswers(answers);

		/* Update Email and Name, and set Random Password in Keycloak */
		KeycloakUtils.updateUserDetails(beUtils, newBe);
		String password = KeycloakUtils.generateRandomPassword(beUtils, newBe);

		/* Boolean sendEmail = newBe.getValue("PRI_EMAIL_FLAG", false); */
		String sendEmail = newBe.getValue("LNK_SEND_EMAIL", "");
		System.out.println("sendEmail = " + sendEmail);

		/* if (sendEmail) { */
		if (sendEmail.contains("SEL_YES")) {
			/* Init Sendgrid Msg */
			QMessageGennyMSG msg = new QMessageGennyMSG.Builder("MSG_EDU1_REGISTER")
				.addRecipient(newBe)
				.addContext("PASSWORD", password)
				.addContext("URL:ENCODE", "QUE_FAKE_PARENT/QUE_FINISH_EDU_PRO_REP")
				.addContext("BCC", "PRJ_INTERNMATCH")
				.setUtils(beUtils)
				.send();
		}
		
		String endPoint = GennySettings.projectUrl + "/v7/notes";
		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), newBe.getCode(), "Added as an Education Provider Rep", "System", "System", "", serviceToken.getToken());

		/* TESTING TOASTS */
		QMessageGennyMSG msg2 = new QMessageGennyMSG(QBaseMSGMessageType.TOAST);
		msg2.addRecipient(newBe);
		msg2.addContext("BODY", "Education Provider Rep created ");
		msg2.addContext("STYLE", "INFO");
		MessageUtils.sendMessage(beUtils, msg2);

		retract(newBe)
end
