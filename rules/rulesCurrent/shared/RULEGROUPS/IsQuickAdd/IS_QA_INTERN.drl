package life.genny.rules;

import life.genny.models.GennyToken;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import life.genny.qwanda.message.QScheduleMessage;
import java.time.ZoneOffset;
import java.util.List;
import java.util.ArrayList;
import life.genny.message.QMessageGennyMSG;
import life.genny.qwanda.message.QBaseMSGMessageType;
import life.genny.qwandautils.MessageUtils;
import life.genny.qwanda.EEntityStatus;
import java.time.LocalDateTime;

rule "IS_QA_INTERN"
    ruleflow-group 'IsQuickAdd'
    no-loop true
    salience 1000
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		baseEntityType : String(baseEntityType.equals("QA_INTERN"))
		newBe : BaseEntity()
		beUtils: BaseEntityUtils()
	  
     then
 		System.out.println(drools.getRule().getName() + ": Rule fired :: newBe = " + newBe.getCode()); 
 		
 		
 		/* check if new intern has already got an agent assigned to them , which says they have been sent an email already */
 		BaseEntity item = beUtils.getBaseEntityByCode(newBe.getCode());
 		Optional<String> existingAgentName = item.getValue("PRI_AGENT_NAME");
 		/* if blank then ok */
 		if (!existingAgentName.isPresent()) {

			List<Answer> answers = new ArrayList<>();

			/* GET REQUIRED DATA */
			/* BaseEntity eduPro = beUtils.getBaseEntityFromLNKAttr(newBe, "LNK_EDU_PROVIDER"); */
			BaseEntity agent = beUtils.getBaseEntityFromLNKAttr(newBe, "LNK_AGENT");
			BaseEntity batch = beUtils.getBaseEntityFromLNKAttr(newBe, "LNK_SELECT_BATCH");
			/* System.out.println("eduPro = " + eduPro); */
			System.out.println("agent = " + agent);
			System.out.println("batch = " + batch);

			if (agent != null) {
				String agentName = agent.getValue("PRI_NAME", null);
				System.out.println("agentName = " + agentName);
				if (agentName != null) {
					newBe = beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_AGENT_NAME", agentName));
				}
			}

			if (batch != null) {
				String batchName = batch.getValue("PRI_NAME", null);
				System.out.println("batchName = " + batchName);
				if (batchName != null) {
					newBe = beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_BATCH", batchName));
				}
			}

			/* Update Email and Name, and set Random Password in Keycloak */
			KeycloakUtils.updateUserDetails(beUtils, newBe);
			String password = KeycloakUtils.generateRandomPassword(beUtils, newBe);

			/* Boolean sendEmail = newBe.getValue("PRI_EMAIL_FLAG", false); */

			String sendEmail = newBe.getValue("LNK_SEND_EMAIL", "");
			System.out.println("sendEmail = " + sendEmail);
            Boolean containsSelYes = sendEmail.contains("SEL_YES");
            containsSelYes = true; /* always send required */

			if (containsSelYes) {
				/* Init Sendgrid Msg */
				QMessageGennyMSG msg = new QMessageGennyMSG.Builder("MSG_INT1_REGISTER")
					.addRecipient(newBe)
					.addContext("PASSWORD", password)
					.addContext("URL:ENCODE", "QUE_FAKE_PARENT/QUE_FINISH_INTERN")
					.addContext("BCC", "PRJ_INTERNMATCH")
					.setUtils(beUtils)
					.send();
			}

			if (agent != null) {
				/* Init Sendgrid to Agent Msg */
				QMessageGennyMSG msg = new QMessageGennyMSG.Builder("MSG_AGT2_ASSIGNED")
					.addRecipient(agent)
					.addContext("INTERN", newBe)
					/* .addContext("EDU_PRO", eduPro) */
					.addContext("URL:ENCODE", "SBE_INTERNS"+userToken.getSessionCode().toUpperCase()+"/ACT_PRI_EVENT_VIEW/"+newBe.getCode())
					.setUtils(beUtils)
					.send();
			}

			/* Schedule Reminder Messages */
			System.out.println("################## Scheduling Shleemy Messages ##################");

			LocalDateTime now = LocalDateTime.now(ZoneOffset.UTC);
			String code48HR = newBe.getCode() + "_INTERN_COMPLETE_PROFILE_48HR";
			String code96HR = newBe.getCode() + "_INTERN_COMPLETE_PROFILE_96HR";

			ShleemyUtils.scheduleMessage(userToken, "SCHEDULE_INTERN_COMPLETE_PROFILE_48HR", code48HR, LocalDateTime.now(), newBe.getCode());
			ShleemyUtils.scheduleMessage(userToken, "SCHEDULE_INTERN_COMPLETE_PROFILE_96HR", code96HR, LocalDateTime.now(), newBe.getCode());

			/* Post Note */
			String endPoint = GennySettings.projectUrl + "/v7/notes";
			QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), newBe.getCode(), "Added as an Intern", "System", "System", "", serviceToken.getToken());
		}
		
		retract(newBe);
end
