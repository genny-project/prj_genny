package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;

rule "DEFAULT_ANSWER"
    ruleflow-group 'AnswerProcessing'
    lock-on-active true
    when
	  userToken : GennyToken ( code != "PER_SERVICE" ) 
	  serviceToken : GennyToken( code == "PER_SERVICE") 
	  dataMsg : QDataAnswerMessage()
	/* rules : QRules() */
     then
 		System.out.println("Rule -> DEFAULT_ANSWER Processing Answer/Data! :  user=" + userToken.getUserCode()); 
	/*	System.out.println("Rule -> DEFAULT_ANSWER Processing Answer/Data :  qrules realm=" + rules.realm()); */
/*	 QRules rules = (QRules)$process.getVariable("rules");*/  

	Answer answer = dataMsg.getItems()[0]; /* get the first answer */
	
	System.out.println("Answer = "+answer);
	
	BaseEntityUtils beUtils = new BaseEntityUtils(userToken); 
	
	/* Check if there is any change */
	BaseEntity be = beUtils.getBaseEntityByCode(answer.getTargetCode());
	Object existingValue = be.getValue(answer.getAttributeCode());
	if (!answer.getValue().equals(existingValue.toString())) {
		answer.setChangeEvent(true);
		beUtils.saveAnswer(answer); 
		System.out.println("Change to value required");
	} else {
		System.out.println("No change to value");
	}

end
