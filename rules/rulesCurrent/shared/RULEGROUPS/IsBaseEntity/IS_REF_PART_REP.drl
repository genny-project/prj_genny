package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import java.util.UUID;

import java.util.List;
import java.util.ArrayList;

rule "IS_REF_PART_REP"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("RefPartnerRep"))
		newBe : BaseEntity()

	  
     then
 		System.out.println("IS_REF_PART_REP: Rule fired" );
 		System.out.println("IS_REF_PART_REP: newBe = " + newBe.getCode()); 
 		
 	/*  Construct answer with Source, Target, Attribute Code, Value */
 		Answer answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_REF_PART_REP", "true");
 		BaseEntityUtils beUtils = new BaseEntityUtils(userToken);
 		beUtils.saveAnswer(answer);

		System.out.println("IS_REF_PART_REP: Answer = " + answer); 
		/* Set up in Keycloak */
		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String firstname = user.getValue("PRI_FIRSTNAME",null);
		if (firstname != null) {
			String lastname = user.getValue("PRI_LASTNAME",null);
			if (lastname != null) {
				String email = user.getValue("PRI_EMAIL",null);
				if (email != null) {
					String userPassword = UUID.randomUUID().toString().substring(0,10);
					String userId = KeycloakUtils.createUser(serviceToken.getToken(), serviceToken.getRealm(),email , firstname, lastname,  email, userPassword,"user", "user");
					Answer keycloakId = new Answer(beUtils.getGennyToken().getUserCode(),newBe.getCode(),"PRI_UUID",userId);
					beUtils.saveAnswer(keycloakId);
					System.out.println("Created User "+email+" in Keycloak with id = "+userId);
				}
			}
		}
		
		/*String endPoint = GennySettings.bridgeUrl + "/v7/notes";*/
		String endPoint =  "https://internmatch-chris1.gada.io/v7/notes";
		
		System.out.println("Note endPoint: " +endPoint);
		String tag = "ni";
		
		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), tag, newBe.getCode(), firstname + " has been created as a Referral Partner Rep with Base Entity Code: " + newBe.getCode(), serviceToken.getToken());
		System.out.println("I just posted the note");
		
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
		retract(newBe)
	
end
