package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;

import java.util.List;
import java.util.ArrayList;

rule "IS_HOST_CPY"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("HostCompany"))
		newBe : BaseEntity()

	  
     then
 		System.out.println("IS_HOST_CPY: Rule fired" );
 		System.out.println("IS_HOST_CPY: newBe = " + newBe.getCode()); 
 		
 	/*  Construct answer with Source, Target, Attribute Code, Value */
 		Answer answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_HOST_CPY", "true");
 		Answer answer2 = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS", "ACTIVE");
 		BaseEntityUtils beUtils = new BaseEntityUtils(userToken);
 		beUtils.saveAnswer(answer);
 		beUtils.saveAnswer(answer2);

		System.out.println("IS_HOST_CPY: Answer = " + answer); 
		
		
		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String name = user.getValue("PRI_NAME",null);
	
	
	
		String endPoint = GennySettings.bridgeUrl + "/v7/notes";
		/*String endPoint = "https://internmatch-cyrus.gada.io/v7/notes";*/
		
		String tag = "ni";
		
		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), tag, userToken.getUserCode(), "Created the Host Company: " + name + ". [" + newBe.getCode() + "]", serviceToken.getToken());
		
		System.out.println("I just posted the note");
		System.out.println("Note endPoint: " +endPoint);
		System.out.println("Note userToken.getUserCode(): " +userToken.getUserCode());
		System.out.println("Note newBe.getCode(): " +newBe.getCode());
		

	
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
		
		retract(newBe)
	
end
