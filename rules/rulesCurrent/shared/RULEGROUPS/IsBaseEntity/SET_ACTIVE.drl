package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.GennySettings;

import java.security.SecureRandom;
import java.util.stream.Collectors;

import java.util.List;
import java.util.ArrayList;

rule "SET_ACTIVE"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 100000 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		newBe : BaseEntity()
		beUtils : BaseEntityUtils()
	  
     then
 		System.out.println(drools.getRule().getName() + ": Rule fired" );
 		System.out.println(drools.getRule().getName() + ": newBe = " + newBe.getCode()); 
 		
		if (newBe != null) {
			/* Set Status to Pending */
			newBe.setStatus(EEntityStatus.ACTIVE);
			beUtils.saveBaseEntity(newBe);
		}
end
