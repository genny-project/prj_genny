package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import java.util.UUID;
import life.genny.notifications.EmailHelper;

import java.util.List;
import java.util.ArrayList;

rule "EDIT_INTERN"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1000
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("EDIT_INTERN"))
		targetBe : BaseEntity()
	  
     then
 		System.out.println("EDIT_INTERN: Rule fired" );
 		System.out.println("EDIT_INTERN: targetBe = " + targetBe.getCode()); 
 		
 	/*  Construct answer with Source, Target, Attribute Code, Value */
 		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

 		List<Answer> answers = new ArrayList<>();
 		

 		answers.add(new Answer(userToken.getUserCode(), targetBe.getCode() ,"PRI_PROFILE", "Complete"));  
		

		targetBe = beUtils.getBaseEntityByCode(targetBe.getCode());
		
		/* LNK_INTERNSHIP_DURATION */
		
		String lnkDuration = targetBe.getValue("LNK_INTERNSHIP_DURATION", null);
		System.out.println("lnkDuration = " +lnkDuration);
		if (lnkDuration != null) {
				String assoc_duration = lnkDuration.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assoc_duration = " +assoc_duration);
				
				BaseEntity assoc_durationBe = beUtils.getBaseEntityByCode(assoc_duration);
				System.out.println("assoc_durationBe = " + assoc_durationBe);
				
				if (assoc_durationBe != null) {
						assoc_duration = assoc_durationBe.getValue("PRI_NAME", null);
						System.out.println("assoc_duration = " +assoc_duration);
						
						answers.add(new Answer(userToken.getUserCode(), targetBe.getCode(), "PRI_ASSOC_DURATION", assoc_duration));
					
				} else {
					System.out.println("ERROR: Null assoc_durationBe"); 
				}
		} else {
			System.out.println("ERROR: Null assoc_duration"); 
		}
		
		/* ANZCO */
		answers.add(new Answer(userToken.getUserCode(), targetBe.getCode(), "PRI_ANZCO", "NA"));
		
		String lnkIndustry = targetBe.getValue("LNK_INDUSTRY", null);
		System.out.println("lnkIndustry : " + lnkIndustry);
		
		String lnkOcc = targetBe.getValue("LNK_OCCUPATION", null);
		System.out.println("lnkOcc : " + lnkOcc);
	
		
		String lnkCI = targetBe.getValue("LNK_COMP_INTERNSHIP", null);
		System.out.println("lnkCI : " + lnkCI);
		
		
		if(lnkIndustry != null && lnkOcc != null && lnkCI != null) {
				
				String Industry = lnkIndustry.replace("\"", "").replace("[", "").replace("]", "");
				String Occ = lnkOcc.replace("\"", "").replace("[", "").replace("]", "");
				String CI = lnkCI.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("Industry: " + Industry);
				System.out.println("Occ: " + Occ);
				System.out.println("CI: " + CI);
				
				if(Industry.equals("SEL_INDUSTRY_INFORMATION_COMMUNICATION_TECHNOLOGY") && CI.equals("SEL_PROFESSIONAL_YEAR")) {
						BaseEntity occBe = beUtils.getBaseEntityByCode(Occ);
						System.out.println("occBe: " + occBe);
						
						if(occBe != null) {
								String anzcoCode = occBe.getValue("PRI_ANZCO", null);
								System.out.println("anzcoCode: " + anzcoCode);
								
								if(anzcoCode != null) {
										answers.add(new Answer(userToken.getUserCode(), targetBe.getCode(), "PRI_ANZCO", anzcoCode));
										System.out.println("Reached the holy land - anzcoCode: " + anzcoCode);
								} else {
									System.out.println("ERROR: Null anzcoCode");
								}
						} else {
							System.out.println("ERROR: Null occBe");
						}
				} else {
					System.out.println("DON'T STRESS: INDUSTRY and/or COMP_INTERNSHIP don't need an ANZCO Code");
				}
		} else {
			System.out.println("ERROR: Null LNK_INDUSTRY or LNK_OCCUPATION or LNK_COMP_INTERNSHIP");
		}
		
		
 		
 		String intEP = targetBe.getValue("LNK_EDU_PROVIDER", null);
		System.out.println("intEP : " + intEP);
		
		if(intEP != null) {
				String EP = intEP.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("EP: " + EP);
			
				BaseEntity intEPBe = beUtils.getBaseEntityByCode(EP);
				System.out.println("intEPBe: " + intEPBe);
				
				if(intEPBe != null) {
						String ep_name = intEPBe.getValue("PRI_NAME", null);
						System.out.println("ep_name: " + ep_name);
						
						if(ep_name != null) {
								answers.add(new Answer(userToken.getUserCode(), targetBe.getCode(), "PRI_ASSOC_EP", ep_name));
						} else {
							System.out.println("ERROR: Null ep_name");
						}
				} else {
					System.out.println("ERROR: Null intEPBe");
				}
		} else {
			System.out.println("ERROR: Null intEP");
		}
		
		
		BaseEntity internBe = beUtils.getBaseEntityByCode(targetBe.getCode());
		
		if(internBe != null){
			
			QDataBaseEntityMessage internBeMsg = new QDataBaseEntityMessage(internBe);
			internBeMsg.setToken(userToken.getToken());
			VertxUtils.writeMsg("webcmds", JsonUtils.toJson(internBeMsg));
		}

		
		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */

		beUtils.saveAnswers(answers);
		
		retract(targetBe)
	
end
