package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import java.util.UUID;

import java.util.List;
import java.util.ArrayList;

rule "IS_INTERN"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("Intern"))
		newBe : BaseEntity()
	  
     then
 		System.out.println("IS_INTERN: Rule fired" );
 		System.out.println("IS_INTERN: newBe = " + newBe.getCode()); 
 		
 	/*  Construct answer with Source, Target, Attribute Code, Value */
 		Answer answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_INTERN", "true");
 		Answer answer2 = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS", "AVAILABLE");
 		Answer answer3 = new Answer(userToken.getUserCode(), newBe.getCode(),"PRI_DISABLED", "false");
 		Answer answerCardColour = new Answer(userToken.getUserCode(),newBe.getCode(),"PRI_STATUS_COLOR","#5cb85c");
 		

 		
 		BaseEntityUtils beUtils = new BaseEntityUtils(userToken);
 		beUtils.saveAnswer(answer);
 		beUtils.saveAnswer(answer2);
 		beUtils.saveAnswer(answer3);
 		beUtils.saveAnswer(answerCardColour);
 		
 		System.out.println("IS_INTERN: Answer = " + answer);
		System.out.println("IS_INTERN: Answer = " + answer2); 
		System.out.println("IS_INTERN: Answer = " + answer3); 
		System.out.println("IS_INTERN: Answer = " + answerCardColour); 
 		
 		/* SET DASHBOURD ATTRIBUTES */
 		System.out.println("IS_INTERN: Setting Dashboard Journey Attributes"); 
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_JOURNEY_ITEM_1", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_JOURNEY_ITEM_2", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_JOURNEY_ITEM_3", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_JOURNEY_ITEM_4", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_JOURNEY_ITEM_5", "false"));
		
		/* Set up in Keycloak */
		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String firstname = user.getValue("PER_FIRSTNAME",null);
		if (firstname != null) {
			String lastname = user.getValue("PER_LASTNAME",null);
			if (lastname != null) {
				String email = user.getValue("PER_EMAIL",null);
				if (email != null) {
					String userPassword = UUID.randomUUID().toString().substring(0,10);
					String userId = KeycloakUtils.createUser(serviceToken.getToken(), serviceToken.getRealm(),email , firstname, lastname,  email, userPassword,"user", "user");
					Answer keycloakId = new Answer(beUtils.getGennyToken().getUserCode(),newBe.getCode(),"PRI_UUID",userId);
					beUtils.saveAnswer(keycloakId);
					System.out.println("Created User "+email+" in Keycloak with id = "+userId);
				}
			}
		}
		
		
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
		
		retract(newBe)
	
end