package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import java.util.UUID;
import life.genny.notifications.EmailHelper;

import java.util.List;
import java.util.ArrayList;

rule "IS_INTERN"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1000
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("INTERN"))
		newBe : BaseEntity()
	  
     then
 		System.out.println("IS_INTERN: Rule fired" );
 		System.out.println("IS_INTERN: newBe = " + newBe.getCode()); 
 		
 	/*  Construct answer with Source, Target, Attribute Code, Value */
 		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
 		
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_INTERN", "true"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS", "AVAILABLE"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_DISABLED", "false"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS_COLOR", "#5cb85c"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_NUM_JOURNALS", "0")); 
 		
 		/* SET DASHBOURD ATTRIBUTES */
 		System.out.println("IS_INTERN: Setting Dashboard Journey Attributes"); 
 		
 


		
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_REGISTERED_IN_INTERNMATCH", "true"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_PROFILE_COMPLETE", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_VIDEO_RECORDED", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_INTERNSHIPS_SEARCHED", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_OPPORTUNITIES_SAVED", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ACCREDITTION_COMPLETE", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_APPLIED_FOR_INTERNSHIPS", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_STARTED_SKILL_DEVELOPMENT", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_APPLICATION_SENT", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_INTERVIEWS_STARTED", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_OFFER_ACCEPTED", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_INDUCTION_COMPLETE", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_PROGRESS_REPORTING", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_DAILY_LOGBOOK_COMPLETE", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_RECEIVE_CERTIFICATE", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_UPDATE_LINKEDIN", "false"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ASK_FOR_RECOMMENDATION", "false"));
		


		newBe = beUtils.getBaseEntityByCode(newBe.getCode());
		
		/* ANZCO */
		String lnkIndustry = newBe.getValue("LNK_INDUSTRY", null);
		System.out.println("lnkIndustry : " + lnkIndustry);
		
		String lnkOcc = newBe.getValue("LNK_OCCUPATION", null);
		System.out.println("lnkOcc : " + lnkOcc);
	
		
		String lnkCI = newBe.getValue("LNK_COMP_INTERNSHIP", null);
		System.out.println("lnkCI : " + lnkCI);
		
		if(lnkIndustry != null && lnkOcc != null && lnkCI != null) {
				
				String Industry = lnkIndustry.replace("\"", "").replace("[", "").replace("]", "");
				String Occ = lnkOcc.replace("\"", "").replace("[", "").replace("]", "");
				String CI = lnkCI.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("Industry: " + Industry);
				System.out.println("Occ: " + Occ);
				System.out.println("CI: " + CI);
				
				if(Industry.equals("SEL_INDUSTRY_INFORMATION_COMMUNICATION_TECHNOLOGY") && CI.equals("SEL_PROFESSIONAL_YEAR")) {
						BaseEntity occBe = beUtils.getBaseEntityByCode(lnkOcc);
						System.out.println("occBe: " + occBe);
						
						if(occBe != null) {
								String anzcoCode = occBe.getValue("PRI_ANZCO", null);
								System.out.println("anzcoCode: " + anzcoCode);
								
								if(anzcoCode != null) {
									beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ANZCO", anzcoCode));
								} else {
									System.out.println("ERROR: Null anzcoCode");
								}
						} else {
							System.out.println("ERROR: Null occBe");
						}
				} else {
					System.out.println("DON'T STRESS: INDUSTRY and/or COMP_INTERNSHIP don't need an ANZCO Code");
				}
		} else {
			System.out.println("ERROR: Null LNK_INDUSTRY or LNK_OCCUPATION or LNK_COMP_INTERNSHIP");
			beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ANZCO", "NA"));
		}
		
		
 		
 		String intEP = newBe.getValue("LNK_EDU_PROVIDER", null);
		System.out.println("intEP : " + intEP);
		
		if(intEP != null) {
				String EP = intEP.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("EP: " + EP);
			
				BaseEntity intEPBe = beUtils.getBaseEntityByCode(EP);
				System.out.println("intEPBe: " + intEPBe);
				
				if(intEPBe != null) {
						String ep_name = intEPBe.getValue("PRI_NAME", null);
						System.out.println("ep_name: " + ep_name);
						
						if(ep_name != null) {
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ASSOC_EP", ep_name));
						} else {
							System.out.println("ERROR: Null ep_name");
						}
				} else {
					System.out.println("ERROR: Null intEPBe");
				}
		} else {
			System.out.println("ERROR: Null intEP");
		}
		
		
		
		/* Set up in Keycloak */
		
		
		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String userStr = newBe.getCode();
		String[] userSplit = userStr.split("_");
		String userCode = userSplit[1];
		System.out.println("User "+user+" with userCode = "+userCode);
		
		
		String firstname = user.getValue("PRI_FIRSTNAME",null);
		if (firstname != null) {
			String lastname = user.getValue("PRI_LASTNAME",null);
			if (lastname != null) {
				String email = user.getValue("PRI_EMAIL",null);
				if (email != null) {
					/*String userPassword = UUID.randomUUID().toString().substring(0,10);*/
					/* TODO HACK */
					if (true) {
						String userPassword = "password1";
						String userId = KeycloakUtils.updateUser(userCode,serviceToken.getToken(), serviceToken.getRealm(), email, firstname, lastname,  email, userPassword,"user", "users");
						userId = userId.toUpperCase();
						Answer keycloakId = new Answer(beUtils.getGennyToken().getUserCode(),newBe.getCode(),"PRI_UUID",userId);
						beUtils.saveAnswer(keycloakId);
						System.out.println("Created User "+email+" in Keycloak with id = "+userId + " and password:" +userPassword);
					} else {
					     System.out.println("KEYCLOAK USER CREATION DISABLED IN RULE IS_INTERN");
					}
				}
			}
		}
		


		String endPoint = GennySettings.projectUrl + "/v7/notes";
		/*String endPoint = "https://internmatch-cyrus.gada.io/v7/notes";*/
		
		String tag = "ni";
		
		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), tag, userToken.getUserCode(), "Added an Intern: " + firstname, serviceToken.getToken());
		
		System.out.println("I just posted the note");
		System.out.println("Note endPoint: " +endPoint);
		System.out.println("Note userToken.getUserCode(): " +userToken.getUserCode());


	
		/*String user_email = user.getValue("PRI_EMAIL",null);*/
		String user_email = "hello@outcome.life";
		String subject = "You have been registered on InternMatch";
		String template_id = "d-94f647d38d7745a1b925300df2208279";
		String hardcodedTemplateData1 = "intern";
		String hardcodedTemplateData2 = firstname;
		
		System.out.println("user_email: " + user_email);
		System.out.println("subject: " + subject);
		System.out.println("template_id: " + template_id);
		System.out.println("hardcodedTemplateData1: " + hardcodedTemplateData1);
		System.out.println("hardcodedTemplateData2: " + hardcodedTemplateData2);

		
		EmailHelper.sendGrid(user_email, subject, template_id, hardcodedTemplateData1, hardcodedTemplateData2);

		/* send the detail sbe */
		long totalTime = TableUtils.searchTable(beUtils,"INTERN", true, "PRI_CODE", newBe.getCode());
		System.out.println("total took " + (totalTime) + " ms"); 
		
		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		
		retract(newBe)
	
end
