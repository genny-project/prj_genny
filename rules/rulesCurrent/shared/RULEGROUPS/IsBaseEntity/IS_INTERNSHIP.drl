package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.GennySettings;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import java.util.List;
import java.util.ArrayList;

rule "IS_INTERNSHIP"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("INTERNSHIP"))
		newBe : BaseEntity()

	  
     then
 		System.out.println("IS_INTERNSHIP: Rule fired" );
 		System.out.println("IS_INTERNSHIP: newBe = " + newBe.getCode()); 
 		
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
 		
 		/* Construct answer with Source, Target, Attribute Code, Value */
 		Answer answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_INTERNSHIP", "true");
 		beUtils.saveAnswer(answer);
 		
 		answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS", "ACTIVE");
 		beUtils.saveAnswer(answer);
 		
 		
 		answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_FULL", "false");
 		beUtils.saveAnswer(answer);
 		
 		answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_CURRENT_INTERNS", "0");
 		beUtils.saveAnswer(answer);

		System.out.println("IS_INTERNSHIP: Answer = " + answer); 
		
		
		/* Refresh the BaseEntity because reasons... */
 		newBe = beUtils.getBaseEntityByCode(newBe.getCode());
 		
 		String appHC = newBe.getValue("LNK_HOST_COMPANY", null);
		System.out.println("appHC = " + appHC);
		
		if(appHC != null) {
				appHC = appHC.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("appHC = " +appHC);
				BaseEntity appHCBe = beUtils.getBaseEntityByCode(appHC);
				System.out.println("appHCBe = " + appHCBe);
 				
 				if(appHCBe != null) {	
 						String imageHC = appHCBe.getValue("PRI_IMAGE_URL", null);
 						System.out.println("imageHC = " + imageHC);
 						
 						if(imageHC != null) {
 								Answer answer = new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IMAGE_URL", imageHC);
 								beUtils.saveAnswer(answer);
 						} else {
							System.out.println("ERROR: Null imageHC"); 
						}
 				} else {
					System.out.println("ERROR: Null appHCBe"); 
				}
		} else {
			System.out.println("ERROR: Null appHC"); 
		}
		
 		
 		
		
	
		
		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String title = user.getValue("PRI_NAME",null);
		
		

		String endPoint = GennySettings.projectUrl + "/v7/notes";
		/*String endPoint = "https://internmatch-cyrus.gada.io/v7/notes";*/
		
		String tag = "ni";
		
		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), tag, userToken.getUserCode(), "Added an Internship: " + title, serviceToken.getToken());
		
		System.out.println("I just posted the note");
		System.out.println("Note endPoint: " +endPoint);
		System.out.println("Note userToken.getUserCode(): " +userToken.getUserCode());

		/* send the detail sbe */
		long totalTime = TableUtils.searchTable(beUtils,"INTERNSHIP", true, "PRI_CODE", newBe.getCode());
		System.out.println("total took " + (totalTime) + " ms"); 
		
		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		
		retract(newBe)
	
end
