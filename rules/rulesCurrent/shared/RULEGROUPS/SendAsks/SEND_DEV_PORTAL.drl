package life.genny.rules;
import java.util.ArrayList;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import life.genny.utils.BucketUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.utils.TableUtils;
import org.drools.core.spi.KnowledgeHelper;
import life.genny.qwanda.datatype.Allowed;


rule "SEND_DEV_PORTAL"
	ruleflow-group 'SendAsks'
	salience 8
	no-loop true
	when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken( code == "PER_SERVICE")
		output : OutputParam( )
		/* allowed: Allowed(code == "DEV_PORTAL" && mode == CapabilityMode.VIEW) */
		allowed: Allowed(code == "DEV")

	then
		System.out.println(drools.getRule().getName() + " triggered");

		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		CapabilityUtils capabilityUtils = new CapabilityUtils(beUtils);

		System.out.println("userCode   ::   " + userToken.getUserCode());

		String sourceCode = "PER_SERVICE";
		String targetCode = "PER_SERVICE";

		Attribute questionAttribute = new Attribute("QQQ_QUESTION_GROUP", "link", new DataType(String.class));
		Attribute eventAttribute = new Attribute("PRI_EVENT", "link", new DataType(String.class));

		/* ADD ITEMS group */
		Question devPortalGrpQues = new Question("QUE_DEV_PORTAL_ACCESS_GRP", "Dev Portal", questionAttribute, true);
		Ask devPortalGrpAsk = new Ask(devPortalGrpQues, sourceCode, targetCode);

		Question devPortalQues = new Question("QUE_DEV_PORTAL_ACCESS", "Go to Dev Portal", eventAttribute, true);
		Ask devPortalAsk = new Ask(devPortalQues, sourceCode, targetCode);


		Ask[] childAsks = { devPortalAsk };
		devPortalGrpAsk.setChildAsks(childAsks);

		String json = JsonUtils.toJson(devPortalGrpAsk);
		json = json.replaceAll("PER_SERVICE", userToken.getUserCode());

		devPortalGrpAsk = JsonUtils.fromJson(json, Ask.class);
		QDataAskMessage askMsg = new QDataAskMessage(devPortalGrpAsk);
		askMsg.setToken(userToken.getToken());
		VertxUtils.writeMsg("webcmds", askMsg);

		TableUtils.searchTable(beUtils, "SBE_DEFS", true);
		TableUtils.searchTable(beUtils, "SBE_MSGS", true);
		/* TableUtils.searchTable(beUtils, "SBE_SAMS", true); */


end
