package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;

rule "FILTER_SBE_APPLIED_APPLICATIONS"
	ruleflow-group 'SearchFilters'
		salience 5000
		no-loop true
	when
		$userToken : GennyToken ( code != "PER_SERVICE" ) 
		$user : BaseEntity (  code == $userToken.getUserCode() )
		/* serviceToken : GennyToken ( code == "PER_SERVICE" ) */
		beUtils : BaseEntityUtils()
		/* allowed : Allowed(code == "INTERN") */
	/* 	searchBE: SearchEntity( (searchBE.code == "SBE_APPLIED_APPLICATIONS" )||
													  (searchBE.code == "SBE_SHORTLISTED_APPLICATIONS" )||
													  (searchBE.code == "SBE_INTERVIEWED_APPLICATIONS" )||
													  (searchBE.code == "SBE_OFFERED_APPLICATIONS" )||
													  (searchBE.code == "SBE_PLACED_APPLICATIONS" )||
													  (searchBE.code == "SBE_INPROGRESS_APPLICATIONS" )||
													) */
	
	then
		System.out.println("Rule -> "+drools.getRule().getName()+" :  user=" + $userToken.getUserCode());
		
		System.out.println("Lets filter this thing out !!!!!");
		System.out.println("User code is   ::   "+$user.getCode());
		/* System.out.println("Search code is ::   "+searchBE.getCode()); */

		/* Add the new filter to the search */
/* 		SearchEntity searchBe = new SearchEntity("SBE_DUMMY", "SBE_DUMMY")
													.addFilter("PRI_INTERN_CODE", SearchEntity.StringFilter.EQUAL, $user.getCode()); */

		/* SearchEntity search = new SearchEntity("SBE_DUMMY", "SBE_DUMMY")
													.addFilter("PRI_INTERN_CODE", SearchEntity.StringFilter.EQUAL, $user.getCode());
													.setPageStart(0).setPageSize(200); */

		BaseEntity be = new BaseEntity("test", "test");

		/* Create  QDataBaseEntityMessage for SearchEntity */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(be);
		msg.setAliasCode("SBE_APPLIED_APPLICATIONS");	
		payload.add(msg); 

		drools.getKnowledgeRuntime().setGlobal("payload", payload); 
		retract(allowed); /* no longer needed */
end
