package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;

rule "FILTER_APPLICATIONS_INTERN"
	ruleflow-group 'SearchFilters'
	salience 10000
	no-loop true
	when
		userToken : GennyToken ( code != "PER_SERVICE" ) 
		allowed : Allowed(code == "INTERN")
		searchBE: SearchEntity( code matches "SBE_APPLIED_APPLICATION.*" || 
														code matches "SBE_SHORTLISTED_APPLICATION.*" ||
														code matches "SBE_INTERVIEWED_APPLICATION.*" ||
														code matches "SBE_OFFERED_APPLICATION.*" ||
														code matches "SBE_PLACED_APPLICATION.*" ||
														code matches "SBE_INPROGRESS_APPLICATION.*" )
														
	
	then
		System.out.println("FILTER_APPLICATIONS_INTERN triggered");
		
		System.out.println("userCode     :: " + userToken.getUserCode());
		System.out.println("searchCode   :: " + searchBE.getCode());

		searchBE.addFilter("PRI_INTERN_CODE", SearchEntity.StringFilter.LIKE, userToken.getUserCode());

		/* Create  QDataBaseEntityMessage for SearchEntity */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(searchBE);
		msg.setAliasCode("SBE");	
		payload.add(msg); 

		drools.getKnowledgeRuntime().setGlobal("payload", payload); 
		retract(allowed); 
end
