package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QEventDropdownMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;

rule "EMAIL_FLAG_EVENT"
    ruleflow-group 'EventProcessing'
		salience 200
    no-loop
    when
		message : QEventMessage( 
					data.code == "ACT_PRI_EMAIL_FLAG"
				)
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		beUtils : BaseEntityUtils()
    then
		System.out.println(drools.getRule().getName() + " Processing : " + message );

		String targetCode = message.getData().getTargetCode();
		System.out.println("targetCode = " + targetCode);

		/* Grab Current Value */
		Boolean flagVal = (Boolean) beUtils.getBaseEntityValue(targetCode, "PRI_EMAIL_FLAG");

		/* Toggle and send to FE */
		Answer toggleEmailAnswer = new Answer(userToken.getUserCode(), targetCode, "PRI_EMAIL_FLAG", !flagVal);
		beUtils.saveAnswer(toggleEmailAnswer);
		VertxUtils.sendToFrontEnd(userToken, toggleEmailAnswer);
			
		retract(message);
end
