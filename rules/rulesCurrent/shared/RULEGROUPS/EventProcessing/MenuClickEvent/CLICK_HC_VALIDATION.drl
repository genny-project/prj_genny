package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

rule "CLICK_HC_VALIDATION"
    ruleflow-group 'EventProcessing'
		salience 1000
    no-loop
    when
		$message : QEventMessage(data.code == "ACT_PRI_EVENT_HC_VALIDATION")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		ruleDetails : RuleDetails()

    then
		System.out.println("Processing CLICK HC VALIDATION : " + $message );
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + $message );
		
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		
		
		/* Grab the BE for the HC */
		String hcCode = $message.getData().getTargetCode();
		System.out.println("hcCode = " + hcCode);
		
		String user = userToken.getUserCode();
		System.out.println("user: " + user);
	
		String hcvCode = "";
		
		BaseEntity newBe = new BaseEntity("temp", "temp");
		
		
						
		if(hcCode != null) { 
		
				
				BaseEntity hcbe = beUtils.getBaseEntityByCode(hcCode);
				System.out.println("hcbe = " + hcbe);
				
				/*
				String validationStatus = hcbe.getValue("PRI_VALIDATION", null);
				System.out.println("validationStatus = " + validationStatus);
				if (validationStatus != null) {
				
						
						if (validationStatus.equals("Incomplete") || validationStatus.equals("HCS") || validationStatus.equals("OHS")) {
								System.out.println("ERROR: PRI_VALIDATION is not ready to be changed: " +validationStatus); 
								
								String note = "some of the required forms have not been completed. Please follow up with the relevant Host Company Representive.";
								
								if (validationStatus.equals("Incomplete")) {
										note = "the OHS and HC Services documents have not been completed. Please follow up with the relevant Host Company Representive.";
								}
								
								if (validationStatus.equals("HCS")) {
										note = "the OHS document have not been completed. Please follow up with the relevant Host Company Representive.";
								}
								
								if (validationStatus.equals("OHS")) {
										note = "the HC Services document have not been completed. Please follow up with the relevant Host Company Representive.";
								}
								
								String message = "Sorry but the company selected is not ready to be validated because " + note;
								System.out.println("message = " + message);
								
							
								QCmdMessage msg = new QCmdMessage("TOAST", "INFO");
								msg.setMessage(message);
								msg.setToken(beUtils.getGennyToken().getToken());
								msg.setSend(true);
								VertxUtils.writeMsg("webcmds", msg);
						}
						
						if (validationStatus.equals("Ready")) {
						
								System.out.println("PRI_VALIDATION set to: Validated"); 	
								
								
								hcvCode = hcbe.getValue("DOC_HCV_CODE", null);
								System.out.println("hcvCode = " + hcvCode);
								
								if (hcvCode == null) {
										System.out.println("DOC_HCV_CODE does not exist yet. Creating now!");
										
										String uuid = UUID.randomUUID().toString();
										System.out.println("uuid: " +uuid);
										uuid = uuid.substring(4);
										
										hcvCode = "DOC_HCV_"+uuid;
										hcvCode = hcvCode.toUpperCase();
										System.out.println("HCV: hcvCode = " + hcvCode);
										
										BaseEntity defBE = beUtils.getDEFByCode("DEF_HCV_DOCUMENT");
										newBe = beUtils.create(defBE, hcvCode, hcvCode);
										System.out.println("HCV: newBe = " + newBe);
										System.out.println(">>>>>>>>>>>> " + newBe.getName() + " <<<<<<<<<<<<");
				
										
								} else {
									System.out.println("DOC_HCV_CODE already exists: hcvCode = " + hcvCode);
									
									newBe = beUtils.getBaseEntityByCode(hcvCode);
									System.out.println("newBe = " + newBe);
									
								}
								
								
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcbe.getCode(), "DOC_HCV_CODE", hcvCode));
								
								
								String legalName = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "PRI_LEGAL_NAME", "PRI_LEGAL_NAME", "legalName");
								String abn = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "PRI_ABN", "PRI_ABN", "abn");
								String addressFull = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "PRI_ADDRESS_FULL", "PRI_ADDRESS_FULL", "addressFull");
								String mobile = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "PRI_MOBILE", "PRI_MOBILE", "mobile");
								String website = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "PRI_COMPANY_WEBSITE_URL", "PRI_COMPANY_WEBSITE_URL", "website");
								String numStaff = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "LNK_NUMBER_STAFF", "LNK_NUMBER_STAFF", "numStaff");
								String cpyINC = beUtils.getValueSaveAnswer(userToken.getUserCode(), newBe.getCode(), hcbe.getCode(), "LNK_COMPANY_INC", "LNK_COMPANY_INC", "cpyINC");
								
								System.out.println("legalName: " + legalName);
								System.out.println("abn: " + abn);
								System.out.println("addressFull: " + addressFull);
								System.out.println("mobile: " + mobile);
								System.out.println("website: " + website);
								System.out.println("numStaff: " + numStaff);
								System.out.println("cpyINC: " + cpyINC);
								
								
								
 		
								output.setAskSourceCode(user);
								output.setTargetCode(hcvCode);
								output.setTypeOfResult("SIGNAL");
								output.setResultCode("START_HC_VAL");	
								output.setSuitCase(hcCode);
								
								
								
								
								System.out.println("**************************************************");
								System.out.println("AskSourceCode: " + output.getAskSourceCode());
								System.out.println("TargetCode: "    + output.getTargetCode());
								System.out.println("TypeOfResult: "  + output.getTypeOfResult());
								System.out.println("ResultCode: "    + output.getResultCode());
								System.out.println("SuitCase: "      + output.getSuitCase());
								System.out.println("**************************************************");
								
								
								
								
								QCmdMessage msg = new QCmdMessage("DISPLAY", "FORM");
								msg.setToken(beUtils.getGennyToken().getToken());
								msg.setSend(true);  	
								VertxUtils.writeMsg("webcmds",msg);
								
				} 
				} else {
					System.out.println("ERROR: Null validationStatus");
				}
				*/
				
				
				System.out.println("PRI_VALIDATION set to: Validated"); 	
									
				/* Check whether DOC_OHS_CODE exists or not */
				hcvCode = hcbe.getValue("LNK_HCV_DOC", null);
				System.out.println("hcvCode = " + hcvCode);
				
				if (hcvCode == null) {
						System.out.println("LNK_HCV_DOC does not exist yet. Creating now!");
						
						String uuid = UUID.randomUUID().toString();
						System.out.println("uuid: " +uuid);
						uuid = uuid.substring(4);
						
						hcvCode = "DOC_HCV_"+uuid;
						hcvCode = hcvCode.toUpperCase();
						System.out.println("HCV: hcvCode = " + hcvCode);
						
						BaseEntity defBE = beUtils.getDEFByCode("DEF_HCV_DOCUMENT");
						newBe = beUtils.create(defBE, hcvCode, hcvCode);
						System.out.println("HCV: newBe = " + newBe);
						System.out.println(">>>>>>>>>>>> " + newBe.getName() + " <<<<<<<<<<<<");

						
				} else {
					System.out.println("LNK_HCV_DOC already exists: hcvCode = " + hcvCode);
					
					newBe = beUtils.getBaseEntityByCode(hcvCode);
					System.out.println("newBe = " + newBe);
					
				}
				
				/* Save DOC_OHS_CODE against HC */
				
				hcbe = beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcbe.getCode(), "LNK_HCV_DOC", hcvCode));
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcvCode, "LNK_HCV_DOC", hcvCode));
				
				/* Set Parameters */
 		
				output.setAskSourceCode(user);
				output.setTargetCode(hcvCode);
				output.setTypeOfResult("SIGNAL");
				output.setResultCode("START_HC_VAL");	
				output.setSuitCase(hcCode);
				
				
				/* Print Parameters */
				
				System.out.println("**************************************************");
				System.out.println("AskSourceCode: " + output.getAskSourceCode());
				System.out.println("TargetCode: "    + output.getTargetCode());
				System.out.println("TypeOfResult: "  + output.getTypeOfResult());
				System.out.println("ResultCode: "    + output.getResultCode());
				System.out.println("SuitCase: "      + output.getSuitCase());
				System.out.println("**************************************************");
				
				
				/* Force redirect */
				
				QCmdMessage msg = new QCmdMessage("DISPLAY", "FORM");
				msg.setToken(beUtils.getGennyToken().getToken());
				msg.setSend(true);  	
				VertxUtils.writeMsg("webcmds",msg);
				
				
		} else {
			System.out.println("ERROR: Null hcCode");
		}		
	
	
		retract($message);
	end
