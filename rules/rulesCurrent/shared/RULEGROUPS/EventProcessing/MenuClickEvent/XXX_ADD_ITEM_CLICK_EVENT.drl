package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;


rule "ADD_ITEM_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "QUE_.*" && data.parentCode == "QUE_ADD_ITEMS_GRP" )
		userToken : GennyToken (code != "PER_SERVICE" )
		output : OutputParam( )
 		ruleDetails : RuleDetails()
    then

		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + $message );
		 
		 
		String code = $message.getData().getCode(); /* get click event code e.g. QUE_ADD_EDU_PROVIDER_GRP  */
		String workflowSignalCode = StringUtils.removeEnd(code, "_MENU");
		workflowSignalCode = StringUtils.removeStart(workflowSignalCode,"QUE_");

		/*QCmdMessage msg = new QCmdMessage("START_PROCESS", "START_PROCESS");
		msg.setToken(userToken.getToken());
 		msg.setSend(true);
  		
		VertxUtils.writeMsg("webcmds",msg);*/
		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_"+workflowSignalCode);

		retract( $message);
	end