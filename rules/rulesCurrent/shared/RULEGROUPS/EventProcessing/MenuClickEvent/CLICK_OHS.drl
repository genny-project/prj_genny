package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

rule "CLICK_OHS"
    ruleflow-group 'EventProcessing'
		salience 1000
    no-loop
    when
		$message : QEventMessage(data.code == "ACT_PRI_EVENT_OHS")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		ruleDetails : RuleDetails()

    then
		System.out.println("Processing CLICK OHS : " + $message );
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + $message );
		
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);
		
		
		/* Grab the BE's for the HCR and HC */
		String user = userToken.getUserCode();
		System.out.println("user: " + user);
		
		String hcCode = "";
		String ohsCode = "";
		
		BaseEntity newBe = beUtils.create("temp", "temp");
		
		
		if(user != null) {
				BaseEntity HCRBe = beUtils.getBaseEntityByCode(user);
				System.out.println("HCRBe = " + HCRBe);
				
				if(HCRBe != null) {
						hcCode = HCRBe.getValue("LNK_HOST_COMPANY",null);
						System.out.println("hcCode: " + hcCode);
						
						hcCode = hcCode.replace("\"", "").replace("[", "").replace("]", "");
						System.out.println("hcCode = " +hcCode);	
						
						if(hcCode != null) { 
								BaseEntity HCBe = beUtils.getBaseEntityByCode(hcCode);
								System.out.println("HCBe = " + HCBe);
								
								
								/* Check whether DOC_OHS_CODE exists or not */
								
								ohsCode = HCBe.getValue("DOC_OHS_CODE", null);
								System.out.println("ohsCode = " + ohsCode);
								
								if (ohsCode == null) {
										System.out.println("DOC_OHS_CODE does not exist yet. Creating now!");
										
										String uuid = UUID.randomUUID().toString();
										System.out.println("uuid: " +uuid);
										uuid = uuid.substring(4);
										
										ohsCode = "DOC_OHS_"+uuid;
										ohsCode = ohsCode.toUpperCase();
										System.out.println("OHS: ohsCode = " + ohsCode);
										
										newBe = beUtils.create(ohsCode, ohsCode);
										System.out.println("OHS: newBe = " + newBe);
										System.out.println(">>>>>>>>>>>> " + newBe.getName() + " <<<<<<<<<<<<");

										
								} else {
									System.out.println("DOC_OHS_CODE already exists: ohsCode = " + ohsCode);
									
									newBe = beUtils.getBaseEntityByCode(ohsCode);
									System.out.println("newBe = " + newBe);
									
								}
								
								
								/* Save HC and HCR answers against newBe */
								

								String firstName = beUtils.getBaseEntityValueAsString(HCRBe.getCode(), "PRI_FIRSTNAME");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_FIRSTNAME", firstName));
								String lastName = beUtils.getBaseEntityValueAsString(HCRBe.getCode(), "PRI_LASTNAME"); 
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_LASTNAME", lastName));
								String jobTitle = beUtils.getBaseEntityValueAsString(HCRBe.getCode(), "PRI_JOB_TITLE");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_JOB_TITLE", jobTitle));
								String email = beUtils.getBaseEntityValueAsString(HCRBe.getCode(), "PRI_EMAIL");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_EMAIL", email));
								
								String legalName = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "PRI_LEGAL_NAME");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_LEGAL_NAME", legalName));
								String abn = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "PRI_ABN");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ABN", abn));
								String addressFull = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "PRI_ADDRESS_FULL");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_ADDRESS_FULL", addressFull));
								String mobile = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "PRI_MOBILE");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_MOBILE", mobile));
								String website = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "PRI_COMPANY_WEBSITE_URL");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_COMPANY_WEBSITE_URL", website));
								String numStaff = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "LNK_NUMBER_STAFF");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "LNK_NUMBER_STAFF", numStaff));
								String cpyINC = beUtils.getBaseEntityValueAsString(HCBe.getCode(), "LNK_COMPANY_INC");
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "LNK_COMPANY_INC", cpyINC));
								
								
								/* Save DOC_OHS_CODE against HC */
								beUtils.saveAnswer(new Answer(userToken.getUserCode(), HCBe.getCode(), "DOC_OHS_CODE", ohsCode));
								
								
						} else {
							System.out.println("ERROR: Null hcCode");
						}
				} else {
					System.out.println("ERROR: Null HCRBe");
				}
		} else {
			System.out.println("ERROR: Null user");
		}
		
		/* Set Parameters */
 		
		output.setAskSourceCode(user);
		output.setTargetCode(ohsCode);
		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_OHS");	
		output.setSuitCase(hcCode);


		/* Print Parameters */
		
		System.out.println("**************************************************");
		System.out.println("AskSourceCode: " + output.getAskSourceCode());
		System.out.println("TargetCode: "    + output.getTargetCode());
		System.out.println("TypeOfResult: "  + output.getTypeOfResult());
		System.out.println("ResultCode: "    + output.getResultCode());
		System.out.println("SuitCase: "      + output.getSuitCase());
		System.out.println("**************************************************");
		
	
	
		retract($message);
	end
