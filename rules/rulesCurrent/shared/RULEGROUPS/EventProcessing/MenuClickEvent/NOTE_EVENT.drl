package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.QwandaUtils;

rule "NOTE_EVENT"
	ruleflow-group 'EventProcessing'
	salience 2
	no-loop
	when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ACCESS_NOTES")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

		String targetCode = $message.getData().getTargetCode();
		/*String targetCode = "PER_5A666E64-021F-48CE-8111-BE3D66901F9C";*/
		System.out.println("targetCode :: " + targetCode);

		if(targetCode != null){
			try {
				String endPoint = GennySettings.projectUrl + "/v7/notes";
				System.out.println("endPoint :: " + endPoint);

				String url = endPoint + "/"+targetCode + "?tags=&pageIndex=0&pageSize=100";
				System.out.println("url :: " + url);

				String notes = QwandaUtils.sendGET(url, serviceToken.getToken());
				System.out.println("notes :: " + notes);

				/*
				{"msg_type":"DATA_MSG","option":"EXEC","targetCodes":["APP_327132BE-56B0-44EB-A6C4-40E153155D08", "PER_"],"data_type":"Note","delete":false,"replace":false,"items":[],"status":"READ","total":0,"token":"jt8PUTuGgDRzSxcIYx3MrlQ"}
				*/				
				
				BaseEntity targetBE = beUtils.getBaseEntityByCode(targetCode);
				
				
				String image = targetBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("image: " +image);
				
				String title = targetBE.getValue("PRI_TITLE", null);
				System.out.println("title: " +title);
				
		
				String assocHC = targetBE.getValue("LNK_HOST_COMPANY", null);
				assocHC = assocHC.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assocHC: " +assocHC);
				
				String assocInternship = targetBE.getValue("LNK_INTERNSHIP", null);
				assocInternship = assocInternship.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assocInternship: " +assocInternship);
				
				String assocSuper = targetBE.getValue("LNK_INTERN_SUPERVISOR", null);
				assocSuper = assocSuper.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assocSuper: " +assocSuper);
				
				String assocIntern = targetBE.getValue("PRI_INTERN_CODE", null);
				System.out.println("assocIntern: " +assocIntern);
				
				if(notes != null){
					JsonObject json = new JsonObject(notes);
					json.put("token", userToken.getToken());
					
					JsonObject jsonApplicationONE = new JsonObject(notes);
					jsonApplicationONE.put("code", targetCode);
					
					JsonObject jsonApplicationTWO = new JsonObject(notes);
					jsonApplicationTWO.put("title", title);
					
					JsonObject jsonApplicationTHREE = new JsonObject(notes);
					jsonApplicationTHREE.put("image", image);
					
					json.put("CODE", jsonApplicationONE);
					json.put("TITLE", jsonApplicationTWO);
					json.put("IMAGE", jsonApplicationTHREE);
					
					/*json.put("tabs", [Name, BECode, Image] Appplication: "APP_327132BE-56B0-44EB-A6C4-40E153155D08");
					json.put("tabs", [Name, BECode, Image] Appplication: "APP_327132BE-56B0-44EB-A6C4-40E153155D08");*/
					
					/*
					JSONArray tabs = new JSONArray();
					tabs.put(jsonApplicationONE);
					tabs.put(jsonApplicationTWO);
					tabs.put(jsonApplicationTHREE);
								  
					
				    json.put("tabs", tabs);*/

					System.out.println("json :: " + json.toString());
					VertxUtils.writeMsg("webcmds", json.toString());
				}
			} catch (Exception e) {
				System.out.println("Exception :: " + e);
			}
		}

		retract( $message);
	end


