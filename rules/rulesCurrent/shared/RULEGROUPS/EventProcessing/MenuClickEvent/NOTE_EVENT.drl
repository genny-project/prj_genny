package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.QwandaUtils;

rule "NOTE_EVENT"
	ruleflow-group 'EventProcessing'
	salience 2
	no-loop
	when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ACCESS_NOTES")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode :: " + targetCode);

		if(targetCode != null){
			try {
				String endPoint = GennySettings.projectUrl + "/v7/notes";
				System.out.println("endPoint :: " + endPoint);

				String url = endPoint + "/"+targetCode + "?tags=&pageIndex=0&pageSize=100";
				System.out.println("url :: " + url);

				String notes = QwandaUtils.sendGET(url, serviceToken.getToken());
				System.out.println("notes :: " + notes);
				
				/* Application Details */
				
				BaseEntity targetBE = beUtils.getBaseEntityByCode(targetCode);
				
				String image = targetBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("image: " +image);
				
				String title = targetBE.getValue("PRI_TITLE", null);
				System.out.println("title: " +title);
				
				
				/* Intern Details */
				String assocIntern = targetBE.getValue("PRI_INTERN_CODE", null);
				System.out.println("assocIntern: " +assocIntern);
				
				BaseEntity internBE = beUtils.getBaseEntityByCode(assocIntern);
				
				String internName = internBE.getValue("PRI_NAME", null);
				System.out.println("internName: " +internName);
				
				String internImage = internBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("internImage: " +internImage);
		
		
				/* Internship Details */
				String assocInternship = targetBE.getValue("LNK_INTERNSHIP", null);
				assocInternship = assocInternship.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assocInternship: " +assocInternship);
				
				BaseEntity internshipBE = beUtils.getBaseEntityByCode(assocInternship);
				
				String internshipName = internshipBE.getValue("PRI_NAME", null);
				System.out.println("internshipName: " +internshipName);
				
				String internshipImage = internshipBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("internshipImage: " +internshipImage);
				
				
				/* Host Company Details */
				String assocHC = targetBE.getValue("LNK_HOST_COMPANY", null);
				assocHC = assocHC.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assocHC: " +assocHC);
				
				BaseEntity hostCpyBE = beUtils.getBaseEntityByCode(assocHC);
				
				String HCName = hostCpyBE.getValue("PRI_NAME", null);
				System.out.println("HCName: " +HCName);
				
				String HCImage = hostCpyBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("HCImage: " +HCImage);
				
				
				/* Supervisor Details */
				String assocSuper = targetBE.getValue("LNK_INTERN_SUPERVISOR", null);
				assocSuper = assocSuper.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("assocSuper: " +assocSuper);
				
				BaseEntity superBE = beUtils.getBaseEntityByCode(assocSuper);
				
				String superName = superBE.getValue("PRI_NAME", null);
				System.out.println("superName: " +superName);
				
				String superImage = superBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("superImage: " +superImage);
				
				if(notes != null){
					JsonObject json = new JsonObject(notes);
					json.put("token", userToken.getToken());
					
					JsonObject jsonApplication = new JsonObject(notes);
					jsonApplication.put("code", targetCode);
					jsonApplication.put("title", title);
					jsonApplication.put("image", image);
					
					JsonObject jsonIntern = new JsonObject(notes);
					jsonIntern.put("code", assocIntern);
					jsonIntern.put("title", internName);
					jsonIntern.put("image", internImage);
					
					JsonObject jsonInternship = new JsonObject(notes);
					jsonInternship.put("code", assocInternship);
					jsonInternship.put("title", internshipName);
					jsonInternship.put("image", internshipImage);
					
					JsonObject jsonHC = new JsonObject(notes);
					jsonHC.put("code", assocHC);
					jsonHC.put("title", HCName);
					jsonHC.put("image", HCImage);
					
					JsonObject jsonSuper = new JsonObject(notes);
					jsonHC.put("code", assocSuper);
					jsonHC.put("title", superName);
					jsonHC.put("image", superImage);
					
					
					json.put("Tab_Application", jsonApplication);
					json.put("Tab_Intern", jsonIntern);
					json.put("Tab_Internship", jsonInternship);
					json.put("Tab_HC", jsonHC);
					json.put("Tab_Super", jsonSuper);
					
					/*json.put("tabs", [Name, BECode, Image] Appplication: "APP_327132BE-56B0-44EB-A6C4-40E153155D08");
					json.put("tabs", [Name, BECode, Image] Appplication: "APP_327132BE-56B0-44EB-A6C4-40E153155D08");*/
					
					/*
					JSONArray tabs = new JSONArray();
					tabs.put(jsonApplicationONE);
					tabs.put(jsonApplicationTWO);
					tabs.put(jsonApplicationTHREE);
								  
					
				    json.put("tabs", tabs);
				    
				    String appType = "Application";
				    String internType = "Intern";
				    
				    String jsonString = String.format("{\"tabs\":[{\"code\":\""+targetCode+"\",\"type\":\""+appType+"\",\"name\":\""+title+"\",\"image\":\""+image+"\"},{\"code\":\""+assocIntern+"\",\"type\":\""+internType+"\",\"name\":\""+interName+"\",\"image\":\""+internImage+"\"}");
					System.out.println("jsonString: " +jsonString);
					json.put("tabs", jsonString);*/
	
					System.out.println("json :: " + json.toString());
					VertxUtils.writeMsg("webcmds", json.toString());
				}
			} catch (Exception e) {
				System.out.println("Exception :: " + e);
			}
		}

		retract( $message);
	end


