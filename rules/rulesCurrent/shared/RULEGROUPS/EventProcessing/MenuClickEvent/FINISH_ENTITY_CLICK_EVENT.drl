package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;


rule "FINISH_ENTITY_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "QUE_FINISH_.*")
		userToken : GennyToken (code != "PER_SERVICE" )
		output : OutputParam( )
 		ruleDetails : RuleDetails()
    then

		System.out.println("FINISH_ENTITY_CLICK_EVENT Rule fired");

		/* QUE_FINISH_INTERN */
		
		String code = $message.getData().getCode();
		System.out.println("code: " +code);
		
		String workflowSignalCode = StringUtils.removeStart(code,"QUE_FINISH_");
		System.out.println("workflowSignalCode: " +workflowSignalCode);
		
		workflowSignalCode = workflowSignalCode + "_YES";
		System.out.println("workflowSignalCode: " +workflowSignalCode);
		
		/* INTERN_YES */
		/* HOST_CPY_REP_YES */
		
		
		String user = userToken.getUserCode();
		System.out.println("user: " + user);
		
		
		output.setAskSourceCode(user);
		output.setTargetCode(user);
		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_ADD_ENTITY");
		output.setSuitCase(workflowSignalCode);
		
	
		System.out.println("STARTING ADD_ENTITY WORKFLOW WITH: " +output);


		retract( $message);
	end