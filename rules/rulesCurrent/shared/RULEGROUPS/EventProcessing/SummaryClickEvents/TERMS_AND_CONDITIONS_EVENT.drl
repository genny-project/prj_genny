
package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwandautils.QwandaMessage;
import org.json.JSONObject;


rule "TERMS_AND_CONDITIONS_CLICK_EVENT"
	ruleflow-group 'EventProcessing'
	salience 2
	no-loop
	when
		$message : QEventMessage( data.code == "ACT_PRI_EVENT_TERMS_AND_CONDITIONS" )
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken( code == "PER_SERVICE")
		output : OutputParam( )
		beUtils : BaseEntityUtils()
	then
		System.out.println(drools.getRule().getName() + " triggered");

		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_TERMS_AND_CONDITIONS");
		
		retract( $message);
	end
