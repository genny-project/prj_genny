package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwandautils.GennySettings;
import life.genny.qwandautils.PDFHelper;
import life.genny.qwanda.message.QCmdMessage;

import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.time.ZoneOffset;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


rule "HC_VALIDATION"
    ruleflow-group 'Validation'
    no-loop true
    salience 1000
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("VALID"))
		hcBe : BaseEntity()


     then
 		System.out.println("HC_VALIDATION: Rule fired" );
 		System.out.println("HC_VALIDATION: hcBe = " + hcBe.getCode());

 	    /* Construct answer with Source, Target, Attribute Code, Value */
 		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

 		/* Get user name and job title*/

 		BaseEntity userBe = beUtils.getBaseEntityByCode(userToken.getUserCode());

 		/* Create Host company validation Document */

 		/* send Loading TOAST msg */

					QCmdMessage toastMsg = new QCmdMessage("TOAST", "INFO");
					toastMsg.setMessage("Host Company validation document ready to download!");
					toastMsg.setToken(beUtils.getGennyToken().getToken());
					toastMsg.setSend(true);
					VertxUtils.writeMsg("webcmds", toastMsg);

					System.out.println("Generating Document from the system");

					String docCode = hcBe.getValue("LNK_HCV_DOC",null);
					System.out.println("docCode   ::   " + docCode);
					if(docCode != null){

						BaseEntity docBe = beUtils.getBaseEntityByCode(docCode);
						System.out.println("docBe   ::   " + docBe);

						if(docBe == null){
							System.out.println("docBe is null ");
							return;
						}

						String docName = null;
						docName = docBe.getValue("PRI_FIRSTNAME",null);
						System.out.println("docFName " + docName);

						if(docName == null && userBe != null)
						{
							String name = userBe.getValue("PRI_NAME",null);
							String userJobTitle = userBe.getValue("PRI_JOB_TITLE",'OutcomeLife Agent');
							beUtils.saveAnswer(new Answer(userToken.getUserCode(),docBe.getCode(), "PRI_FIRSTNAME", name));
							beUtils.saveAnswer(new Answer(userToken.getUserCode(),docBe.getCode(), "PRI_JOB_TITLE", userJobTitle));
						} else {
							System.out.println("docName is not null or userBe is null " + userBe);
						}


						String templatePdf = "https://raw.githubusercontent.com/genny-project/layouts/master/internmatch-new/document_templates/HostCompanyValidation.html";
						
						System.out.println("Project is PRJ_" + serviceToken.getRealm().toUpperCase());

						BaseEntity project = beUtils.getBaseEntityByCode( "PRJ_" + serviceToken.getRealm().toUpperCase());
						if(project != null){

							/* get the template url from project if possible */
							templatePdf = project.getValue("PRI_HC_VALIDATION_URL", templatePdf);

						}
						String[] attrName = {"LNK_TYPE_ENVIRO","LNK_EXITS","LNK_ORGANISED","LNK_VENTILATED","LNK_DESK_AREA",
												"LNK_AMENITIES","LNK_WALKWAYS","LNK_EVIDENCE","LNK_TERMS","LNK_SITE_INSPECTION"};

						ArrayList<String> attrNameLst = new ArrayList<String>();
						attrNameLst.addAll(Arrays.asList(attrName));

						for (EntityAttribute ea : docBe.getBaseEntityAttributes()) {
							if (attrNameLst.contains(ea.getAttributeCode())) {
								String beCode = ea.getValueString();
								if(beCode != null && beCode != ""){
									beCode = beUtils.cleanUpAttributeValue(beCode);
									BaseEntity linkedBe = beUtils.getBaseEntityByCode(beCode);
									String name = linkedBe.getValue("PRI_NAME", null);
									if (name != null) {
										ea.setValueString(name);
									}
								}
							}
						}
						DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd MMM yyyy");
						LocalDateTime now = LocalDateTime.now(ZoneOffset.UTC);
						String docValidationDate = dtf.format(now);
						beUtils.saveAnswer(new Answer(userToken.getUserCode(),docBe.getCode(), "PRI_SIGNATURE_DATE", docValidationDate));
						HashMap<String, Object> contextMap = new HashMap<String, Object>();
						contextMap.put("HCVDoc", docBe);
						contextMap.put("HC", hcBe);

						String industry = hcBe.getValue("LNK_COMPANY_INDUSTRY",null);
						String industryInc = hcBe.getValue("LNK_COMPANY_INC",null);

						System.out.println(" industry " + industry);
						System.out.println(" industryInc " + industryInc);
						if(!(industry.isEmpty()))
						{
							industry = beUtils.cleanUpAttributeValue(industry);
							BaseEntity linkedBe = beUtils.getBaseEntityByCode(industry);
							industry = linkedBe.getValue("PRI_NAME", null);
							contextMap.put("Industry", industry);
						}
						if(!(industryInc.isEmpty()))
						{
							industryInc = industryInc.substring(0, 4);
							contextMap.put("IndustryInc", industryInc);
						}
						System.out.println(" template " + templatePdf);
						String pdfUrl = PDFHelper.getDownloadablePdfLinkForHtml(templatePdf, contextMap);
						System.out.println("PDF url :: " + pdfUrl);
						beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcBe.getCode() ,"PRI_HC_VALIDATION_DOC_URL", pdfUrl));
					}else{
						System.out.println("docCode is not present in companyBe");
 					}

		/* Check Validation Status of HC */

		String validationStatus = hcBe.getValue("PRI_VALIDATION", null);
		if (validationStatus != null) {

				if (validationStatus.equals("Incomplete") || validationStatus.equals("HCS") || validationStatus.equals("OHS")) {
						System.out.println("ERROR: PRI_VALIDATION is not ready to be changed: " +validationStatus);
				}

				if (validationStatus.equals("Ready")) {
						beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcBe.getCode() ,"PRI_VALIDATION", "Validated"));
						System.out.println("PRI_VALIDATION set to: Validated");
				}
		} else {
			System.out.println("ERROR: Null validationStatus");
		}

	System.out.println("End of " + drools.getRule().getName());
end
