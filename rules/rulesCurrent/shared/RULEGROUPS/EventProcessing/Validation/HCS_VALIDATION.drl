package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.GennySettings;

import java.util.List;
import java.util.ArrayList;

rule "HCS_VALIDATION"
    ruleflow-group 'Validation'
    no-loop true
    salience 1000 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("HCS"))
		hcBe : BaseEntity()

	  
     then
 		System.out.println("HCS_VALIDATION: Rule fired" );
 		System.out.println("HCS_VALIDATION: hcBe = " + hcBe.getCode()); 
 		
 	    /* Construct answer with Source, Target, Attribute Code, Value */
 		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
 		
		
		/* Check Validation Status of HC */
		
		String validationStatus = hcBe.getValue("PRI_VALIDATION", "Incomplete");
		if (validationStatus != null) {
		
				if (validationStatus.equals("Incomplete")) {
						beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcBe.getCode() ,"PRI_VALIDATION", "HCS"));
						System.out.println("PRI_VALIDATION set to : HCS"); 
				}
				
				if (validationStatus.equals("OHS")) {
						beUtils.saveAnswer(new Answer(userToken.getUserCode(), hcBe.getCode() ,"PRI_VALIDATION", "Ready"));
						System.out.println("PRI_VALIDATION set to : Ready"); 	
						
						/* Send Email/signal to Agent fro HC Val */	
				} 
		} else {
			System.out.println("ERROR: Null validationStatus");
		}
		
end
