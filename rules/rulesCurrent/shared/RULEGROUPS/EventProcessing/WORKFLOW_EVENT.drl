package life.genny.rules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.rule.RuleDetails;

rule "WORKFLOW_EVENT"
    ruleflow-group 'EventProcessing'
    no-loop
    salience -20000
    when 
    		$message : QEventMessage((data.code != "QUE_LOGOUT") && (data.code != "LOGOUT"))
    		userToken : GennyToken (code != "PER_SERVICE" )
    		output : OutputParam( )
    		ruleDetails : RuleDetails()
    then
		System.out.println( ruleDetails + " " + drools.getRule().getName() + " Processing DEFAULT : " + $message );

		/*
		output.setTypeOfResult("SIGNAL");
		output.setResultCode($message.getData().getCode()); 
		output.setAskTargetCode($message.getData().getTargetCode()); 
		output.setAskSourceCode($message.getData().getSourceCode()); 
		output.setSuitCase($message.getData().getParentCode()); 
        */

        output = (OutputParam)$message.getOutputParam();
		update(output);
		retract($message); 
end
