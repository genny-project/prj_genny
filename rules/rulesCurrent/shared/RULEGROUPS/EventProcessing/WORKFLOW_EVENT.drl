package life.genny.rules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QEventWorkflowMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.rule.RuleDetails;

rule "WORKFLOW_EVENT"
    ruleflow-group 'EventProcessing'
    no-loop
    salience -20000
    when 
    		message : QEventWorkflowMessage((data.code != "QUE_LOGOUT") && (data.code != "LOGOUT") && (event_type == "WF"))
    		userToken : GennyToken (code != "PER_SERVICE" )
    		output : OutputParam( )
    		ruleDetails : RuleDetails()
    then
		System.out.println( ruleDetails + " " + drools.getRule().getName() + " Processing WORKFLOW 3 : " + message );
        output = message.getOutputParam();

        System.out.println("********************** Processing WORKFLOW 3 : ****************************");
                System.out.println("TypeOfResult: "  + output.getTypeOfResult());
                System.out.println("ResultCode: "    + output.getResultCode());
                System.out.println("SuitCase: "      + output.getSuitCase());
                System.out.println("AskSourceCode: " + output.getAskSourceCode());
                System.out.println("TargetCode: "    + output.getTargetCode());
                System.out.println("********************** Processing WORKFLOW 3 : ****************************");

        System.out.println("Workflow Output : " + output);
		update(output);
		retract(message);
end
