package life.genny.rules;

import life.genny.utils.OutputParam;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.Answer;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.TableUtils;
import life.genny.utils.CacheSearchUtils;
import life.genny.qwandautils.GennySettings;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;
import life.genny.qwanda.rule.RuleDetails;


rule "QUE_TABLE_NEXT_BTN"
    ruleflow-group 'EventProcessing'
	salience 2
    no-loop
    when
			$message : QEventMessage(data.code matches "QUE_TABLE_NEXT_BTN" )	
			userToken : GennyToken ( code != "PER_SERVICE" ) 
			serviceToken : GennyToken( code == "PER_SERVICE") 
			output : OutputParam( )
			ruleDetails : RuleDetails()
			beUtils : BaseEntityUtils()
    then
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing Answer/Data : " + $message );
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" Parent code :  " + $message.getData().getParentCode());
			
			/* BaseEntityUtils beUtils = new BaseEntityUtils(userToken);  */
			
			Boolean cache = true;
			
		/* get current search */
		TableUtils tableUtils = new TableUtils(beUtils);
		
 		SearchEntity searchBE = null;
				
		if (($message.getData().getTargetCode()!=null) && $message.getData().getTargetCode().startsWith("SBE_"))
 		{
 			System.out.println("Rule -> "+drools.getRule().getName()+" TargetCode starts with SBE_");
 			searchBE = VertxUtils.getObject(beUtils.getGennyToken().getRealm(), "",
			$message.getData().getTargetCode(), SearchEntity.class);
 		} else {
 			System.out.println("Rule -> "+drools.getRule().getName()+" LAST-SEARCH");
 			searchBE = VertxUtils.getObject(beUtils.getGennyToken().getRealm(), "LAST-SEARCH",
				userToken.getSessionCode(), SearchEntity.class);
		}
				
		
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" NEXT for "+searchBE.getCode()); 
		
		Integer pageIndex  = 0;
		Integer pageSize = GennySettings.defaultPageSize;
		Integer numRecords = 1000;
		try {
		System.out.println("pageIndexStr "+searchBE.getValueAsString("SCH_PAGE_START"));
		pageIndex = searchBE.getValue("SCH_PAGE_START",0);
		System.out.println("Got past pageIndex");
		System.out.println("pageSizeStr "+searchBE.getValueAsString("SCH_PAGE_SIZE"));
		pageSize = searchBE.getValue("SCH_PAGE_SIZE", GennySettings.defaultPageSize);
		System.out.println("Got past pageSize");
		System.out.println("numRecordsStr "+searchBE.getValueAsString("PRI_TOTAL_RESULTS"));
		numRecords = searchBE.getValue("PRI_TOTAL_RESULTS", 1000);  /* default 1000 */	
		System.out.println("Got past numRecords");	
		} catch (ClassCastException e)
		{
			System.out.println(e.getLocalizedMessage());
			numRecords = 1000;
		}
		pageIndex = pageIndex + pageSize;
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" NEXT for "+searchBE.getCode()+" pageIndex="+pageIndex+", pageSize="+pageSize+", numRecords="+numRecords); 
		if ((pageIndex <= numRecords)||(numRecords < 0)) { /* handle hack for numRecords=-1 */
			Integer pageNumber = (pageIndex / pageSize) +1;
		
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" NEXT for "+searchBE.getCode()+" NEW PageNumber is "+pageNumber); 
			Answer pageAnswer = new Answer(userToken.getUserCode(),searchBE.getCode(), "SCH_PAGE_START", pageIndex+"");
			Answer pageNumberAnswer = new Answer(userToken.getUserCode(),searchBE.getCode(), "PRI_INDEX", pageNumber+"");

			searchBE = beUtils.updateBaseEntity(searchBE, pageAnswer,SearchEntity.class);
			searchBE = beUtils.updateBaseEntity(searchBE, pageNumberAnswer,SearchEntity.class);
		
			VertxUtils.putObject(beUtils.getGennyToken().getRealm(), "", searchBE.getCode(), searchBE,
				beUtils.getGennyToken().getToken());
			VertxUtils.putObject(beUtils.getGennyToken().getRealm(), "LAST-SEARCH", userToken.getSessionCode(), searchBE,
				userToken.getToken());
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" NEXT for "+searchBE.getCode()+" About to go into search! "); 
		
			long totalTime = TableUtils.searchTable(beUtils,searchBE, cache, false);

			System.out.println("total took " + (totalTime) + " ms"); 
			}
  	       output.setTypeOfResult("NONE");
  	       output.setResultCode("NONE");  /* dont display anything new */
  	     
  	       retract( $message);
  	       update(output);
end
