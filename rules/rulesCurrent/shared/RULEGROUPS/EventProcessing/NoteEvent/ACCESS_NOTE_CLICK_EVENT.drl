package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;


rule "ACCESS_NOTES_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ACCESS_NOTES_.*")
		userToken : GennyToken (code != "PER_SERVICE")
		serviceToken : GennyToken (code == "PER_SERVICE")
		output : OutputParam()
 		ruleDetails : RuleDetails()
    then
		/*
		code: "ACT_PRI_EVENT_ACCESS_NOTES_APPLICATION"
		parentCode: "SBE_APPLIED_APPLICATIONS_D12A7273-656D-4408-A12F-714E2A38D3E3"
		targetCode: "APP_8CC599CA-CA86-4AC3-A0C6-24B025B40D92"
		*/ 
		
		System.out.println(drools.getRule().getName() + " - Rule fired");
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		
		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode: " + targetCode);
		
		String code = $message.getData().getCode();
		String key = StringUtils.removeStart(code, "ACT_PRI_EVENT_ACCESS_NOTES_");
		System.out.println("key: " + key);
	
		
		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_ACCESS_NOTES");
		output.setTargetCode(targetCode);
		output.setSuitCase(key);
		output.setLuggage("ACCESS");
		
		System.out.println("**************************************************");
		System.out.println("TypeOfResult: "  + output.getTypeOfResult());
		System.out.println("ResultCode: "    + output.getResultCode());
		System.out.println("TargetCode: "    + output.getTargetCode());
		System.out.println("SuitCase: "      + output.getSuitCase());
		System.out.println("Luggage: "      + output.getLuggage());
		System.out.println("**************************************************");
		
		retract( $message);
	end
