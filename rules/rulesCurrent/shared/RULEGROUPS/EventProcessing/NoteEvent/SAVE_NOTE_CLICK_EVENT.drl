package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;


rule "SAVE_NOTES_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_SAVE_NOTES_.*")
		userToken : GennyToken (code != "PER_SERVICE")
		serviceToken : GennyToken (code == "PER_SERVICE")
		output : OutputParam()
 		ruleDetails : RuleDetails()
    then
		/*
		code: "ACT_PRI_EVENT_ACCESS_NOTES_APPLICATION"
		parentCode: "SBE_APPLIED_APPLICATIONS_D12A7273-656D-4408-A12F-714E2A38D3E3"
		targetCode: "APP_8CC599CA-CA86-4AC3-A0C6-24B025B40D92"
		*/ 
		
		System.out.println(drools.getRule().getName() + " - Rule fired");
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		
		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode :: " + targetCode);

		String parentCode = $message.getData().getParentCode();
		System.out.println("parentCode :: " + parentCode);
		
		String content = $message.getData().getContent();
		System.out.println("content :: " + content);
			
		String tags = "BD";
		
		BaseEntity targetBe = beUtils.getBaseEntityByCode(targetCode);
		
		if (targetBe != null) {
			String endPoint = "https://internmatch-dev.gada.io/v7/notes";
			System.out.println("endPoint :: " + endPoint);
			
			String url = endPoint + "/"+targetCode + "?tags=&pageIndex=0&pageSize=100";
			System.out.println("url :: " + url);
			
			QwandaUtils.apiPostNote(endPoint, sourceCode, tags, targetCode, content, serviceToken.getToken());
			System.out.println("Note saved against " + targetCode + " with content: " + content);
		
			String toastName = targetBe.getValue("PRI_NAME", null);
			System.out.println("toastName: " +toastName);
			
			/* send cmd msg */
			QCmdMessage msg = new QCmdMessage("TOAST", "INFO");
			msg.setMessage("Note saved against " + toastName + " with content: " + content);
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds", msg);	
		} else {
			System.out.println("ERROR: Notes failed to save");
			
			QCmdMessage msg = new QCmdMessage("TOAST", "ERROR");
			msg.setMessage("ERROR: Notes failed to save");
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds", msg);
		}


		String luggage = "nah";
		if (targetCode.startsWith("APP_")) {
			luggage = "AppSet";
		}
		System.out.println("luggage: " + luggage);
	
		
		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_ACCESS_NOTES");
		output.setTargetCode(targetCode);
		/*output.setSuitCase(key);*/
		output.setLuggage(luggage);
		
		System.out.println("**************************************************");
		System.out.println("TypeOfResult: "  + output.getTypeOfResult());
		System.out.println("ResultCode: "    + output.getResultCode());
		System.out.println("TargetCode: "    + output.getTargetCode());
		/*System.out.println("SuitCase: "      + output.getSuitCase());*/
		System.out.println("Luggage: "      + output.getLuggage());
		System.out.println("**************************************************");
		
		retract( $message);
	end
