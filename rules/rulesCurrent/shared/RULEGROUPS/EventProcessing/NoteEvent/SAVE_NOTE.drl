package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;


rule "SAVE_NOTE"
    ruleflow-group 'SaveNote'
		salience 2
    no-loop
    when
		targetBe : BaseEntity()
		key : String(key.equals("INTERN") || 
					key.equals("INTERNSHIP") || 
					key.equals("HOST_CPY") || 
					key.equals("HOST_CPY_REP") || 
					key.equals("APPLICATION"))
		
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		ruleDetails : RuleDetails()
    then

		System.out.println("SAVE_NOTE fired");
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String content = $message.getData().getContent();
		System.out.println("content :: " + content);
			
		String tags = "BD";
		
		targetBe = beUtils.getBaseEntityByCode(targetBe.getCode());
		
		if (targetBe != null) {
			String endPoint = "https://internmatch-dev.gada.io/v7/notes";
			System.out.println("endPoint :: " + endPoint);
			
			String url = endPoint + "/"+targetCode + "?tags=&pageIndex=0&pageSize=100";
			System.out.println("url :: " + url);
			
			QwandaUtils.apiPostNote(endPoint, sourceCode, tags, targetCode, content, serviceToken.getToken());
			System.out.println("Note saved against " + targetCode + " with content: " + content);
		
			String toastName = targetBE.getValue("PRI_NAME", null);
			System.out.println("toastName: " +toastName);
			
			/* send cmd msg */
			QCmdMessage msg = new QCmdMessage("TOAST", "INFO");
			msg.setMessage("Note saved against " + toastName + " with content: " + content);
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds", msg);	
		} else {
			System.out.println("ERROR: Notes failed to save");
			
			QCmdMessage msg = new QCmdMessage("TOAST", "ERROR");
			msg.setMessage("ERROR: Notes failed to save");
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds", msg);
		}
															
		retract(targetBe);
		retract(type);
		
	end
