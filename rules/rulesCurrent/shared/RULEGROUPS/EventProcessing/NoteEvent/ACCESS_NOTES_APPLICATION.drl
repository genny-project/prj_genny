package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.QwandaUtils;

rule "ACCESS_NOTES_APPLICATION"
	ruleflow-group 'AccessNote'
	salience 2
	no-loop
	when
		targetBe : BaseEntity()
		key : String(key.equals("APPLICATION"))
		luggage : String (luggage matches "APP_.*" || luggage matches "ACCESS")
		
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		ruleDetails : RuleDetails()
	then

		System.out.println(drools.getRule().getName() + " triggered");
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		
		String targetCode = targetBe.getCode();
		System.out.println("targetCode: " +targetCode);

		System.out.println("luggage: " +luggage);
		System.out.println("key: " +key);

		if (targetBe.getCode().startsWith("APP_")) {
			targetBe = beUtils.getBaseEntityByCode(targetBe.getCode());
		} else if (luggage.startsWith("APP_")) {
			targetBe = beUtils.getBaseEntityByCode(luggage);
		} else {
			System.out.println("ERROR: Failed to retrieve Application Base Entity");
			
			QCmdMessage msg = new QCmdMessage("TOAST", "ERROR");
			msg.setMessage("ERROR: Failed to retrieve Application Base Entity");
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds", msg);
		}

		if(targetBe != null){
			/* Application Details */
			String appCode = targetBe.getCode();
			System.out.println("appCode: " +appCode);
			
			/* Intern Details */
			String internCode = targetBe.getValue("PRI_INTERN_CODE", null);
			System.out.println("internCode: " +internCode);
			
			BaseEntity internBe = beUtils.getBaseEntityByCode(internCode);
	
			/* Internship Details */
			String internshipCode = targetBe.getValue("LNK_INTERNSHIP", null);
			internshipCode = internshipCode.replace("\"", "").replace("[", "").replace("]", "");
			System.out.println("internshipCode: " +internshipCode);
			
			BaseEntity internshipBe = beUtils.getBaseEntityByCode(internshipCode);		
			
			/* Host Company Details */
			String hcCode = targetBe.getValue("LNK_HOST_COMPANY", null);
			hcCode = hcCode.replace("\"", "").replace("[", "").replace("]", "");
			System.out.println("hcCode: " +hcCode);
			
			BaseEntity hcBe = beUtils.getBaseEntityByCode(hcCode);
			
			/* Supervisor Details */
			String superCode = targetBe.getValue("LNK_INTERN_SUPERVISOR", null);
			superCode = superCode.replace("\"", "").replace("[", "").replace("]", "");
			System.out.println("superCode: " +superCode);
			
			BaseEntity superBe = beUtils.getBaseEntityByCode(superCode);
			
			
			
			/* Get all notes for Application Set */
			String endPoint = GennySettings.projectUrl + "/v7/notes";
			System.out.println("endPoint :: " + endPoint);

			String urlApp = endPoint + "/"+appCode + "?tags=&pageIndex=0&pageSize=100";
			String urlIntern = endPoint + "/"+internCode + "?tags=&pageIndex=0&pageSize=100";
			String urlInternship = endPoint + "/"+internshipCode + "?tags=&pageIndex=0&pageSize=100";
			String urlHC = endPoint + "/"+hcCode + "?tags=&pageIndex=0&pageSize=100";
			String urlSuper = endPoint + "/"+superCode + "?tags=&pageIndex=0&pageSize=100";

			System.out.println("urlApp :: " + urlApp);
			System.out.println("urlIntern :: " + urlIntern);
			System.out.println("urlInternship :: " + urlInternship);
			System.out.println("urlHC :: " + urlHC);
			System.out.println("urlSuper :: " + urlSuper);

			String appNotes = QwandaUtils.sendGET(urlApp, serviceToken);
			String internNotes = QwandaUtils.sendGET(urlIntern, serviceToken);
			String internshipNotes = QwandaUtils.sendGET(urlInternship, serviceToken);
			String hcNotes = QwandaUtils.sendGET(urlHC, serviceToken);
			String superNotes = QwandaUtils.sendGET(urlSuper, serviceToken);

			System.out.println("appNotes :: " + appNotes);
			System.out.println("internNotes :: " + internNotes);
			System.out.println("internshipNotes :: " + internshipNotes);
			System.out.println("hcNotes :: " + hcNotes);
			System.out.println("superNotes :: " + superNotes);
			
			/* Send Tab order to FE */
			String codes = "[\"" + appCode + "\",\"" + internCode + "\",\"" + internshipCode + "\",\"" + hcCode + "\",\"" + superCode + "\"]";
			System.out.println("codes :: " + codes);

			QCmdMessage notesMsg = new QCmdMessage("NOTES", "TABS");
			notesMsg.setCode(codes);
			notesMsg.setToken(beUtils.getGennyToken().getToken());
			notesMsg.setSend(true);
			VertxUtils.writeMsg("webcmds", notesMsg);

			/* Send BEs to FE */
			List<BaseEntity> baseEntitys = new ArrayList<BaseEntity>();
			baseEntitys.add(targetBe);
			baseEntitys.add(internBe);
			baseEntitys.add(internshipBe);
			baseEntitys.add(hcBe);
			baseEntitys.add(superBe);

			QDataBaseEntityMessage beMsg = new QDataBaseEntityMessage(baseEntitys);
			beMsg.setToken(userToken.getToken());
			beMsg.setReplace(true);
			VertxUtils.writeMsg("webcmds", JsonUtils.toJson(beMsg));

			
			/* Send notes to FE */
			JsonObject jsonApplication = new JsonObject(appNotes);
				jsonApplication.put("token", userToken.getToken());
			JsonObject jsonIntern = new JsonObject(internNotes);
				jsonIntern.put("token", userToken.getToken());
			JsonObject jsonInternship = new JsonObject(internshipNotes);
				jsonInternship.put("token", userToken.getToken());
			JsonObject jsonHC = new JsonObject(hcNotes);
				jsonHC.put("token", userToken.getToken());
			JsonObject jsonSuper = new JsonObject(superNotes);
				jsonSuper.put("token", userToken.getToken());

			if(appNotes == null || internNotes == null || internshipNotes == null || hcNotes == null || superNotes == null){
		
				System.out.println("ERROR: Some Notes failed to be retrieved");
		
				QCmdMessage msg = new QCmdMessage("TOAST", "ERROR");
				msg.setMessage("ERROR: Some Notes failed to be retrieved");
				msg.setToken(beUtils.getGennyToken().getToken());
				msg.setSend(true);
				VertxUtils.writeMsg("webcmds", msg);
			}	

			VertxUtils.writeMsg("webcmds", jsonApplication.toString());
			VertxUtils.writeMsg("webcmds", jsonIntern.toString());
			VertxUtils.writeMsg("webcmds", jsonInternship.toString());
			VertxUtils.writeMsg("webcmds", jsonHC.toString());
			VertxUtils.writeMsg("webcmds", jsonSuper.toString());
			System.out.println("Successfully navigated Application Access Notes");
			
		} else {
			System.out.println("ERROR: Failed to retrieve Application Base Entity");
			
			QCmdMessage msg = new QCmdMessage("TOAST", "ERROR");
			msg.setMessage("ERROR: Failed to retrieve Application Base Entity");
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds", msg);
		}

		retract(targetBe);
		retract(key);
		retract(luggage);
	end


