package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.QwandaUtils;

rule "NOTE_EVENT_APPLICATION"
	ruleflow-group 'EventProcessing'
	salience 2
	no-loop
	when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ACCESS_NOTES")
		/*$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ACCESS_NOTES_INTERN")*/
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode :: " + targetCode);

		if(targetCode != null){
			try {
				String endPoint = GennySettings.projectUrl + "/v7/notes";
				System.out.println("endPoint :: " + endPoint);

				String url = endPoint + "/"+targetCode + "?tags=&pageIndex=0&pageSize=100";
				System.out.println("url :: " + url);

				String notes = QwandaUtils.sendGET(url, serviceToken.getToken());
				System.out.println("notes :: " + notes);
				
				BaseEntity actualAppBe = beUtils.getBaseEntityByCode(targetCode);
				
				String internCode = actualAppBe.getValue("PRI_INTERN_CODE", null);
				System.out.println("internCode: " +internCode);
				
				/* Intern Details */
				BaseEntity internBE = beUtils.getBaseEntityByCode(internCode);
				
				String internName = internBE.getValue("PRI_NAME", null);
				System.out.println("internName: " +internName);
				
				String internImage = internBE.getValue("PRI_IMAGE_URL", null);
				System.out.println("internImage: " +internImage);


				/* Search for Applications */
				String linkedAPPs = internBE.getValue("LNK_APPLICATIONS", null);
				
				if (linkedAPPs != null){
					System.out.println("linkedAPPs: " +linkedAPPs);									/*["APP_AA3FEB35-FD12-49B9-A595-AA315773A37F","APP_41484401-7C82-4CD0-9B75-AA9E224B23ED"]*/
					linkedAPPs = linkedAPPs.replace("\"", "").replace("[", "").replace("]", "");	
					System.out.println("linkedAPPs: " +linkedAPPs);									/*APP_AA3FEB35-FD12-49B9-A595-AA315773A37F,APP_41484401-7C82-4CD0-9B75-AA9E224B23ED*/
					
					String[] splitAPPs = linkedAPPs.split(",");
					int length = splitAPPs.length;
					System.out.println("length: " +length);	
					
					BaseEntity[] beCodez = new BaseEntity[length];
					BaseEntity appBe = null;
					
					
					for (int i = 0; i < length; i++) {
						appBe = beUtils.getBaseEntityByCode(splitAPPs[i]);
						beCodez[i] = appBe;
						System.out.println("beCodez: " +beCodez[i]);
					}
					
					QDataBaseEntityMessage msgMatches = new QDataBaseEntityMessage(beCodez);
					msgMatches.setToken(userToken.getToken());
					msgMatches.setReplace(true);
					VertxUtils.writeMsg("webcmds", JsonUtils.toJson(msgMatches));
				}
				/*String[] tagList = {"Business Development", "Placement", "Outcome Life", "Miscellaneous"};*/
				
				
				if(notes != null){
					JsonObject json = new JsonObject(notes);
					json.put("token", userToken.getToken());
					
					JsonObject jsonIntern = new JsonObject();
					jsonIntern.put("code", internCode);
					jsonIntern.put("title", internName);
					jsonIntern.put("image", internImage);
					/*jsonIntern.put("tagList", tagList);*/
					
					json.put("Tab_Intern", jsonIntern);
					
					System.out.println("json :: " + json.toString());
					VertxUtils.writeMsg("webcmds", json.toString());
				}
				
				
				
			} catch (Exception e) {
				System.out.println("Exception :: " + e);
			}
		}

		retract( $message);
	end


