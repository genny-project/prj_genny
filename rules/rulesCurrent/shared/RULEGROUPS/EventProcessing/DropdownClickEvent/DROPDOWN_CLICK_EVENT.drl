package life.genny.rules;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;

import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import com.google.gson.reflect.TypeToken;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.VertxUtils;
import life.genny.utils.TableUtils;
import life.genny.utils.SearchUtils;
import life.genny.models.TableData;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.Ask;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.OutputParam;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;

import java.io.StringReader;

import java.util.List;
import java.util.ArrayList;

import java.util.concurrent.Callable;
import java.util.concurrent.CompletionService;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import life.genny.utils.SearchCallable;
import life.genny.utils.TableFrameCallable;
import life.genny.utils.CacheSearchUtils;
import life.genny.utils.SearchUtils;
import life.genny.qwandautils.GennySettings;

rule "DROPDOWN_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
	salience 2000
    no-loop
    when
			message : QEventDropdownMessage(	)
			userToken : GennyToken (code != "PER_SERVICE" )
			serviceToken : GennyToken( code == "PER_SERVICE")
			output : OutputParam( )
			ruleDetails : RuleDetails()
			beUtils : BaseEntityUtils()
    then
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + message );


		System.out.println(ruleDetails+" "+drools.getRule().getName()+" attributeCode = "+message.getAttributeCode()+" question:"+message.getQuestionCode() + " code: " + message.getData().getCode());
		Integer dropdownSize = GennySettings.defaultDropDownPageSize;
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" dropdownsize = "+dropdownSize);

		/* Now filter these initial dropdown events until everything is captured */
		BaseEntity targetBe = beUtils.getBaseEntityByCode(message.getData().getTargetCode());
		BaseEntity defBe = beUtils.getDEF(targetBe);
		if (defBe != null) {
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" Target DEF identified as "+defBe.getCode()+"! "+defBe.getName());
		
			if ("LNK_EDU_PROVIDER".equals(message.getAttributeCode()) && "DEF_INTERN".equals(defBe.getCode())
			|| "LNK_SELECT_COUNTRY".equals(message.getAttributeCode()) && "DEF_INTERN".equals(defBe.getCode())
				|| "LNK_PERSON".equals(message.getAttributeCode()) && "DEF_BUCKET_PAGE".equals(defBe.getCode())
			)
			{
						System.out.println(ruleDetails+" "+drools.getRule().getName()+" INVOKING DEF DROPDOWN RULE");
						QDataBaseEntityMessage msg = SearchUtils.getDropdownData(beUtils,message,dropdownSize);

						System.out.println(ruleDetails+" "+drools.getRule().getName()+" "+msg);
						msg.setToken(userToken.getToken());
						VertxUtils.writeMsg("webcmds",msg);
						System.out.println(ruleDetails+" "+drools.getRule().getName()+" Sent dropdown message2 with "+msg.getItems().length+" items");

						retract(message);
						System.out.println("Retracted message");
						output.setTypeOfResult("NONE");
						output.setResultCode("NONE");  /* don't display anything new */
						update(output);

			}
		}
		
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" End Dropdown Rule");

	end
