package life.genny.rules;

import org.apache.commons.lang3.StringUtils;



import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;

import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import com.google.gson.reflect.TypeToken;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.VertxUtils;
import life.genny.utils.TableUtils;
import life.genny.utils.SearchUtils;
import life.genny.models.TableData;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.Ask;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.OutputParam;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;


import java.io.StringReader;

import java.util.List;
import java.util.ArrayList;



import java.util.concurrent.Callable;
import java.util.concurrent.CompletionService;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import life.genny.utils.SearchCallable;
import life.genny.utils.TableFrameCallable;
import life.genny.utils.CacheSearchUtils;
import life.genny.utils.SearchUtils;

rule "DROPDOWN_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
	salience 2000
    no-loop
    when
			message : QEventDropdownMessage(  )
			userToken : GennyToken (code != "PER_SERVICE" )
			serviceToken : GennyToken( code == "PER_SERVICE")
			output : OutputParam( )
			ruleDetails : RuleDetails()
			beUtils : BaseEntityUtils()
    then
			System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + message );


		System.out.println(ruleDetails+" "+drools.getRule().getName()+" attributeCode = "+message.getAttributeCode()+" question:"+message.getQuestionCode());
		Integer dropdownSize = GennySettings.defaultDropDownPageSize;

		if ("LNK_EDU_PROVIDER".equalsIgnoreCase(message.getAttributeCode())) {
			dropdownSize = 20; /* To accomodate the larger group sizes , like 'Melbourne' */
		
		
			QDataBaseEntityMessage msg = SearchUtils.getDropdownData(beUtils,message,dropdownSize);

			System.out.println(ruleDetails+" "+drools.getRule().getName()+" "+msg);
			msg.setToken(userToken.getToken());
			if (msg.getItems().length >1) {
				VertxUtils.writeMsg("webcmds",msg);
				System.out.println(ruleDetails+" "+drools.getRule().getName()+" Sent dropdown message2 with "+msg.getItems().length+" items");
			} else {
				System.out.println(ruleDetails+" "+drools.getRule().getName()+" No Dropdown Data sent");
			}
			}
			retract(message);
			System.out.println("Retracted message");
			output.setTypeOfResult("NONE");
			output.setResultCode("NONE");  /* don't display anything new */
			update(output);
			System.out.println("End Dropdown Rule");
		end
