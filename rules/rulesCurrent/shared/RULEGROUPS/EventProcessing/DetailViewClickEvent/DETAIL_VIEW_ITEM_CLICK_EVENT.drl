package life.genny.rules;

import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import life.genny.utils.BaseEntityUtils;

rule "DETAIL_VIEW_ITEM_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "QUE_.*" && (data.parentCode == "QUE_DETAIL_VIEW_GRP"))
		userToken : GennyToken (code != "PER_SERVICE" )
		output : OutputParam( )
    then
	
		System.out.println("Processing USER EVENT : " + $message );
		
		System.out.println("Parent code :  " + $message.getData().getParentCode());
		
		String code = ($message.getData().getCode()).replace("QUE_", "FRM_");
		
		/*Frame3 frame = VertxUtils.getObject(realm, "", code, Frame3.class);*/
		BaseEntity person = new BaseEntityUtils(userToken).getBaseEntityByCode("PER_USER1");
		System.out.println("++++++++++++++" + person);
		
		QDataBaseEntityMessage msgg = new QDataBaseEntityMessage(person);
		
		msgg.setToken(userToken.getToken());
		msgg.setReplace(true);
		
		VertxUtils.writeMsg("webcmds", JsonUtils.toJson(msgg));
		System.out.println("++++++++++++++" + JsonUtils.toJson(msgg));
		
		
		output.setFormCode( code ,"FRM_CONTENT");
		retract( $message);
	
	end
