package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;

rule "EDIT_FORM_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "QUE_EDIT_.*"")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		ruleDetails : RuleDetails()
    then
		System.out.println("Processing EDIT FORM CLICK EVENT : " + $message );
		
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + $message );
		
		String code = $message.getData().getCode(); /* get click event code e.g. QUE_EDIT_EDU_PROVIDER_GRP  */
		String workflowSignalCode = "EDIT_FORMS";
		
		String typeOf = StringUtils.removeEnd(code, "_GRP");
		typeOf = StringUtils.removeStart(typeOf,"QUE_EDIT");

		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_"+workflowSignalCode);
		output.setTargetCode($message.getData().getTargetCode());
		output.setSuitCase(typeOf);
		
		
		System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$ targetCode: " + output.getTargetCode());
		
		SessionFacts facts = new SessionFacts(serviceToken, userToken, output.getTargetCode());
		
		System.out.println("START SIGNAL: " +workflowSignalCode);
		System.out.println("STARTING EDIT FORMS PROCEDURE WITH: " +output);
	
		retract( $message);
	end
