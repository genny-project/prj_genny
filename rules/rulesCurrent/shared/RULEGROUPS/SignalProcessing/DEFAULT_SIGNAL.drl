package life.genny.rules;










import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import life.genny.qwanda.rule.RuleDetails;

rule "DEFAULT_SIGNAL"
    ruleflow-group 'SignalProcessing'
    lock-on-active
    salience -10000
    when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		ruleDetails : RuleDetails()
    then
		output.setTypeOfResult("NONE");
		output.setResultCode("");
	
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing Internal Signal " + userToken.getUserCode()+" "+output.getTypeOfResult());
		retract(ruleDetails);		 /* end it all */
end
