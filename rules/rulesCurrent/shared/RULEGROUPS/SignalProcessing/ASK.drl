package life.genny.rules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;

rule "ASK"
    ruleflow-group 'SignalProcessing'
    no-loop
    salience 2
    when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		msg : QEventMessage (data.code == "ASK")
    then
	
		System.out.println("Processing Internal Signal - ASK " + userToken.getUserCode());
		output.setTypeOfResult("FORMCODE");
		
		
		String questionCode = msg.getData().getValue();
		System.out.println("Question Code = "+questionCode);
		
		String frameCode = "FRM_"+questionCode;
		

		System.out.println(output.getTypeOfResult());
		output.setResultCode(frameCode);
		output.setTargetCode("FRM_CONTENT");
		
		retract(serviceToken)
end