package life.genny.rules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.rule.RuleDetails;

rule "ASK"
    ruleflow-group 'SignalProcessing'
    no-loop
    salience 2
    when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		msg : QEventMessage (data.code == "ASK")
		ruleDetails : RuleDetails()
    then
		String frameCode = "FRM_"+msg.getData().getValue();

		System.out.println("Test test");
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" " + userToken.getUserCode()+"  Question Code = "+msg.getData().getValue()+" ,FORMCODE="+frameCode);
		output.setTypeOfResult("FORMCODE");
		output.setResultCode(frameCode);
		output.setTargetCode("FRM_CONTENT");

		retract(serviceToken);
		update(output);
end