package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.text.WordUtils;

import java.util.List;
import java.util.ArrayList;



rule "PRI_LASTNAME"
    ruleflow-group 'DataProcessing'
        salience 500 
    when
      beUtils : BaseEntityUtils()
	  serviceToken : GennyToken( code == "PER_SERVICE") 
	  answer : Answer( attributeCode == "PRI_LASTNAME" )
	  answersToSave : Answers()
	  output : OutputParam( )
     then
 		System.out.println("Rule -> PRI_LASTNAME :  user=" + beUtils.getGennyToken().getUserCode()+" : "+answer); 
		String sourceCode = beUtils.getGennyToken().getUserCode();
		String targetCode = answer.getTargetCode();
		
		/* Parse json answer and save the individual answers */
		String lastname = answer.getValue();
		
		BaseEntity person = beUtils.getBaseEntityByCode(targetCode);
		String firstname = person.getValue("PRI_FIRSTNAME","");
					
		answersToSave.add(new Answer(sourceCode, targetCode, "PRI_LASTNAME", answer.getValue(),false,true));	
			
		String name = firstname + " "+lastname;
		name = name.trim();	
			
		answersToSave.add(new Answer(sourceCode, targetCode, "PRI_NAME", name,false,true));
			
		String initials = 	WordUtils.initials(name);
			
		answersToSave.add(new Answer(sourceCode, targetCode, "PRI_INITIALS", initials,false,true));
		
			
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
		
		

		retract(answer);
		update(answersToSave);
	
end
