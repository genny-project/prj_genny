package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_INTERN_SUPERVISOR_APP"
	ruleflow-group 'DataProcessing'
	salience 5000
	no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_INTERN_SUPERVISOR" && targetCode matches "APP_.*")
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);
		
		String code = beUtils.cleanUpAttributeValue(value);
		System.out.println("code  :: " + code);

		List<Answer> answers = new ArrayList<Answer>();

		/* get the supervisor baseentity */
		BaseEntity be = beUtils.getBaseEntityByCode(code);
		if(be != null){

			/* get the name attribute of the supervisor */
			String name = be.getValue("PRI_NAME", null);	
			if(name != null)	{
				Answer assocSupervisorAnswer = new Answer(sourceCode, targetCode, "PRI_ASSOC_SUPERVISOR", name,false,true);
				Answer assocSupervisorNameAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_NAME", name,false,true);
				answers.add(assocSupervisorAnswer);
				answers.add(assocSupervisorNameAnswer);
				/*VertxUtils.sendToFrontEnd(userToken, assocSupervisorAnswer, assocSupervisorNameAnswer);*/
			}

			String mobile = be.getValue("PRI_MOBILE", null);
			if(mobile != null){
				Answer assocSupervisorMobileAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_MOBILE", mobile,false,true);
				answers.add(assocSupervisorMobileAnswer);
				
				
				/* Prepare Question and Ask */
				Attribute eventAttribute = new Attribute("PRI_SUPER_MOBILE", "link", new DataType(String.class));
				
				Question supervisorMobileQues = new Question("QUE_SUPER_MOBILE", "Supervisor Mobile", eventAttribute, true);
				Ask supervisorMobileAsk = new Ask(supervisorMobileQues, sourceCode, targetCode);
				
				
				/* Send Disable for this Ask */
				supervisorMobileAsk.setDisabled(true);
				
				QDataAskMessage supervisorMobileAskMsgDisable = new QDataAskMessage(supervisorMobileAsk);
				supervisorMobileAskMsgDisable.setToken(userToken.getToken());
				VertxUtils.writeMsg("webcmds", supervisorMobileAskMsgDisable);
				
				/* Send Answer to Front End */
				VertxUtils.sendToFrontEnd(userToken, assocSupervisorMobileAnswer);
		
				
				/* Send enable for this Ask */
				supervisorMobileAsk.setDisabled(false);
				
				QDataAskMessage supervisorMobileAskMsgEnable = new QDataAskMessage(supervisorMobileAsk);
				supervisorMobileAskMsgEnable.setToken(userToken.getToken());
				VertxUtils.writeMsg("webcmds", supervisorMobileAskMsgEnable);
			}

			String email = be.getValue("PRI_EMAIL", null);		
			if(email != null){
				Answer assocSupervisorEmailAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_EMAIL", email,false,true);
				answers.add(assocSupervisorEmailAnswer);
				/*VertxUtils.sendToFrontEnd(userToken, assocSupervisorEmailAnswer);*/
			}
			
			String job = be.getValue("PRI_JOB_TITLE", null);		
			if(job != null){
				Answer assocSupervisorJobAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_JOB_TITLE", job,false,true);
				answers.add(assocSupervisorJobAnswer);
				/*VertxUtils.sendToFrontEnd(userToken, assocSupervisorJobAnswer);*/
			}	
		}

		beUtils.saveAnswers(answers);
end
