package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_ALL_EMAILS"
	ruleflow-group 'DataProcessing'
	salience 5000
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_ALL_EMAILS")
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")
	then
		System.out.println(drools.getRule().getName() + " triggered");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);

		BaseEntity HCRBe = beUtils.getBaseEntityByCode(targetCode);
		System.out.println("HCRBe  :: " + HCRBe);
		
		if(HCRBe != null){
			String hcCode = HCRBe.getValue("LNK_HOST_COMPANY", null);
			hcCode = beUtils.cleanUpAttributeValue(hcCode);
			System.out.println("hcCode: " + hcCode);
			
			if(hcCode != null){
				Answer ans = new Answer(sourceCode, hcCode, "LNK_ALL_EMAILS", value);
				beUtils.saveAnswer(ans);
				VertxUtils.sendToFrontEnd(userToken, ans);
			}
		}
end
