package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_AGENT"
	ruleflow-group 'DataProcessing'
	salience 5000
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_AGENT")
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")
	then
		System.out.println(drools.getRule().getName() + " triggered");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);

		BaseEntity targetBe = beUtils.getBaseEntityByCode(targetCode);
		if(targetBe != null){
		
			String linkedApps = be.getValue("LNK_APPLICATIONS", null);
			if (linkedApps != null) {
			
				linkedApps = linkedApps.replace("\"", "").replace("[", "").replace("]", "");
				System.out.println("linkedApps  :: " + linkedApps);	
			
				if (linkedApps.contains(",")) {
					String[] applications = linkedApps.split(",");
					int length = applications.length;
					
					for (int i; i < length; i++) {
						System.out.println("applications[i]  :: " + applications[i]);
						BaseEntity appBe = beUtils.getBaseEntityByCode(applications[i]);
						System.out.println("appBe  :: " + appBe);
						if (appBe != null) {
							beUtils.saveAnswer(new Answer(sourceCode, appBe.getCode(), "LNK_AGENT", value));
						}
					}
				} else {
					BaseEntity appBe = beUtils.getBaseEntityByCode(linkedApps);
					System.out.println("appBe  :: " + appBe);
					if (appBe != null) {
							beUtils.saveAnswer(new Answer(sourceCode, appBe.getCode(), "LNK_AGENT", value));
						}
				}
			} else {
				System.out.println("No linked applications to save LNK_AGENT against");		
				
				QCmdMessage msg = new QCmdMessage("TOAST", "INFO");
				msg.setMessage("FYI: This Intern has no linked Applications to save this Agent against");
				msg.setToken(beUtils.getGennyToken().getToken());
				msg.setSend(true);
				VertxUtils.writeMsg("webcmds", msg);
			}
		}
end
