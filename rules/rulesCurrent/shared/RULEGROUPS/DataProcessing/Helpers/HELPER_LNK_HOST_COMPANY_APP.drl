package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;


import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_HOST_COMPANY_APP"
	ruleflow-group 'DataProcessing'
			salience 6000
			no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_HOST_COMPANY" && targetCode matches "APP_.*")
		answersToSave : Answers()
		ruleDetails : RuleDetails()
		output : OutputParam( )
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println("HELPER_LNK_HOST_COMPANY_APP fired");
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Filtering Internships linked to specific hostCompany : " + answer );

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String hostCompanyCode = answer.getValue();
		System.out.println("hostCompanyCode :: " + hostCompanyCode);
		
		String code = hostCompanyCode.replace("\"", "").replace("[", "").replace("]", "");
		System.out.println("code  :: " + code);

		/* get the company baseentity */
		BaseEntity companyBe = beUtils.getBaseEntityByCode(code);

		if(companyBe != null){

			/* get the name attribute of the company */
			String name = companyBe.getValue("PRI_NAME", null);		

			/* save the company's name as PRI_ASSOC_HC attribute for application baseentity */
			Answer assocHcAnswer = new Answer(sourceCode, targetCode, "PRI_ASSOC_HC", name);
			answersToSave.add(assocHcAnswer);

		}

		/* set the LNK_INTERNSHIP attribute to empty string since LNK_HOST_COMPANY attribute is changed */
		Answer internshipAnswer = new Answer(sourceCode, targetCode, "LNK_INTERNSHIP", " ",false,true);
		answersToSave.add(internshipAnswer);
		answersToSave.add(answer);

		/*update(answersToSave);*/
		
		/* dropdown search here For internship */
		DropdownUtils dropdownInternship = new DropdownUtils(serviceToken);
		dropdownInternship.setNewSearch("Internship Dropdown", "Fetch Internship Dropdown Items")
											/* Sorts */
											.addSort("PRI_NAME","Name",SearchEntity.Sort.ASC)

											/* Filters */
											.addFilter("PRI_IS_INTERNSHIP", true)
											.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "BEG_%")
											.addFilter("PRI_STATUS", SearchEntity.StringFilter.EQUAL, "ACTIVE")
											.addFilter("LNK_HOST_COMPANY", SearchEntity.StringFilter.EQUAL, hostCompanyCode)
											.addFilter("PRI_ADDRESS_STATE", SearchEntity.StringFilter.LIKE, "%")
											.addFilter("PRI_ASSOC_INDUSTRY", SearchEntity.StringFilter.LIKE, "%")
											
												/* Table Columns */
											.addColumn("PRI_IMAGE_URL", "Company Logo")
											.addColumn("PRI_NAME", "Name")
											.addColumn("PRI_STATUS", "Status")
											.addColumn("PRI_ASSOC_HC", "Host Company")
											.addColumn("PRI_ADDRESS_FULL", "Address")
											.addColumn("PRI_INTERNSHIP_START_DATE", "Proposed Start Date")
											.addColumn("PRI_ASSOC_INDUSTRY", "Industry")
											.setPageStart(0)
											.setPageSize(1000);
		
		/* Send the dropdown options */
		dropdownInternship.sendSearchResults("GRP_INTERNSHIP_SELECTION", "LNK_ITEM", "ITEM", true, false, userToken, false);
		
		/*retract(answer);*/

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		/*update(output);*/
end
