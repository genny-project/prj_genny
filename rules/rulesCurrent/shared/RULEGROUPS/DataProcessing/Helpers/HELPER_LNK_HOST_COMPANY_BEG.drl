package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_HOST_COMPANY_BEG"
	ruleflow-group 'DataProcessing'
	salience 6000
	no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_HOST_COMPANY" && targetCode matches "BEG_.*")
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println(drools.getRule().getName() + " triggered");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);
		
		String code = beUtils.cleanUpAttributeValue(value);
		System.out.println("code  :: " + code);

		BaseEntity companyBe = beUtils.getBaseEntityByCode(code);
		
		/* dropdown search here For companyRep */
		DropdownUtils dropdown = new DropdownUtils(serviceToken);
		dropdown.setNewSearch("HCR Dropdown", "Fetch HCR Dropdown Items")
											/* Sorts */
											.addSort("PRI_NAME","Name",SearchEntity.Sort.ASC)
											.addSort("PRI_STATUS","Status",SearchEntity.Sort.ASC)
											.addSort("PRI_ASSOC_HC","Company",SearchEntity.Sort.ASC)

											/* Filters */
											.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "PER_%")
											.addFilter("PRI_IS_HOST_CPY_REP", true)
											.addFilter("PRI_STATUS", SearchEntity.StringFilter.EQUAL, "ACTIVE")
											.addFilter("LNK_HOST_COMPANY", SearchEntity.StringFilter.EQUAL, value)
											.setPageStart(0)
											.setPageSize(1000);

		/* Send the dropdown options */
		dropdown.sendSearchResults("GRP_HOST_COMPANY_REP_SELECTION", "LNK_ITEM", "ITEM", true, false, userToken, false);

		List<Answer> answers = new ArrayList<Answer>();

		String name = companyBe.getValue("PRI_NAME", null);
		Answer assocHcAnswer = new Answer(sourceCode, targetCode, "PRI_ASSOC_HC", name, false, true);
		answers.add(assocHcAnswer);

		String cpyImage = companyBe.getValue("PRI_IMAGE_URL",null);
		Answer imageAnswer = new Answer(sourceCode, targetCode, "PRI_IMAGE_URL", cpyImage, false, true);
		answers.add(imageAnswer);

		Double latitude = companyBe.getValue("PRI_ADDRESS_LATITUDE",null);
		Answer latitudeAnswer = new Answer(sourceCode, targetCode, "PRI_ADDRESS_LATITUDE", latitude, false, true);
		answers.add(latitudeAnswer);
		
		Double longitude = companyBe.getValue("PRI_ADDRESS_LONGITUDE",null);
		Answer longitudeAnswer = new Answer(sourceCode, targetCode, "PRI_ADDRESS_LONGITUDE", longitude, false, true);
		answers.add(longitudeAnswer);

		String address = companyBe.getValue("PRI_ADDRESS_FULL", null);
		Answer addressAnswer = new Answer(sourceCode, targetCode, "PRI_ADDRESS_FULL", address, false, true);
		answers.add(addressAnswer);

		VertxUtils.sendToFrontEnd(userToken, assocHcAnswer, imageAnswer, latitudeAnswer, longitudeAnswer, addressAnswer);
			
		String country = companyBe.getValue("PRI_ADDRESS_COUNTRY", null);
		if(country != null) answers.add(new Answer(sourceCode, targetCode, "PRI_ADDRESS_COUNTRY", country, false, true));
			
		String postcode = companyBe.getValue("PRI_ADDRESS_POSTCODE", null);	
		if(postcode != null) answers.add(new Answer(sourceCode, targetCode, "PRI_ADDRESS_POSTCODE", postcode, false, true));
		
		String suburb = companyBe.getValue("PRI_ADDRESS_SUBURB", null);
		if(suburb != null) answers.add(new Answer(sourceCode, targetCode, "PRI_ADDRESS_SUBURB", suburb, false, true));
			
		String city = companyBe.getValue("PRI_ADDRESS_CITY", null);	
		if(city != null) answers.add(new Answer(sourceCode, targetCode, "PRI_ADDRESS_CITY", city, false, true));
		
		String state = companyBe.getValue("PRI_ADDRESS_STATE", null);
		if(state != null) answers.add(new Answer(sourceCode, targetCode, "PRI_ADDRESS_STATE", state, false, true));

		BaseEntity targetBe = beUtils.getBaseEntityByCode(targetCode);
		if(targetBe != null){
			String rep = targetBe.getValue("LNK_HOST_COMPANY_REP", null);
			if(rep != null){
				Answer repAnswer = new Answer(sourceCode, targetCode, "LNK_HOST_COMPANY_REP", "",false,true);
				Answer assocHcrAnswer = new Answer(sourceCode, targetCode, "PRI_ASSOC_HCR", "",false,true);
				beUtils.removeEntityAttribute(targetBe,"LNK_HOST_COMPANY_REP");
				beUtils.removeEntityAttribute(targetBe,"PRI_ASSOC_HCR");
				VertxUtils.sendToFrontEnd(userToken, repAnswer, assocHcrAnswer);
			}

			String internSupervisor = targetBe.getValue("LNK_INTERN_SUPERVISOR", null);
			if(internSupervisor != null){
				Answer supervisorAnswer = new Answer(sourceCode, targetCode, "LNK_INTERN_SUPERVISOR", "",false,true);
				Answer assocSupervisorAnswer = new Answer(sourceCode, targetCode, "PRI_ASSOC_SUPERVISOR", "",false,true);
				Answer assocSupervisorNameAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_NAME", "",false,true);
				Answer assocSupervisorMobileAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_MOBILE", "",false,true);
				Answer assocSupervisorEmailAnswer = new Answer(sourceCode, targetCode, "PRI_SUPER_EMAIL", "",false,true);

				beUtils.removeEntityAttribute(targetBe,"LNK_INTERN_SUPERVISOR");
				beUtils.removeEntityAttribute(targetBe,"PRI_ASSOC_SUPERVISOR");
				beUtils.removeEntityAttribute(targetBe,"PRI_SUPER_NAME");
				beUtils.removeEntityAttribute(targetBe,"PRI_SUPER_MOBILE");
				beUtils.removeEntityAttribute(targetBe,"PRI_SUPER_EMAIL");
				VertxUtils.sendToFrontEnd(userToken, supervisorAnswer, assocSupervisorAnswer, assocSupervisorNameAnswer, assocSupervisorMobileAnswer, assocSupervisorEmailAnswer);
			}
		}

		beUtils.saveAnswers(answers);
end
