package life.genny.rules;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.utils.TaskUtils;
import java.util.List;
import java.util.ArrayList;
import life.genny.utils.QuestionUtils;

rule "HELPER_LNK_SELECT_COUNTRY_ABN"
	ruleflow-group 'DataProcessing'
	salience 6000
	no-loop true
	when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		answer : Answer( attributeCode == "PRI_ADDRESS_FULL" && ( targetCode.startsWith("CPY_") ) )
		beUtils : BaseEntityUtils()

	then
		System.out.println(drools.getRule().getName()+": Rule fired");
 		
		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);

		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		

		/* Parse json answer and get values of country */

		JsonObject addressDataJson = null;
			try {
				addressDataJson = new JsonObject(answer.getValue());

				String countryCode = addressDataJson.getString("country");
				boolean isAbnEnabled = false;
				if (countryCode.equalsIgnoreCase("AUSTRALIA")) {
					/* if the country is Australia, enable the abn questions */
					isAbnEnabled = true;
				}
				QDataAskMessage askMsg = QuestionUtils.getAsks(userToken.getRealm(),userToken.getUserCode(), targetCode, "QUE_HOST_CPY_GRP", userToken);

				if (askMsg != null) {
					/* SET REPLACE TRUE */
					for (Ask ask : askMsg.getItems()[0].getChildAsks()) {
						if (ask.getQuestionCode().equals("QUE_SPECIFY_ABN") || ask.getQuestionCode().equals("QUE_COMPANY_ABN")) {
							
							/* Enable / Disable and send the ask */
							System.out.println("Setting ABN field to   ::   " + isAbnEnabled);
							TaskUtils.enableTaskQuestion(ask, isAbnEnabled, userToken);

							/* Remove PRI_ABN and LNK_SPECIFY_ABN if user toggles the country dropdown */
							BaseEntity be = beUtils.getBaseEntityByCode(targetCode);
							if(be != null){
								beUtils.removeEntityAttribute(be, "PRI_ABN");
								beUtils.removeEntityAttribute(be, "LNK_SPECIFY_ABN");

								Answer abnAns = new Answer(sourceCode, targetCode, "PRI_ABN", "");
								Answer specifyAbnAns = new Answer(sourceCode, targetCode, "LNK_SPECIFY_ABN", "");
								
								VertxUtils.sendToFrontEnd(userToken, abnAns, specifyAbnAns);
							}
						}	
					}
				} else {
					System.out.println("Could not fetch ask from cache: QUE_HOST_CPY_GRP"); 
				}

			} catch (Exception e) {
				System.out.println("BAD JSON => "+answer.getValue());
			}
		
end