package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.attribute.Attribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.time.format.DateTimeFormatter;


import java.util.List;
import java.util.ArrayList;

rule "HELPER_SIGNATURE_DATE"
	ruleflow-group 'DataProcessing'
			salience 6000
	when
		beUtils : BaseEntityUtils()
		answerTwo : Answer( attributeCode == "PRI_AGR_DOC_INT_SIGNATURE" 
						|| attributeCode == "PRI_AGR_DOC_HC_SIGNATURE" 
						|| attributeCode == "PRI_AGR_DOC_OUTCOME_SIGNATURE" 
						|| attributeCode == "PRI_HCS_AGR_SIGNATURE"
						|| attributeCode == "PRI_OHS_SIGNATURE")
		answersToSave : Answers()
		ruleDetails : RuleDetails()
		output : OutputParam( )
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println("HELPER_SIGNATURE_DATE fired");
		
		/* Save the actual AGREEMENT_SIGNATURE answer */
		
		/* answersToSave.add(answerTwo); */
		beUtils.saveAnswer(answerTwo);
		
		String sourceCode = beUtils.getGennyToken().getUserCode();	
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answerTwo.getTargetCode();					
		System.out.println("targetCode :: " + targetCode);
		
		String attributeCode = answerTwo.getAttributeCode();			
		System.out.println("attributeCode :: " + attributeCode);
		
		String value = answerTwo.getValue();
		System.out.println("value :: " + value);		
		
		/* Select Type */
		String type = "EMPTY";
		
		switch (attributeCode) {
			case "PRI_OHS_SIGNATURE":
				type = "PRI_OHS_SIGNING_DATE"; 
				System.out.println("attributeCode - PRI_OHS_ :: " + attributeCode);
			break;
			
			case "PRI_HCS_AGR_SIGNATURE":
				type = "PRI_HCS_AGR_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_HC_SERVICES :: " + attributeCode);
			break;
			
			case "PRI_AGR_DOC_INT_SIGNATURE":
				type = "PRI_AGR_DOC_INT_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_INTERN :: " + attributeCode);
			break;
			
			case "PRI_AGR_DOC_HC_SIGNATURE":
				type = "PRI_AGR_DOC_HC_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_HOST_CPY_REP :: " + attributeCode);
			break;
			
			case "PRI_AGR_DOC_OUTCOME_SIGNATURE":
				type = "PRI_AGR_DOC_OUTCOME_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_OUTCOME :: " + attributeCode);
			break;
		}
		
		/*
		if (attributeCode.startsWith("PRI_HCS_AGR_")) {
				type = "PRI_AGR_DOC_HC_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_HOST_CPY_REP :: " + attributeCode);
	
		} else if (attributeCode.startsWith("PRI_OHS_")){
				type = "PRI_OHS_SIGNING_DATE"; 
				System.out.println("attributeCode - PRI_OHS_ :: " + attributeCode);
		} else {
			System.out.println("ERROR: startsWith failed - attributeCode: "+ attributeCode);	
		}
	
		
		
		if (attributeCode.startsWith("PRI_AGR_DOC_INT_")) {
				type = "PRI_AGR_DOC_INT_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_INTERN :: " + attributeCode);
				
		} else if (attributeCode.startsWith("PRI_AGR_DOC_HC_")) {
				type = "PRI_AGR_DOC_HC_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_HOST_CPY_REP :: " + attributeCode);
	
		} else if (attributeCode.startsWith("PRI_AGR_DOC_OUTCOME_")) {
				type = "PRI_AGR_DOC_OUTCOME_SIGN_DATE"; 
				System.out.println("attributeCode - PRI_OUTCOME :: " + attributeCode);
		
		} else {
			System.out.println("ERROR: startsWith failed - attributeCode: "+ attributeCode);	
		}
		*/
		System.out.println("type :: " + type);	
		
		
		
		/* Do the Date stuff */	
		
		DateTimeFormatter dtf1 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
		LocalDate now = LocalDate.now();
		String date = dtf1.format(now);
		System.out.println("date: " +date);
		
		
		/* Save Answer */
				
		BaseEntity targetBe = beUtils.getBaseEntityByCode(targetCode);
		System.out.println("targetBe: " + targetBe);
		
		if (targetBe != null) {		
				beUtils.saveAnswer(new Answer(sourceCode, targetCode, type, now));
				System.out.println("Saving Date: " +date);	
		
		} else {
			System.out.println("ERROR: Null targetBe");
		}
		
		targetBe = beUtils.getBaseEntityByCode(targetCode);
		
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(targetBe);
		msg.setToken(userToken.getToken());
		msg.setReplace(true);
		VertxUtils.writeMsg("webcmds", JsonUtils.toJson(msg));
		
		
		/* Dont display anything new */
		
		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  
end
