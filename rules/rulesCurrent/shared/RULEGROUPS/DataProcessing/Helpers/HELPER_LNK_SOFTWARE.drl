package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.util.UUID;

import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_SOFTWARE"
	ruleflow-group 'DataProcessing'
	salience 5000
	no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_SOFTWARE" || attributeCode == "LNK_CURRENT_SOFTWARE" || attributeCode == "LNK_FUTURE_SOFTWARE" )
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println(drools.getRule().getName() + " fired");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);
		
		if(value != null){

			/* list to store softwares */
			List<String> softwareList = new ArrayList<>();
			List<BaseEntity> softwareBes = new ArrayList<BaseEntity>();

			String codes = beUtils.cleanUpAttributeValue(value);
			
			for (String code : codes.split(",")) {
				if(code.startsWith("NEW_")){
					/* it is a new software */
					/* 
						- remove NEW keyword ✅
						- get the user typed software name ✅
						- create be ✅
						- save PRI_NAME ✅
						- replace NEW with SEL in codes or value ✅
						- softwareList.add(new software's name) ✅
						- send this new SEL using search and send to frontend
					 */
					String softwareName= code.substring(4).toLowerCase();
					String softwareCode = "SEL_SOFTWARE_" + UUID.randomUUID().toString().toUpperCase();
					
					/* create BE */
					BaseEntity software = beUtils.create(softwareCode, softwareName);

					if(software != null){
						/* save the software name */
						beUtils.saveAnswer(new Answer(beUtils.getGennyToken().getUserCode(), software.getCode(), "PRI_NAME", softwareName));

						/* get the update be */
						software = beUtils.getBaseEntityByCode(softwareCode);
						
						/* add to the list */
						softwareBes.add(software);

						/* replace NEW with SEL code in codes and value*/
						System.out.println("before codes :: " + codes);
						codes.replace(code, software.getCode());
						System.out.println("after codes :: " + codes);
						
						System.out.println("before value :: " + value);
						value.replace(code, software.getCode());
						System.out.println("after value :: " + value);
						
						/* add to the software list */
						System.out.println("before softwareList :: " + softwareList);
						softwareList.add(softwareName);
						System.out.println("after softwareList :: " + softwareList);
					}
				}else{
					BaseEntity be = beUtils.getBaseEntityByCode(code);
					if(be != null){
						String name = be.getValue("PRI_NAME", null);		
						if(name != null) softwareList.add(name);
					}
				}
			}

			System.out.println("softwareBes size :: " + softwareBes.size());
			if(softwareBes.size()>0){
				QDataBaseEntityMessage msg = new QDataBaseEntityMessage(softwareBes);
				msg.setToken(userToken.getToken());
				msg.setParentCode("GRP_SOFTWARES");
				String json = JsonUtils.toJson(msg);
				VertxUtils.writeMsg("webcmds", json);
			}

			/* The last two replace statements ensure spaces between items */
			String softwares = softwareList.toString().replaceAll("[\\[\\](){}]","").replace(",",", ").replaceAll("\\s+"," ");
			String attributeCode = "PRI_SOFTWARE";

			if (answer.getAttributeCode().equals("LNK_CURRENT_SOFTWARE")) {
				attributeCode = "PRI_ASSOC_CURRENT_SOFTWARE";
			} else if (answer.getAttributeCode().equals("LNK_FUTURE_SOFTWARE")) {
				attributeCode = "PRI_ASSOC_FUTURE_SOFTWARE";
			} else if (answer.getAttributeCode().equals("LNK_SOFTWARE")) {
				attributeCode = "PRI_SOFTWARE";
			}
			System.out.println("attributeCode :: " + attributeCode);
			
			Answer softwaresAnswer = new Answer(sourceCode, targetCode, attributeCode, softwares,false,true);
			beUtils.saveAnswer(softwaresAnswer);
			VertxUtils.sendToFrontEnd(userToken, softwaresAnswer);
		}
end