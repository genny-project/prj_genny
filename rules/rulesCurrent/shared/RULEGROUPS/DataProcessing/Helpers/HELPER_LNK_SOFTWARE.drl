package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;


import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_SOFTWARE"
	ruleflow-group 'DataProcessing'
	salience 5000
	no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_SOFTWARE" || attributeCode == "LNK_CURRENT_SOFTWARE" || attributeCode == "LNK_FUTURE_SOFTWARE" )
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println(drools.getRule().getName() + " fired");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);
		
		if(value != null){

			/* list to store softwares */
			List<String> softwareList = new ArrayList<>();
			String codes = beUtils.cleanUpAttributeValue(value);
			
			for (String code : codes.split(",")) {
				BaseEntity be = beUtils.getBaseEntityByCode(code);
				if(be != null){
					String name = be.getValue("PRI_NAME", null);		
					if(name != null) softwareList.add(name);
				}
			}

			String softwares = softwareList.toString().replaceAll("[\\[\\](){}]","");
			String attributeCode = "PRI_SOFTWARE";

			if (answer.getAttributeCode().equals("LNK_CURRENT_SOFTWARE")) {
				attributeCode = "PRI_ASSOC_CURRENT_SOFTWARE";
			} else if (answer.getAttributeCode().equals("LNK_FUTURE_SOFTWARE")) {
				attributeCode = "PRI_ASSOC_FUTURE_SOFTWARE";
			}

			Answer softwaresAnswer = new Answer(sourceCode, targetCode, attributeCode, softwares,false,true);
			beUtils.saveAnswer(softwaresAnswer);
			VertxUtils.sendToFrontEnd(userToken, softwaresAnswer);
		}
end
