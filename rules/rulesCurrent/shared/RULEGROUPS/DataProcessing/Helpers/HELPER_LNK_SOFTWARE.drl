package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;


import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_SOFTWARE"
	ruleflow-group 'DataProcessing'
	salience 5000
	no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_SOFTWARE" || attributeCode == "LNK_CURRENT_SOFTWARE" || attributeCode == "LNK_FUTURE_SOFTWARE" )
		answersToSave : Answers()
		ruleDetails : RuleDetails()
		output : OutputParam( )
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println(drools.getRule().getName() + " fired");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String assocBeCode = answer.getValue();
		System.out.println("assocBeCode :: " + assocBeCode);

		/* Save the actual answer */
		answersToSave.add(answer);

		/* list to store softwareList */
		List<String> softwareList = new ArrayList<>();
		
		if(assocBeCode != null){

			String code = assocBeCode.replace("\"", "").replace("[", "").replace("]", "");
			System.out.println("code  :: " + code);

			for (String softwareCode : code.split(",")) {
			
				System.out.println("softwareCode :: " + softwareCode);

				/* get the associatedBe */
				BaseEntity associatedBe = beUtils.getBaseEntityByCode(softwareCode);

				/* get the name attribute of the associatedBe */
				String name = associatedBe.getValue("PRI_NAME", null);		
				softwareList.add(name);

			}

			String softwares = softwareList.toString().replaceAll("[\\[\\](){}]","");
			
			String saveAttribute = "PRI_SOFTWARE";

			if (answer.getAttributeCode().equals("LNK_CURRENT_SOFTWARE")) {
				saveAttribute = "PRI_ASSOC_CURRENT_SOFTWARE";
			} else if (answer.getAttributeCode().equals("LNK_FUTURE_SOFTWARE")) {
				saveAttribute = "PRI_ASSOC_FUTURE_SOFTWARE";
			}

			Answer softwaresAnswer = new Answer(sourceCode, targetCode, saveAttribute, softwares,false,true);
			answersToSave.add(softwaresAnswer);

			VertxUtils.sendToFrontEnd(userToken, softwaresAnswer);
		}
 		
		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
end
