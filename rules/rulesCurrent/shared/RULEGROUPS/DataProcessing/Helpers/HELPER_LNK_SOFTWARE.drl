package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_INTERNSHIPS"
	ruleflow-group 'GenerateSearches'
	no-loop true
	when
		not  SearchEntity (code == "SBE_INTERNSHIPS")
		serviceToken : GennyToken( code == "PER_SERVICE")
	then
		System.out.println("   Generate "+drools.getRule().getName() );
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);

		SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Internships")
			/* Sorts */
			.addSort("PRI_NAME","Title",SearchEntity.Sort.ASC)
			/* .addSort("PRI_STATUS","Status",SearchEntity.Sort.ASC) */
			/* .addSort("PRI_ASSOC_INDUSTRY","Industry",SearchEntity.Sort.ASC) */
			/* .addSort("PRI_ASSOC_HC","Host Company",SearchEntity.Sort.ASC) */
			/* .addSort("PRI_INTERNSHIP_START_DATE","Start Date",SearchEntity.Sort.ASC) */
			
			/* Filters */
			.addFilter("PRI_IS_INTERNSHIP", true)
			.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "BEG_%")
			.addFilter("PRI_ADDRESS_STATE", SearchEntity.StringFilter.LIKE, "%")
			.addFilter("PRI_ASSOC_INDUSTRY", SearchEntity.StringFilter.LIKE, "%")
			
			/* Table Columns */
			.addColumn("PRI_IMAGE_URL", "Company Logo")
			.addColumn("PRI_NAME", "Title")
			.addColumn("PRI_CREATED_DATE", "Date Created")
			.addColumn("PRI_STATUS", "Status")
			.addColumn("PRI_ASSOC_HC", "Host Company")
			.addColumn("PRI_ADDRESS_FULL", "Address")
			.addColumn("PRI_ADDRESS_STATE", "State")
			.addColumn("PRI_ADDRESS_COUNTRY", "Country")
			.addColumn("PRI_INTERNSHIP_START_DATE", "Proposed Start Date")
			.addColumn("PRI_ASSOC_INDUSTRY", "Industry")
			.addColumn("PRI_NO_OF_INTERNS", "Number of allowed Interns")
			.addColumn("PRI_SOFTWARE", "Software")

			/* Filterable Columns */
			.addFilterableColumn("PRI_NAME", "Title")
			.addFilterableColumn("PRI_STATUS", "Status")
			.addFilterableColumn("PRI_ASSOC_INDUSTRY", "Industry")
			.addFilterableColumn("PRI_ASSOC_HC", "Host Company")
			.addFilterableColumn("PRI_INTERNSHIP_START_DATE", "Start Date")
			.addFilterableColumn("PRI_ADDRESS_STATE", "State")
			.addFilterableColumn("PRI_ADDRESS_COUNTRY", "Country")
			
			/* Row Actions */
			.addAction("PRI_EVENT_VIEW", "View")

			/* Table Actions */
			.addSearchAction("PRI_EVENT_MAP_VIEW", "Map View")

			.setPageStart(0).setPageSize(GennySettings.defaultPageSize);

		searchBE.setRealm(serviceToken.getRealm());
		insert(searchBE);
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());
end
