package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;


import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_INTERVIEW_TYPE"
	ruleflow-group 'DataProcessing'
			salience 5000
			no-loop
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_INTERVIEW_TYPE" )
		answersToSave : Answers()
		ruleDetails : RuleDetails()
		output : OutputParam( )
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println(drools.getRule().getName() + " fired");

		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String eduProviderCode = answer.getValue();
		System.out.println("eduProviderCode :: " + eduProviderCode);
		
		if(eduProviderCode != null){

			String code = eduProviderCode.replace("\"", "").replace("[", "").replace("]", "");
			System.out.println("code  :: " + code);

			/* Save the actual LNK_INTERVIEW_TYPE answer */
			answersToSave.add(answer);

			/* get the company baseentity */
			BaseEntity associatedBe = beUtils.getBaseEntityByCode(code);

			if(associatedBe != null ){
				/* get the name attribute of the company */
				String name = associatedBe.getValue("PRI_NAME", null);		

				if(name != null){
					/* save the company's name as PRI_INTERVIEW_TYPE attribute for application baseentity */
					Answer assocAnswer = new Answer(sourceCode, targetCode, "PRI_INTERVIEW_TYPE", name,false,true);
					answersToSave.add(assocAnswer);
					
					VertxUtils.sendToFrontEnd(userToken, assocAnswer);
				}
			}
		}
 		
 	/*	update(answersToSave);	
		retract(answer); */

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		/* update(output); */
end
