package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import com.google.gson.reflect.TypeToken;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.utils.VertxUtils;
import life.genny.utils.TableUtils;
import life.genny.models.TableData;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.Ask;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.OutputParam;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;
import life.genny.models.BaseEntityImport;
import io.vavr.Tuple;
import io.vavr.Tuple2;
import life.genny.utils.ImportUtils;
import life.genny.qwanda.datatype.Allowed;
import life.genny.utils.CapabilityUtils;
import java.util.UUID;



rule "PRI_SEARCH_TEXT_SAVE_ANSWER"
    ruleflow-group 'DataProcessing'
        salience 5000
        no-loop true
    when
 	  beUtils : BaseEntityUtils()
 	  allowed : Allowed(code == "TEST" || code == "SUPERUSER" || code == "DEV")
	  answer : Answer( attributeCode == "PRI_SEARCH_TEXT" && (value.startsWith("!saveanswer:")) )
	  serviceToken : GennyToken (code == "PER_SERVICE")
	  userToken : GennyToken( code != "PER_SERVICE")
	  output : OutputParam( )
    then
  		System.out.println("Rule -> "+drools.getRule().getName()+" :  user=" + beUtils.getGennyToken().getUserCode()+" : "+answer);
   		retract(answer);

   		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);


		/* saveanswer:PER_XXX:PRI_STATUS:APPLIED */

		String[] split = answer.getValue().split(":");

		String targetCode = "";
		String attribute = "";
		String input = "";

		if (split.length == 4) {
			targetCode = split[1].trim();
			attribute = split[2].trim();
			input = split[3].trim();

			System.out.println("targetCode :: " + targetCode);
			System.out.println("attribute :: " + attribute);
			System.out.println("input :: " + input);

			if (input.equals("empty")) {
				Answer saveThisAnswer = new Answer(sourceCode, targetCode, attribute, null);
				beUtils.saveAnswer(saveThisAnswer);
				System.out.println("Saved Empty Answer!!");

			} else if (targetCode != null && attribute != null && input != null) {
				Answer saveThisAnswer = new Answer(sourceCode, targetCode, attribute, input);
				beUtils.saveAnswer(saveThisAnswer);
				System.out.println("Saved Answer!!");

			} else {
				System.out.println("One of your dudes was null");
			}
		} else {
			System.out.println("length was incorrect for saveanswser: " +split.length);
		}


		output.setTypeOfResult("NO_PROCESSING");
  	    output.setResultCode("NONE");  /* dont display anything new */


end