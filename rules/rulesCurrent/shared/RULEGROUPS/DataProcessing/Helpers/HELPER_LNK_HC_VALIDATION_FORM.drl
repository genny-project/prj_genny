package life.genny.rules;

import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.StringUtils;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.io.UnsupportedEncodingException;
import life.genny.utils.DropdownUtils;
import java.util.List;
import java.util.ArrayList;

rule "HELPER_LNK_HC_VALIDATION_FORM"
	ruleflow-group 'DataProcessing'
	salience 5000
	when
		beUtils : BaseEntityUtils()
		answer : Answer( attributeCode == "LNK_TYPE_ENVIRO" || attributeCode == "LNK_ORGANISED" || attributeCode == "LNK_VENTILATED"
							|| attributeCode == "LNK_DESK_AREA" || attributeCode == "LNK_AMENITIES" || attributeCode == "LNK_WALKWAYS"
							|| attributeCode == "LNK_EVIDENCE" || attributeCode == "LNK_TERMS" || attributeCode == "LNK_SITE_INSPECTION")
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")

	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		String sourceCode = beUtils.getGennyToken().getUserCode();
		System.out.println("sourceCode :: " + sourceCode);
		
		String targetCode = answer.getTargetCode();
		System.out.println("targetCode :: " + targetCode);
		
		String value = answer.getValue();
		System.out.println("value :: " + value);
		
		String code = beUtils.cleanUpAttributeValue(value);
		System.out.println("code  :: " + code);

		BaseEntity be = beUtils.getBaseEntityByCode(code);
		if(be != null){
			String name = be.getValue("PRI_NAME", null);		
			if(name != null){
				/* replaces all occurrences of "LNK" to "PRI" */
				String saveAttributeName = code.replace("LNK","PRI");  
				Answer answer = new Answer(sourceCode, targetCode, saveAttributeName , name);
				beUtils.saveAnswer(answer);
				VertxUtils.sendToFrontEnd(userToken, answer);
			}
		}
end




