package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.text.WordUtils;
import org.apache.commons.lang3.StringUtils;

import java.util.List;
import java.util.ArrayList;

rule "PRI_FIRSTNAME"
	ruleflow-group 'DataProcessing'
	salience 10000 
	no-loop
	when
		beUtils : BaseEntityUtils()
	  serviceToken : GennyToken( code == "PER_SERVICE") 
	  answer : Answer( attributeCode == "PRI_FIRSTNAME" )
	  answersToSave : Answers()
	  output : OutputParam( )
		userToken : GennyToken( code != "PER_SERVICE")

	then
 		System.out.println("Rule -> "+drools.getRule().getName()+" :  user=" + beUtils.getGennyToken().getUserCode()+" : "+answer); 
		String sourceCode = beUtils.getGennyToken().getUserCode();
		String targetCode = answer.getTargetCode();
		
		/* Parse json answer and save the individual answers */
		String firstname = answer.getValue();
		firstname = firstname.toLowerCase().trim();
		firstname = WordUtils.capitalize(firstname);
					
		answersToSave.add(new Answer(sourceCode, targetCode, "PRI_FIRSTNAME", firstname,false,false));	
			
		BaseEntity person = beUtils.getBaseEntityByCode(targetCode);
		String lastname = person.getValue("PRI_LASTNAME","");
			
		String name = firstname  + " "+lastname;
		name = name.trim();	
			
		String initials = 	WordUtils.initials(name).toUpperCase();
		
	
		Answer answerName = new Answer(sourceCode,targetCode,"PRI_NAME",name);
 		beUtils.saveAnswer(answerName);
		Answer answerInitials = new Answer(sourceCode,targetCode,"PRI_INITIALS",initials);
 		beUtils.saveAnswer(answerInitials);
		
		VertxUtils.sendToFrontEnd(userToken, answerName);

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
	
		retract(answer); 
		update(answersToSave);
	
end
