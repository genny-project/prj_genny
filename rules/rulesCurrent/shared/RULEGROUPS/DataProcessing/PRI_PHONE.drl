package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;


import java.util.List;
import java.util.ArrayList;

rule "PRI_PHONE"
    ruleflow-group 'DataProcessing'
        salience 500 
    when
      beUtils : BaseEntityUtils()
	  serviceToken : GennyToken( code == "PER_SERVICE") 
	  answer : Answer( attributeCode == "PRI_MOBILE" || attributeCode == "PRI_LANDLINE" ||  attributeCode == "PRI_PHONE"  || attributeCode == "PRI_FAX" ||  attributeCode == "PRI_PHONE_ADDITIONAL" )
	  answersToSave : Answers()
	  ruleDetails : RuleDetails()
	  output : OutputParam( )
     then
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing Answer/Data : " + answer );
		String sourceCode = beUtils.getGennyToken().getUserCode();
		String targetCode = answer.getTargetCode();
		
		/* Parse json answer and save the individual answers */
					
			String phonenumber = answer.getValue();
			/* convert to E164 */
			
			if (phonenumber != null) {
				/* remove all non digits */
				phonenumber  = phonenumber.replaceAll("[^\\d]", "");
				if (!phonenumber.startsWith("+")) {
					if (phonenumber.startsWith("0")) {
						phonenumber = "61"+phonenumber.substring(1); /* remove the 0  and assume Australian*/
					}
				}
				phonenumber = StringUtils.deleteWhitespace(answer.getValue());
				System.out.println(ruleDetails+" "+drools.getRule().getName()+" Raw Phone number is "+answer.getValue()+" , fixed number is "+phonenumber);
				
				
				if (QwandaUtils.checkPhone(phonenumber)) {
							/* Now check if it is an Australian mobile */
					if ((phonenumber.startsWith("614"))|| (phonenumber.startsWith("615"))) {
						Answer mobile = new Answer(answer.getSourceCode(),answer.getTargetCode(),"PRI_MOBILE",phonenumber,false,true);
						answersToSave.add(mobile);
					} else {
						Answer landline = new Answer(answer.getSourceCode(),answer.getTargetCode(),"PRI_LANDLINE",phonenumber,false,true);
						landline.setChangeEvent(false); /* no attribute change */
						answersToSave.add(landline);			
					}
				} else {
					String message = "Phone number is invalid ! (check number of digits)";
					System.out.println(message);
					Answer feedbackAnswer = new Answer(answer.getSourceCode(),answer.getTargetCode(),answer.getAttributeCode(),"");
					VertxUtils.sendFeedbackError(beUtils.getGennyToken(),feedbackAnswer,message);
					System.out.println("Sent error message back to frontend");		
				}
			} else {
					String message = "Phone number is empty!";
					System.out.println(message);
					Answer feedbackAnswer = new Answer(answer.getSourceCode(),answer.getTargetCode(),answer.getAttributeCode(),"");
					VertxUtils.sendFeedbackError(beUtils.getGennyToken(),feedbackAnswer,message);
					System.out.println("Sent error message back to frontend");		
			}
		
			

/* Watch out TODO , this may override other answers */
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */

		retract(answer);
		update(answersToSave);
	
end
