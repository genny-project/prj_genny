package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;

rule "PROCESS_ANSWERS"
    ruleflow-group 'DataProcessing'
     salience 10000
    when
	  userToken : GennyToken ( code != "PER_SERVICE" ) 
	  serviceToken : GennyToken ( code == "PER_SERVICE" ) 
	  dataMsg : QDataAnswerMessage( (items != null) && (items.length > 0) )
	  dom : OutputParamTreeSet()
    then
 		System.out.println("Rule -> PROCESS_ANSWERS Processing Answer/Data!! :  user=" + userToken.getUserCode()); 
 		System.out.println("dom = "+dom);

		BaseEntityUtils beUtils = new BaseEntityUtils(userToken); 
		beUtils.setServiceToken(serviceToken);
		System.out.println("Process Answwers: beUtils created = ");
		insert(beUtils);
 		System.out.println("Process Answwers: beUtils inserted = ");
 		for (Answer answer : dataMsg.getItems()) {
 			answer.setInferred(false); /* force inference from the user to be off. This ensures that if this flag is set it is from internal */
 			insert(answer);
 		}
 		
 		retract(dataMsg); /* stop this rule from firing again */

end
