package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.attribute.AttributeText;

rule "LNK_FILTER_OPTION"
    ruleflow-group 'DataProcessing'
    salience 500 
    no-loop true
    when
		beUtils : BaseEntityUtils()
		serviceToken : GennyToken( code == "PER_SERVICE")
		answer : Answer( attributeCode == "LNK_FILTER_OPTION" && targetCode matches "SBE_.*" )
		output : OutputParam( )
		answersToSave : Answers()
	then
		System.out.println("Rule -> LNK_FILTER_OPTION : "+answer); 

		String targetCode = answer.getTargetCode();
		System.out.println("targetCode = " + targetCode);
		String value = answer.getValue();
		System.out.println("value = " + value);

		/* Fetch Search from Cache */
		SearchEntity searchBE = VertxUtils.getObject(serviceToken.getRealm(), "", targetCode, SearchEntity.class, serviceToken.getToken());

		/* Save the new filter items in cache */
		value = beUtils.cleanUpAttributeValue(value);
		System.out.println("clean value = " + value);

		/* Add Filter Column */
		AttributeText attributeFilterOption = new AttributeText("SCH_FILTER_OPTION", "Filter Option");
		searchBE.addAttribute(attributeFilterOption, 5.0, value);

		/* Update Search in Cache */
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */

		update(output);

end
