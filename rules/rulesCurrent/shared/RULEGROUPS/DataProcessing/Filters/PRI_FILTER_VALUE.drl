package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.attribute.AttributeText;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwandautils.JsonUtils;

rule "PRI_FILTER_VALUE"
    ruleflow-group 'DataProcessing'
    salience 500
    no-loop true
    when
		beUtils : BaseEntityUtils()
		serviceToken : GennyToken( code == "PER_SERVICE")
		userToken : GennyToken( code != "PER_SERVICE")
		answer : Answer(
			(
				attributeCode matches "PRI_FILTER_VALUE_.*" ||
				attributeCode == "LNK_SELECT_COUNTRY" ||
				attributeCode == "LNK_SELECT_STATE" ||
				attributeCode == "LNK_INTERNSHIP_TYPE" ||
				attributeCode == "LNK_COMP_INTERNSHIP" ||
				attributeCode == "LNK_DJP_JOB_AGREE"
			)
			&& targetCode matches "SBE_.*"
		)
		output : OutputParam( )
		answersToSave : Answers()
	then
		System.out.println("Rule -> PRI_FILTER_VALUE : "+answer);

		String targetCode = answer.getTargetCode();
		System.out.println("targetCode = " + targetCode);
		String attributeCode = answer.getAttributeCode();
		System.out.println("attributeCode = " + attributeCode);
		String value = answer.getValue();
		System.out.println("value = " + value);

		/* Get Asks from cache */
		Ask filterGrpAsk = VertxUtils.getObject(serviceToken.getRealm(), "", "QUE_FILTER_GRP_"+targetCode, Ask.class, serviceToken.getToken());

		/* Translate any dropdown items to text */
		if (attributeCode.startsWith("LNK_SELECT_") ||
		    attributeCode.equals("LNK_INTERNSHIP_TYPE") ||
		    attributeCode.equals("LNK_COMP_INTERNSHIP") ||
		    attributeCode.equals("LNK_DJP_JOB_AGREE")) {
			BaseEntity selectionEntity = beUtils.getBaseEntityByCode(beUtils.cleanUpAttributeValue(value));
			System.out.println("selectionEntity = " + selectionEntity);

			if (selectionEntity != null) {
				String selName = selectionEntity.getName();
                if (attributeCode.equals("LNK_COMP_INTERNSHIP")) {
                    String acronym = selectionEntity.getValue("PRI_ACRONYM", null);
                    if (acronym != null) {
                        value = acronym;
                    }
                } else {
                    if (selName != null) {
                        value = selName;
                    }
                }
                System.out.println("selName = " + selName);
			} else {
				System.out.println("selectionEntity is NULL");
			}
		}

		/* Fetch Search from Cache */
		SearchEntity searchBE = VertxUtils.getObject(serviceToken.getRealm(), "", targetCode, SearchEntity.class, serviceToken.getToken());

		/* Add Filter Column */
		AttributeText attributeFilterValue = new AttributeText("SCH_FILTER_VALUE", "Filter Value");
		searchBE.addAttribute(attributeFilterValue, 5.0, value);
        System.out.println("####  PRI_FILTER_VALUE Before");
        System.out.println("####  searchBE: "+  JsonUtils.toJson(searchBE));
        System.out.println("####  searchBE.getCode(): "+  searchBE.getCode());
		/* Update Search in Cache */
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());
        System.out.println("####  PRI_FILTER_VALUE After");
        System.out.println("####  searchBE: "+  JsonUtils.toJson(searchBE));
        System.out.println("####  searchBE.getCode(): "+  searchBE.getCode());
		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */

		update(output);

		System.out.println("End of " + drools.getRule().getName());
end
