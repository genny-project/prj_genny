package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import java.util.List;
import java.util.ArrayList;

rule "RETURN_ATTRIBUTE_VALUE"
    ruleflow-group 'DataProcessing'
    salience 200 
    no-loop true
    when
		beUtils : BaseEntityUtils()
		userToken : GennyToken( code != "PER_SERVICE")
		serviceToken : GennyToken( code == "PER_SERVICE")
		answer : Answer( 
			(
				attributeCode == "LNK_FILTER_COLUMN" ||
				attributeCode == "LNK_FILTER_OPTION" ||
				attributeCode matches "PRI_FILTER_VALUE_.*" ||
				attributeCode == "LNK_SELECT_COUNTRY" ||
				attributeCode == "LNK_SELECT_STATE"
			)
			&& targetCode matches "SBE_.*" 
			)
		output : OutputParam( )
		answersToSave : Answers()
	then
		System.out.println("Rule -> " + drools.getRule().getName() + " : " + answer); 

		String targetCode = answer.getTargetCode();
		System.out.println("targetCode = " + targetCode);

		String attributeCode = answer.getAttributeCode();
		System.out.println("attributeCode = " + attributeCode);

		String value = answer.getValue();
		System.out.println("value = " + value);

		/* Send val to FE */
		Answer answerColumn = new Answer(userToken.getUserCode(), targetCode, attributeCode, value);
		VertxUtils.sendToFrontEnd(userToken, answerColumn);

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */

		update(output);

end
