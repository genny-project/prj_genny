package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import com.google.gson.reflect.TypeToken;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.VertxUtils;
import life.genny.utils.TableUtils;
import life.genny.models.TableData;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.Ask;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.OutputParam;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;
import life.genny.qwanda.message.QCmdMessage;



rule "PRI_SEARCH_TEXT"
	ruleflow-group 'DataProcessing'
	salience 450
	no-loop true
    when
    	$message : QEventMessage(data.code matches "ACT_SEARCH_DASHBOARD")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		beUtils : BaseEntityUtils()

     then

  		System.out.println("Rule -> "+drools.getRule().getName()+" :  user=" + beUtils.getGennyToken().getUserCode());


		/* get current search */
		TableUtils tableUtils = new TableUtils(beUtils);

		
 		/* send the table display message out  */
			QCmdMessage msg = new QCmdMessage("DISPLAY", "PROCESS");
			msg.setToken(beUtils.getGennyToken().getToken());
			msg.setSend(true);
			VertxUtils.writeMsg("webcmds",msg);
			long totalTime = null'

			System.out.println("total took " + (totalTime) + " ms");
		retract($message);

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		update(output);
end
