package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import com.google.gson.reflect.TypeToken;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.VertxUtils;
import life.genny.utils.TableUtils;
import life.genny.models.TableData;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.Ask;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.OutputParam;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;


import java.util.List;
import java.util.ArrayList;

rule "PRI_SEARCH_TEXT"
    ruleflow-group 'DataProcessing'
        salience 500 
    when
      beUtils : BaseEntityUtils()
	  serviceToken : GennyToken( code == "PER_SERVICE") 
	  answer : Answer( attributeCode == "PRI_SEARCH_TEXT" )
	  output : OutputParam( )
	  
     then
  		System.out.println("Rule -> "+drools.getRule().getName()+" :  user=" + beUtils.getGennyToken().getUserCode()+" : "+answer); 
 	     
 	    ShowFrame.display(beUtils.getGennyToken(), "FRM_TABLE_VIEW", "FRM_CONTENT", "Test");
 		TableUtils.performSearch(serviceToken , beUtils, "SBE_SEARCHBAR", answer);
  	     
  	     /* Send to front end */
   	     
  	     output.setTypeOfResult("NONE");
  	     output.setResultCode("NONE");  /* dont display anything new */
  	    
		retract(answer);
		 update(output);
	
end
