package life.genny.rules;

import life.genny.qwanda.rule.RuleDetails;

import life.genny.qwanda.Answers;

import life.genny.qwanda.Answer;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAttributeMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import life.genny.utils.RulesUtils;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.model.OutputParamTreeSet;


rule "SETTING_ROLE"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		userToken : GennyToken ( code != "PER_SERVICE" )
		beUtils : BaseEntityUtils()
		serviceToken : GennyToken( code == "PER_SERVICE") 
		answer : Answer( attributeCode == "LNK_USER_ROLE" )
		answersToSave : Answers()
		output : OutputParam( )
		ruleDetails : RuleDetails()
    then
	
		System.out.println(ruleDetails+" "+drools.getRule().getName()+"Processing Answer/Data : " + answer );
	
		try{
			
			/* getting role selecter value */
			BaseEntity selectedRole = beUtils.getBaseEntityByCode(answer.getValue());
			
			/* User Roles Attribute */
			System.out.println(answer.getAttributeCode());
			String userRoleAttribute = (answer.getAttributeCode()).replace("SEL_ROLE_", "PRI_IS_");
			System.out.println("*********" + userRoleAttribute);
			
			/* getting user baseEntity */
			BaseEntity userBe = beUtils.getBaseEntityByCode(userToken.getUserCode());	
			
			/* creating answer */
			Answer answerRole = new Answer( userBe, userBe, userRoleAttribute, "TRUE" );
			
			answer.setChangeEvent(false); /* no attribute change */
			answersToSave.add(answerRole);
			
		}catch(Exception e){
		
			System.out.println("Unable to set Roles for user :: " + userToken.getUserCode());
			
			e.printStackTrace();
		}
		
		update(answersToSave);
		retract(answer);
end




	
