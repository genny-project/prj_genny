package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.entity.SearchEntity.Sort;
import life.genny.qwanda.entity.SearchEntity.StringFilter;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.text.WordUtils;
import org.apache.commons.lang3.StringUtils;
import java.util.Optional;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;


rule "PRI_DEVICE"
    ruleflow-group 'DataProcessing'
        salience 7000 
        no-loop
    when
      beUtils : BaseEntityUtils()
	  serviceToken : GennyToken( code == "PER_SERVICE") 
	  answer : Answer( attributeCode matches "PRI_DEVICE_.*" )
	  answersToSave : Answers()
	  output : OutputParam( )
     then
 		System.out.println("Rule -> "+drools.getRule().getName()+" :  user=" + beUtils.getGennyToken().getUserCode()+" : "+answer); 
		String sourceCode = beUtils.getGennyToken().getUserCode();
		String targetCode = answer.getTargetCode();
		
		BaseEntity user = beUtils.getBaseEntityByCode(targetCode);

		answeersToSave.add(new Answer(sourceCode, targetCode, answer.getAttributeCode(), answer.getValue(),false,true));	

		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
		
		retract(answer); 
		update(answersToSave);
	
end
