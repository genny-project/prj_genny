package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.JsonUtils;
import org.apache.commons.lang3.text.WordUtils;

import java.util.List;
import java.util.ArrayList;
import org.apache.commons.lang3.StringUtils;



rule "PRI_ABN"
    ruleflow-group 'DataProcessing'
        salience 5000 
    when
      beUtils : BaseEntityUtils()
	  answer : Answer( attributeCode == "PRI_ABN" )
	  output : OutputParam( )
	  answersToSave : Answers()
	  ruleDetails : RuleDetails()
	  
     then
 		System.out.println(ruleDetails+" "+drools.getRule().getName()+" user=" + beUtils.getGennyToken().getUserCode()+" : "+answer); 
		
		/* check if abn is valid */
		
			String abn = StringUtils.deleteWhitespace(answer.getValue());
			
		
			if (QwandaUtils.isValidAbnFormat(abn)) {
				System.out.println("This abn "+answer.getValue()+" is good");
				answer.setValue(abn);
				answersToSave.add(answer);
			}	else {
					String message = "ABN "+answer.getValue()+" is an invalid ABN format";
					System.out.println(message);
					Answer feedbackAnswer = new Answer(answer.getSourceCode(),answer.getTargetCode(),answer.getAttributeCode(),"");
					VertxUtils.sendFeedbackError(beUtils.getGennyToken(),feedbackAnswer,message);
					System.out.println("Sent error message back to frontend");		
			}
			retract(answer);
			
			
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
		
	
end
