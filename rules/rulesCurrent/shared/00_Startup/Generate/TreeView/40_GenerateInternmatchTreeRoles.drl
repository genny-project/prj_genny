package life.genny.rules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;

/* TODO: Need to remove this internmatch specific rules to internmatch prj folder later, its kept here in shared folder only because
 * there is issue with startup rules being fired only from shared folder.
 * It will be moved once this issue is solved.
 */
rule "Generate internmatch Tree Roles"

    ruleflow-group 'GenerateTree'
    salience 680

     when
       rules: QRules( realm() == "internmatch" && isState("GENERATE_TREE_RULES") && !isState("LOOP_GENERATE_TREE_RULES") )
     then
     	
     	rules.header();
        rules.setState("LOOP_GENERATE_TREE_RULES");
	rules.println("Generating specific Tree Roles for "+rules.realm()+" IN GENNY");
	
	List<Answer> answers = new ArrayList<Answer>();
		
	/* Roles related to TreeView Root */
	
        answers.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_DASHBOARD", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_INTERNS", "PRI_IS_SUPERVISOR,PRI_IS_EDU_PROVIDER_STAFF"));
        answers.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_COMPANIES", "PRI_IS_AGENT")); /* referrer */
        answers.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_INTERNSHIPS", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_CONTACTS", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_PREFERENCES", "PRI_IS_AGENT,PRI_IS_SUPERVISOR")); /* referrer */

        /* contacts */
        answers.add(new Answer("GRP_CONTACTS", "GRP_CONTACTS", "GRP_INTERNS", "PRI_IS_SUPERVISOR,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_CONTACTS", "GRP_CONTACTS", "GRP_HOST_COMPANY_REPRESENTATIVES", "PRI_IS_AGENT")); /* referrer */
        answers.add(new Answer("GRP_CONTACTS", "GRP_CONTACTS", "GRP_EDU_PROVIDER_REPRESENTATIVES", "PRI_IS_SUPERVISOR"));
        answers.add(new Answer("GRP_CONTACTS", "GRP_CONTACTS", "GRP_AGENTS", "PRI_IS_SUPERVISOR"));


        /* Roles related to Bucket GRP_INTERNSHIPS */
        answers.add(new Answer("GRP_INTERNSHIPS", "GRP_INTERNSHIPS", "GRP_ACTIVE", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_INTERNSHIPS", "GRP_INTERNSHIPS", "GRP_OFFERED", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_INTERNSHIPS", "GRP_INTERNSHIPS", "GRP_PLACED", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_INTERNSHIPS", "GRP_INTERNSHIPS", "GRP_IN_PROGRESS", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_INTERNSHIPS", "GRP_INTERNSHIPS", "GRP_COMPLETED", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */

        /* Roles related to TreeView Companies */
        answers.add(new Answer("GRP_COMPANIES", "GRP_COMPANIES", "GRP_HOST_COMPANIES", "PRI_IS_AGENT")); /* referrer */
        answers.add(new Answer("GRP_COMPANIES", "GRP_COMPANIES", "GRP_EDU_PROVIDERS", "PRI_IS_SUPERVISOR"));
        answers.add(new Answer("GRP_COMPANIES", "GRP_COMPANIES", "GRP_AGENCIES", "PRI_IS_SUPERVISOR"));


        /* Roles related to Bucket GRP_APPLICATIONS */
        /* answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_NOT_APPLIED", "PRI_IS_EDU_PROVIDER_STAFF")); */
        answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_APPLIED", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_SHORTLISTED", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_INTERVIEWS", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_OFFERED", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_PLACED", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        answers.add(new Answer("GRP_APPLICATIONS", "GRP_APPLICATIONS", "GRP_IN_PROGRESS", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */

        /* Preferences */
        answers.add(new Answer("GRP_PREFERENCES", "GRP_PREFERENCES", "GRP_INTERNSHIP_TEMPLATES", "PRI_IS_SUPERVISOR,PRI_IS_AGENT")); /* referrer */

        /* Roles related to Bucket GRP_BEGS */
        answers.add(new Answer("GRP_BEGS", "GRP_BEGS", "GRP_NEW_ITEMS", "PRI_IS_AGENT,PRI_IS_SELLER,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF")); /* referrer */
        
        /* Roles related to GRP_INTERNS */
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_NOT_APPLIED", "PRI_IS_AGENT"));
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_APPLIED", "PRI_IS_AGENT"));
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_SHORTLISTED", "PRI_IS_AGENT"));
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_INTERVIEWS", "PRI_IS_AGENT"));
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_OFFERED", "PRI_IS_AGENT"));
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_PLACED", "PRI_IS_AGENT"));
        answers.add(new Answer("GRP_INTERNS", "GRP_INTERNS", "GRP_IN_PROGRESS", "PRI_IS_AGENT"));
        
        rules.baseEntity.saveAnswers(answers,false); /* no attribute changes needed */
        
        rules.footer();
end
