package life.genny.rules;
import life.genny.rules.QRules;

rule "Trigger Send Card"
	when
		rules: QRules(  isState("TRIGGER_SEND_CARD") &&
						!isState("LOOP_TRIGGER_SEND_CARD"))
	 then
	 	rules.header();
		rules.setState("LOOP_TRIGGER_SEND_CARD");

		/* create frames */
        BaseEntity frameContent = new BaseEntity("FRM_CONTENT", "frame-content");
        BaseEntity frameCard = new BaseEntity("FRM_CARD", "frame-card");
        BaseEntity frameLeftCard = new BaseEntity("FRM_CARD_LEFT", "frame-card-left");
        BaseEntity frameCentreCard = new BaseEntity("FRM_CARD_CENTRE", "frame-card-centre");
        BaseEntity frameRightCard = new BaseEntity("FRM_CARD_RIGHT", "frame-card-right");

		/* themes */
		BaseEntity horizontalThemeBe = rules.baseEntity.getBaseEntityByCode("THM_DISPLAY_HORIZONTAL");
		BaseEntity verticalThemeBe = rules.baseEntity.getBaseEntityByCode("THM_DISPLAY_VERTICAL");
		BaseEntity imageFitThemeBe = rules.baseEntity.getBaseEntityByCode("THM_IMAGE_FIT");
		BaseEntity visualBaseEntity = rules.baseEntity.getBaseEntityByCode("THM_TABLE_ACTIONS_VISUAL_CONTROL");
		BaseEntity moreVerticalIconBe = rules.baseEntity.getBaseEntityByCode("ICN_MORE_VERTICAL");
		BaseEntity expandableThemeBe = rules.baseEntity.getBaseEntityByCode("THM_EXPANDABLE");

		BaseEntity elementHeightFitThemeBe = ContextUtils.getElementHeightFitTheme();
		BaseEntity cardContainerThemeBe = ContextUtils.getCardContainerTheme();
		BaseEntity cardContentExpandableThemeBe = ContextUtils.getCardContentExpandTheme();
		BaseEntity centreCardThemeBe = ContextUtils.getCentreCardTheme();
		BaseEntity scrollThemeBe = ContextUtils.getThemeForTableScroll();
		BaseEntity mainCardThemeBe = ContextUtils.getMainCardTheme();

		QDataBaseEntityMessage elementHeightFitThemeBeMsg = new QDataBaseEntityMessage(elementHeightFitThemeBe);
		rules.publishCmd(elementHeightFitThemeBeMsg);

		QDataBaseEntityMessage cardContainerThemeBeMsg = new QDataBaseEntityMessage(cardContainerThemeBe);
		rules.publishCmd(cardContainerThemeBeMsg);

		QDataBaseEntityMessage cardContentExpandableThemeBeMsg = new QDataBaseEntityMessage(cardContentExpandableThemeBe);
		rules.publishCmd(cardContentExpandableThemeBeMsg);

		QDataBaseEntityMessage centreCardThemeBeMsg = new QDataBaseEntityMessage(centreCardThemeBe);
		rules.publishCmd(centreCardThemeBeMsg);

		QDataBaseEntityMessage scrollThemeBeMsg = new QDataBaseEntityMessage(scrollThemeBe);
		rules.publishCmd(scrollThemeBeMsg);

		QDataBaseEntityMessage mainCardThemeBeMsg = new QDataBaseEntityMessage(mainCardThemeBe);
		rules.publishCmd(mainCardThemeBeMsg);

		rules.publishBaseEntityByCode(expandableThemeBe.getCode());
		rules.publishBaseEntityByCode(horizontalThemeBe.getCode());
		rules.publishBaseEntityByCode(verticalThemeBe.getCode());
		rules.publishBaseEntityByCode(imageFitThemeBe.getCode());

		/* asks */
		Ask imgAsk = rules.createVirtualAsk("QUE_IMAGE", "Image", "PRI_IMAGE_URL", rules.getUser().getCode(), rules.getUser().getCode()
		);
		imgAsk = rules.createVirtualContext(imgAsk, imageFitThemeBe, ContextType.THEME);

		Ask fNameAsk = rules.createVirtualAsk("QUE_FIRSTNAME", "First Name", "PRI_FIRSTNAME", rules.getUser().getCode(), rules.getUser().getCode());
		Ask lNameAsk = rules.createVirtualAsk("QUE_LASTNAME", "Last Name", "PRI_LASTNAME", rules.getUser().getCode(), rules.getUser().getCode());
		Ask emailAsk = rules.createVirtualAsk("QUE_EMAIL", "Email", "PRI_EMAIL", rules.getUser().getCode(), rules.getUser().getCode());
		Ask mobileAsk = rules.createVirtualAsk("QUE_MOBILE", "Mobile", "PRI_MOBILE", rules.getUser().getCode(), rules.getUser().getCode());
		Ask optionsAsk = rules.createVirtualAsk("QUE_CARD_OPTIONS", "Options", "PRI_EVENT", rules.getUser().getCode(), rules.getUser().getCode());
		optionsAsk = rules.createVirtualContext(optionsAsk, moreVerticalIconBe, ContextType.ICON, VisualControlType.VCL_ICON);
		optionsAsk = rules.createVirtualContext(optionsAsk, visualBaseEntity, ContextType.THEME, VisualControlType.VCL_INPUT);
		optionsAsk = rules.createVirtualContext(optionsAsk, expandableThemeBe, ContextType.THEME);

		Ask editAsk = rules.createVirtualAsk("QUE_EDIT", "Edit", "PRI_NAME", rules.getUser().getCode(), rules.getUser().getCode());
		Ask deleteAsk = rules.createVirtualAsk("QUE_DELETE", "Delete", "PRI_FIRSTNAME", rules.getUser().getCode(), rules.getUser().getCode());
		Ask moveAsk = rules.createVirtualAsk("QUE_MOVE", "Move", "PRI_FIRSTNAME", rules.getUser().getCode(), rules.getUser().getCode());
		List<Ask> optionsAskList = Arrays.asList( editAsk, deleteAsk, moveAsk);
		rules.setChildAsks(optionsAsk, optionsAskList);


		Ask cardLeftAsk = rules.createVirtualAsk("QUE_CARD_LEFT_GRP", "Card Left", "QQQ_QUESTION_GROUP", rules.getUser().getCode(), rules.getUser().getCode());
		Ask cardCentreAsk = rules.createVirtualAsk("QUE_CARD_CENTRE_GRP", "Card Centre", "QQQ_QUESTION_GROUP", rules.getUser().getCode(), rules.getUser().getCode());
		Ask cardRightAsk = rules.createVirtualAsk("QUE_CARD_RIGHT_GRP", "Card Right", "QQQ_QUESTION_GROUP", rules.getUser().getCode(), rules.getUser().getCode());

		/* link asks */
		rules.setChildAsks(cardLeftAsk, imgAsk);
		List<Ask> centreAskList = Arrays.asList( fNameAsk, lNameAsk, emailAsk, mobileAsk);
		rules.setChildAsks(cardCentreAsk, centreAskList);
		rules.setChildAsks(cardRightAsk, optionsAsk);

		/* send asks */
		rules.sendAsk(cardLeftAsk);
		rules.sendAsk(cardCentreAsk);
		rules.sendAsk(cardRightAsk);

		/* links */
		frameLeftCard = rules.createVirtualLink(frameLeftCard, cardLeftAsk, "LNK_ASK", "NORTH");
		frameCentreCard = rules.createVirtualLink(frameCentreCard, cardCentreAsk, "LNK_ASK", "NORTH");
		frameCentreCard = rules.createVirtualLink(frameCentreCard, centreCardThemeBe, "LNK_THEME", "NORTH", 1.0);
		frameRightCard = rules.createVirtualLink(frameRightCard, cardRightAsk, "LNK_ASK", "NORTH");

		frameCard = rules.createVirtualLink(frameCard, frameLeftCard, "LNK_FRAME", "WEST", 1.0);
		frameCard = rules.createVirtualLink(frameCard, frameCentreCard, "LNK_FRAME", "CENTRE", 1.0);
		frameCard = rules.createVirtualLink(frameCard, frameRightCard, "LNK_FRAME", "EAST", 1.0);
		frameCard = rules.createVirtualLink(frameCard, cardContainerThemeBe, "LNK_THEME", "WRAPPER", 1.0);
		frameCard = rules.createVirtualLink(frameCard, mainCardThemeBe, "LNK_THEME", "WRAPPER", 1.0);

		frameContent = rules.createVirtualLink(frameContent, verticalThemeBe, "LNK_THEME", "NORTH", 1.0);
		frameContent = rules.createVirtualLink(frameContent, scrollThemeBe, "LNK_THEME", "NORTH", 1.0);

		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 1.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 2.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 3.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 4.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 5.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 6.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 7.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 8.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 9.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 10.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 11.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 12.0);
		frameContent = rules.createVirtualLink(frameContent, frameCard, "LNK_FRAME", "NORTH", 13.0);

		/* publish frames */
		QDataBaseEntityMessage frameCardMsg = new QDataBaseEntityMessage(frameCard);
		frameCardMsg.setReplace(true);
		rules.publishCmd(frameCardMsg);

		QDataBaseEntityMessage frameLeftCardMsg = new QDataBaseEntityMessage(frameLeftCard);
		frameLeftCardMsg.setReplace(true);
		rules.publishCmd(frameLeftCardMsg);

		QDataBaseEntityMessage frameCentreCardMsg = new QDataBaseEntityMessage(frameCentreCard);
		frameCentreCardMsg.setReplace(true);
		rules.publishCmd(frameCentreCardMsg);

		QDataBaseEntityMessage frameRightCardMsg = new QDataBaseEntityMessage(frameRightCard);
		frameRightCardMsg.setReplace(true);
		rules.publishCmd(frameRightCardMsg);

		QDataBaseEntityMessage frameContentMsg = new QDataBaseEntityMessage(frameContent);
		frameContentMsg.setReplace(true);
		rules.publishCmd(frameContentMsg);

		rules.publishCmd(rules.getUser(), "USER");
		rules.footer();
end