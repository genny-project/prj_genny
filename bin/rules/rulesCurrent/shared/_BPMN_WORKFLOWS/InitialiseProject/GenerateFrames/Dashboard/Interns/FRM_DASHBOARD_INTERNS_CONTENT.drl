package life.genny.rules;


global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;

rule "FRM_DASHBOARD_INTERNS_CONTENT"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_DASHBOARD_INTERNS_CONTENT")
      serviceToken : GennyToken( code == "PER_SERVICE")
      FRM_COUNT_ALL_INTERNS : Frame3 ( code == "FRM_COUNT_ALL_INTERNS" )
      FRM_COUNT_AVAILABLE_INTERNS  : Frame3 ( code == "FRM_COUNT_AVAILABLE_INTERNS" )
      FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNS : Frame3 ( code == "FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNS" )
      FRM_COUNT_OFFERED_INTERNS : Frame3 ( code == "FRM_COUNT_OFFERED_INTERNS" )
      FRM_COUNT_PLACED_INTERNS   : Frame3 ( code == "FRM_COUNT_PLACED_INTERNS" )
      FRM_COUNT_IN_PROGRESS_INTERNS   : Frame3 ( code == "FRM_COUNT_IN_PROGRESS_INTERNS" )
      FRM_COUNT_COMPLETED_INTERNS   : Frame3 ( code == "FRM_COUNT_COMPLETED_INTERNS" )
    then
      System.out.println("   Generate FRM_DASHBOARD_INTERNS_CONTENT Rule  "+serviceToken.getUserCode());

      Frame3 frame = Frame3.builder("FRM_DASHBOARD_INTERNS_CONTENT")
                      .addTheme("THM_DASHBOARD_CONTENT_WRAPPER", ThemePosition.WRAPPER, serviceToken).end()
                      .addTheme("THM_DASHBOARD_CONTENT_NORTH", ThemePosition.NORTH, serviceToken).end()
                      .addFrame(FRM_COUNT_ALL_INTERNS, FramePosition.NORTH).end()
                      .addFrame(FRM_COUNT_AVAILABLE_INTERNS, FramePosition.NORTH).end()
                      .addFrame(FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNS, FramePosition.NORTH).end()
                      .addFrame(FRM_COUNT_OFFERED_INTERNS, FramePosition.NORTH).end()
                      .addFrame(FRM_COUNT_PLACED_INTERNS, FramePosition.NORTH).end()
                      .addFrame(FRM_COUNT_IN_PROGRESS_INTERNS, FramePosition.NORTH).end()
                      .addFrame(FRM_COUNT_COMPLETED_INTERNS, FramePosition.NORTH).end()
                      .build();

      frame.setRealm(serviceToken.getRealm());

      insert (frame);

      /* Process and save to cache */
      FrameUtils2.toMessage(frame, serviceToken);

end
