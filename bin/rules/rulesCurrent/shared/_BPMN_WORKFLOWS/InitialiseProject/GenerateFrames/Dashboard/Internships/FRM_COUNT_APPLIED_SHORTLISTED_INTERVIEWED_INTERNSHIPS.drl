package life.genny.rules;


global org.apache.logging.log4j.Logger log;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.models.Frame3;
import life.genny.models.Theme;
import life.genny.utils.FrameUtils2;
import life.genny.models.FramePosition;
import life.genny.qwanda.VisualControlType;

rule "FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNSHIPS"
    ruleflow-group 'GenerateFrames'

    when
      not  Frame3(code == "FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNSHIPS")
      serviceToken : GennyToken( code == "PER_SERVICE")
    then
      System.out.println("   Generate FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNSHIPS Rule  "+serviceToken.getUserCode());

      Frame3 frame = Frame3.builder("FRM_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNSHIPS")
                      .addTheme("THM_DASHBOARD_ITEM", ThemePosition.WRAPPER, serviceToken).end()
                      .addTheme("THM_DASHBOARD_ITEM_COLOR", serviceToken).end()
                      .question("QUE_COUNT_APPLIED_SHORTLISTED_INTERVIEWED_INTERNSHIPS")
                        .addTheme("THM_DASHBOARD_ITEM_WRAPPER", serviceToken).vcl(VisualControlType.VCL_WRAPPER).end()
                        .addTheme("THM_DASHBOARD_ITEM_INPUT", serviceToken).vcl(VisualControlType.VCL_INPUT).end()
                        .addTheme("THM_DASHBOARD_ITEM_LABEL", serviceToken).vcl(VisualControlType.VCL_LABEL).end()
                        .addTheme("THM_DASHBOARD_ITEM_BEHAVIOUR", serviceToken).end()
                      .end()
                      .build();

      frame.setRealm(serviceToken.getRealm());

      insert (frame);

      /* Process and save to cache */
      FrameUtils2.toMessage(frame, serviceToken);

end
